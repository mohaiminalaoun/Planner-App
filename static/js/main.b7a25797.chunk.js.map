{"version":3,"sources":["MenuItems.js","contextMenus/withContextMenu.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","contextMenus/TaskContextMenu.js","contextMenus/ContextMenuContainer.js","db.js","TaskModal.js","Dashboard.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js"],"names":["MenuItems","props","options","menuOptionsList","map","item","ListGroup","Item","className","key","text","onClick","divStyle","left","tempPosition","window","screen","width","top","id","style","withHOC","OriginalComponent","this","name","React","Component","Form","Group","controlId","FormControl","onChange","changeURLFn","value","currentURL","placeholder","aria-label","aria-describedby","changeURLTextFn","currentURLText","Button","variant","saveFn","closeFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","marginRight","cancelDelete","deleteTask","tempTask","InputGroup","changeFn","curDeadline","Append","ContextMenuContainer","displayAllContextMenus","displaySortingOptionsMenu","displayTaskCtxMenu","endTimeCloseFn","displayDeleteCtxMenu","displayLinkCtxMenu","displayLabelCtxMenu","linkCloseFn","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","console","log","put","userName","endTime","end","richText","then","state","Modal","show","onHide","centered","Header","closeButton","Title","Body","Label","Moment","currentModalTaskEnd","format","onRichTextChange","Footer","Dashboard","start","Date","subtract","add","dates","firstDate","lastDate","dateSet","d","date","count","setState","startDate","endDate","values","titleForValue","v","App","componentDidMount","localStorage","getItem","responseFacebook","res","Set","setItem","each","rec","url","urlText","progressState","facebookLoginDispatch","loggedin","logOutFacebook","removeItem","FB","logout","addToList","curTask","trim","length","closeAllCtxMenus","displayCurtain","handleInputChange","target","i","slice","concat","delete","showDeadlineContextMenu","clientX","clientY","parseInt","Number","isInteger","_d","firstMatch","saveLinkFn","deadlineChangeFn","changeProgressState","param","parentElement","classList","remove","showColors","curState","shouldShowColors","openTaskModal","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","curLabel","stateLabels","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","diff","undefined","showSortingOptionsMenu","showDeleteContextMenu","render","listId","badgeOptions","defaultChecked","currentTask","sortingOptions","href","Accordion","defaultActiveKey","Card","Toggle","eventKey","ProgressBar","striped","now","Collapse","appId","autoLoad","callback","cssClass","fields","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ohBAoCeA,EA/BG,SAAAC,GAChB,IAAMC,EAAUD,EAAME,gBAAgBC,KAAI,SAAAC,GACtC,OACE,kBAACC,EAAA,EAAUC,KAAX,CACEC,UAAU,aACVC,IAAKJ,EAAKK,KACVC,QAASN,EAAKM,SAEbN,EAAKK,SAIZE,EAAW,CACTC,KACEZ,EAAMa,aAAa,GAAK,IAAMC,OAAOC,OAAOC,MACxChB,EAAMa,aAAa,GAAK,KACxBb,EAAMa,aAAa,GAAK,IAAM,KACpCI,IAAKjB,EAAMa,aAAa,GAAK,MAEjC,OACE,kBAACR,EAAA,EAAD,CAAWE,UAAU,YAAYW,GAAG,YAAYC,MAAOR,GACpDV,ICDQmB,G,cAvBC,SAAAC,GAoBd,OApBmC,iLAG3B,IAAErB,EAAUsB,KAAVtB,MACJW,EAAW,CACTC,KACEZ,EAAMa,aAAa,GAAK,IAAMC,OAAOC,OAAOC,MACxChB,EAAMa,aAAa,GAAK,KACxBb,EAAMa,aAAa,GAAK,IAAM,KACpCI,IAAKjB,EAAMa,aAAa,GAAK,MAEjC,OACE,kBAACQ,EAAD,iBACMC,KAAKtB,MADX,CAEEW,SAAUA,EACVY,KAAK,kBAfsB,GACRC,IAAMC,a,2BCmDpBL,KAhDS,SAAApB,GACtB,OACE,yBAAKO,UAAU,kBAAkBY,MAAOnB,EAAMW,UAC5C,kBAACe,EAAA,EAAD,CAAMnB,UAAU,QACd,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACC,EAAA,EAAD,CACEC,SAAU9B,EAAM+B,YAChBC,MAAOhC,EAAMiC,WACbC,YAAY,UACZC,aAAW,UACXC,mBAAiB,kBAGrB,kBAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACC,EAAA,EAAD,CACEC,SAAU9B,EAAMqC,gBAChBL,MAAOhC,EAAMsC,eACbJ,YAAY,mBACZC,aAAW,mBACXC,mBAAiB,kBAGrB,6BACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,UACRjC,UAAU,mBACVG,QAASV,EAAMyC,QAHjB,MAOA,kBAACF,EAAA,EAAD,CAAQC,QAAQ,YAAY9B,QAASV,EAAM0C,SAA3C,gB,kBCiDKtB,KA9EU,SAAApB,GACvB,IASE2C,EATmB,CACjB,YACA,UACA,SACA,UACA,OACA,QACA,QAEuBxC,KAAI,SAACC,EAAMwC,GAAP,OAC3B,yBACEpC,IAAKoC,EACLrC,UACE,eACAH,GACCwC,IAAQ5C,EAAM6C,iBAAmB,WAAa,IAEjDnC,QAAS,WACPV,EAAM8C,uBAAuBF,SAInCG,EAAiB,GACnB/C,EAAMgD,OAAOC,SAAQ,SAAAC,GACnBH,EAAeI,KAAKD,MAGtB,IAAME,EAAqB,SAAAC,GACzBrD,EAAMsD,0BAA0BD,EAAGE,cAAcC,aAAa,WAE5DtC,GAAM,EACJuC,EAAwBV,EAAe5C,KAAI,SAAA+C,GAE/C,OADAhC,IAEE,kBAACwC,EAAA,EAAD,CACElD,IAAKU,EACLX,UAAU,gBACViC,QAAQ,UACR9B,QAAS0C,EACTpB,MAAOkB,GAENA,MAIP,OACE,yBAAK3C,UAAU,mBAAmBY,MAAOnB,EAAMW,UAC7C,kBAACe,EAAA,EAAD,CAAMnB,UAAU,QACd,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACC,EAAA,EAAD,CACEK,YAAY,QACZC,aAAW,UACXC,mBAAiB,eACjBJ,MAAOhC,EAAM2D,aACb7B,SAAU9B,EAAM4D,sBAGpB,wBAAIrD,UAAU,2BAAd,gBACA,yBAAKA,UAAU,mBAAmBoC,GAClC,yBAAKpC,UAAU,sBAAsBkD,EAArC,KACA,6BACE,kBAAClB,EAAA,EAAD,CACEC,QAAQ,UACRjC,UAAU,mBACVG,QAASV,EAAM6D,WAHjB,MAOA,kBAACtB,EAAA,EAAD,CAAQC,QAAQ,YAAY9B,QAASV,EAAM8D,iBAA3C,gBCjDK1C,G,OAAAA,GAtBW,SAAApB,GAIxB,OACE,yBAAKO,UAAU,oBAAoBY,MAAOnB,EAAMW,UAC9C,2EACA,kBAAC4B,EAAA,EAAD,CACEpB,MAPmB,CACvB4C,YAAa,OAOTxD,UAAU,eACViC,QAAQ,YACR9B,QAASV,EAAMgE,cAJjB,UAQA,kBAACzB,EAAA,EAAD,CAAQC,QAAQ,SAAS9B,QAAS,kBAAMV,EAAMiE,WAAWjE,EAAMkE,YAA/D,oB,kBCkBS9C,KAhCS,SAAApB,GACtB,OACE,yBAAKO,UAAU,kBAAkBY,MAAOnB,EAAMW,UAC5C,kBAACwD,EAAA,EAAD,CAAY5D,UAAU,QACpB,kBAACsB,EAAA,EAAD,CACEC,SAAU9B,EAAMoE,SAChBpC,MAAOhC,EAAMqE,YACbnC,YAAY,uBACZC,aAAW,uBACXC,mBAAiB,kBAGrB,kBAAC+B,EAAA,EAAWG,OAAZ,KACE,kBAAC/B,EAAA,EAAD,CACEhC,UAAU,qBACVG,QAASV,EAAM0C,QACfF,QAAQ,qBAHV,cCoFO+B,E,YA9Fb,WAAYvE,GAAQ,qEACZA,I,sEAEE,IAAD,EA8BHsB,KAAKtB,MA5BPwE,EAFK,EAELA,uBACA3D,EAHK,EAGLA,aACAX,EAJK,EAILA,gBACAuE,EALK,EAKLA,0BACAC,EANK,EAMLA,mBACAC,EAPK,EAOLA,eACAP,EARK,EAQLA,SACAC,EATK,EASLA,YACAO,EAVK,EAULA,qBACAC,EAXK,EAWLA,mBACAC,EAZK,EAYLA,oBACAC,EAbK,EAaLA,YACAtC,EAdK,EAcLA,OACAR,EAfK,EAeLA,WACAK,EAhBK,EAgBLA,eACAD,EAjBK,EAiBLA,gBACAN,EAlBK,EAkBLA,YACA8B,EAnBK,EAmBLA,UACAF,EApBK,EAoBLA,aACAG,EArBK,EAqBLA,gBACAI,EAtBK,EAsBLA,SACAN,EAvBK,EAuBLA,mBACAf,EAxBK,EAwBLA,iBACAC,EAzBK,EAyBLA,uBACAE,EA1BK,EA0BLA,OACAM,EA3BK,EA2BLA,0BACAW,EA5BK,EA4BLA,WACAD,EA7BK,EA6BLA,aAEF,OACE,oCACGQ,EACC,kBAAC,EAAD,CACE3D,aAAcA,EACdX,gBAAiBA,IAEjB,KACHuE,EACC,kBAAC,EAAD,CACE5D,aAAcA,EACdX,gBAAiBA,IAEjB,KACHwE,EACC,kBAAC,EAAD,CACEhC,QAASiC,EACTP,SAAUA,EACVC,YAAaA,EACbxD,aAAcA,IAEd,KACHgE,EACC,kBAAC,EAAD,CACEhE,aAAcA,EACd6B,QAASqC,EACTtC,OAAQA,EACRR,WAAYA,EACZK,eAAgBA,EAChBD,gBAAiBA,EACjBN,YAAaA,IAEb,KACH+C,EACC,kBAAC,EAAD,CACEjE,aAAcA,EACdgD,UAAWA,EACXF,aAAcA,EACdG,gBAAiBA,EACjBI,SAAUA,EACVN,mBAAoBA,EACpBf,iBAAkBA,EAClBC,uBAAwBA,EACxBE,OAAQA,EACRM,0BAA2BA,IAE3B,KACHsB,EACC,kBAAC,EAAD,CACE/D,aAAcA,EACdqD,SAAUA,EACVD,WAAYA,EACZD,aAAcA,IAEd,U,GAzFuBxC,IAAMC,W,2CCNnCuD,EAAK,I,OAAIC,GAAM,WACrBD,EAAGE,QAAQ,GAAGC,OAAO,CAAEC,MAAO,yBAEfJ,QCwEAK,E,YArEb,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KAMR0C,QAAU,WACR,IAAI4C,EAAU,KACd,EAAKtF,MAAMoF,MAAMnC,SAAQ,SAAAsC,GACnBA,EAAEC,OAAS,EAAKxF,MAAMyF,mBACxBH,EAAUC,MAGdP,EAAGI,MACAM,MAAM,QACNC,iBAAiB,EAAK3F,MAAMyF,kBAC5BG,OAAM,SAAAxF,GACDA,IACFyF,QAAQC,IAAR,cACAd,EAAGI,MAAMW,IAAI,CACXC,SAAU,EAAKhG,MAAMgG,SACrBR,KAAM,EAAKxF,MAAMyF,iBACjBQ,QAASX,EAAQY,IACjBC,SAAU,EAAKnG,MAAMmG,SACrBjF,GAAId,EAAKc,GACTgC,MAAO9C,EAAK8C,MACZL,iBAAkBzC,EAAKyC,uBAI5BuD,MAAK,WACJ,EAAKpG,MAAM0C,cA9Bf,EAAK2D,MAAQ,CACX5F,KAAMT,EAAMmG,UAAY,IAHT,E,sEAoCjB,IAAInG,EAAQsB,KAAKtB,MACjB,OACE,kBAACsG,EAAA,EAAD,CAAOC,KAAMvG,EAAMuG,KAAMC,OAAQxG,EAAMwG,OAAQC,UAAQ,GACrD,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,KAAc5G,EAAMyF,mBAEtB,kBAACa,EAAA,EAAMO,KAAP,KACE,kBAACnF,EAAA,EAAKC,MAAN,CAAYC,UAAU,gCACpB,kBAACF,EAAA,EAAKoF,MAAN,KACG9G,EAAMyF,kBACL,WAAasB,IAAO/G,EAAMgH,qBAAqBC,OAAO,SAGxD,kBAAC,IAAD,CACEjF,MAAOhC,EAAMmG,UAAY,GACzBrE,SAAU9B,EAAMkH,qBAKxB,kBAACZ,EAAA,EAAMa,OAAP,KACE,kBAAC5E,EAAA,EAAD,CAAQC,QAAQ,YAAY9B,QAASY,KAAKoB,SAA1C,SAGA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QAASY,KAAKoB,SAAxC,sB,GA7DclB,IAAMC,W,0BC0Df2F,G,mBAxDb,WAAYpH,GAAQ,IAAD,sBACjB,4CAAMA,IACN,IAAIqH,EAAQN,IAAO,IAAIO,MAClBC,SAAS,GAAI,QACbN,OAAO,cACVf,EAAMa,IAAO,IAAIO,MACdE,IAAI,IAAK,QACTP,OAAO,cAPK,OAQjB,EAAKZ,MAAQ,CACXoB,MAAO,GACPC,UAAWL,EACXM,SAAUzB,GAXK,E,iFAkBjB,IAAI0B,EAAU,GACZH,EAAQ,GAQV,IAAK,IAAII,KAPTvG,KAAKtB,MAAMoF,MAAMnC,SAAQ,SAAAsC,GACvB,GAAIA,EAAEW,IAAK,CACT,IAAI4B,EAAOf,IAAOxB,EAAEW,KAAKe,OAAO,cAChCW,EAAQE,GAAQF,EAAQE,GAAQF,EAAQE,GAAQ,EAAI,MAI1CF,EACZH,EAAMtE,KAAK,CACT2E,KAAMD,EACNE,MAAOH,EAAQC,KAGnBvG,KAAK0G,SAAS,CACZP,MAAOA,M,+BAKT,OACE,yBAAKlH,UAAU,aAGb,kBAAC,IAAD,CACE0H,UAAW,IAAIX,KAAKhG,KAAK+E,MAAMqB,WAAa,cAC5CQ,QAAS,IAAIZ,KAAKhG,KAAK+E,MAAMsB,UAAY,cACzCQ,OAAQ7G,KAAK+E,MAAMoB,MACnBW,cAAe,SAAAC,GACb,OAAOA,GAAC,UAAOA,EAAEP,KAAT,cAAmBO,EAAEN,MAArB,kB,GAjDIvG,IAAMC,Y,mCCgBxB6G,E,YACJ,WAAYtI,GAAQ,IAAD,8BACjB,4CAAMA,KAiFRuI,kBAAoB,WACkC,OAAhDzH,OAAO0H,aAAaC,QAAQ,iBAC9B,EAAKC,iBAAiB,CACpBnH,KAAMT,OAAO0H,aAAaC,QAAQ,mBArFrB,EA0FnBC,iBAAmB,SAAAC,GACjB,IAAIvD,EAAQ,GACVpC,EAAS,IAAI4F,IACf9H,OAAO0H,aAAaK,QAAQ,eAAgBF,EAAIpH,MAChDyD,EAAGI,MACAM,MAAM,YACNC,iBAAiBgD,EAAIpH,MACrBuH,MAAK,SAAAC,GACAA,EAAI7F,OACNF,EAAOwE,IAAIuB,EAAI7F,OAEjBkC,EAAMjC,KAAK,CACTqC,KAAMuD,EAAIvD,KACVU,IAAK6C,EAAI9C,QACT+C,IAAKD,EAAIC,IACTC,QAASF,EAAIE,QACbC,cAAeH,EAAIG,cACnBhG,MAAO6F,EAAI7F,MACXL,iBAAkBkG,EAAIlG,sBAGzBuD,MAAK,WACJ,EAAKpG,MAAMmJ,sBAAsB,CAC/BC,UAAU,EACVpD,SAAU2C,EAAIpH,OAEhB,EAAKyG,SAAS,CACZ5C,MAAOA,EACPpC,OAAQA,QAtHG,EA2HnBqG,eAAiB,WACfvI,OAAO0H,aAAac,WAAW,gBAC/BxI,OAAOyI,GAAGC,SACV,EAAKxJ,MAAMmJ,sBAAsB,CAC/BC,UAAU,EACVpD,SAAU,UAhIK,EAoInByD,UAAY,SAAApG,GACV,GAAI,EAAKgD,MAAMqD,QAAQC,OAAOC,QAAU,EAAG,CACzC,IAAIF,EAAU,EAAKrD,MAAMqD,QACrBtE,EAAQ,EAAKiB,MAAMjB,MACvBA,EAAMjC,KAAK,CACTqC,KAAMkE,IAER,EAAK1B,SAAS,CACZ5C,MAAOA,EACPsE,QAAS,KAEX1E,EAAGI,MAAMW,IAAI,CAAEC,SAAU,EAAKhG,MAAMgG,SAAUR,KAAMkE,MA/IrC,EAmJnBG,iBAAmB,WACjB,EAAK7B,SAAS,CACZxD,wBAAwB,EACxBC,2BAA2B,EAC3BqF,gBAAgB,EAChBlF,sBAAsB,KAxJP,EA4JnBmF,kBAAoB,SAAA1G,GAClB,EAAK2E,SAAS,CACZ0B,QAASrG,EAAG2G,OAAOhI,SA9JJ,EAkKnBiC,WAAa,SAAAC,GAIX,IAHA,IAEEtB,EAFEwC,EAAQ,EAAKiB,MAAMjB,MACrBsE,EAAUxF,EAEH+F,EAAI,EAAGA,EAAI7E,EAAMwE,OAAQK,IAChC,GAAI7E,EAAM6E,GAAGzE,OAASkE,EAAS,CAC7B9G,EAAMqH,EACN,MAIJ7E,EAAQA,EAAM8E,MAAM,EAAGtH,GAAKuH,OAAO/E,EAAM8E,MAAMtH,EAAM,EAAGwC,EAAMwE,SAE9D,EAAK5B,SAAS,CACZ5C,MAAOA,EACPR,sBAAsB,EACtBkF,gBAAgB,IAElB9E,EAAGI,MACAM,MAAM,QACNC,iBAAiB+D,GACjBU,UAvLc,EA2LnBC,wBAA0B,SAAAhH,GACxB,EAAK2E,SAAS,CACZxD,wBAAwB,EACxBsF,gBAAgB,EAChB5F,SAAUb,EAAGE,cAAcvB,MAC3BnB,aAAc,CAACwC,EAAGiH,QAASjH,EAAGkH,YAhMf,EAoMnB5F,eAAiB,WACf,IAAIS,EAAQ,EAAKiB,MAAMjB,MAAM+E,SACzBT,EAAU,EAAKrD,MAAMnC,SACzB,EAAK8D,SAAS,CACZtD,oBAAoB,IAEtB,IAAIwB,EAAMsE,SAAS,EAAKnE,MAAMhC,aAC9B,GAAIoG,OAAOC,UAAUxE,GAAM,CACzB,IAAK,IAAI+D,EAAI,EAAGA,EAAI7E,EAAMwE,OAAQK,IAChC,GAAI7E,EAAM6E,GAAGzE,OAASkE,EAAS,CAC7BtE,EAAM6E,GAAG/D,IAAMa,IAAO,IAAIO,MAAQE,IAAItB,EAAK,QAAQyE,GACnD,MAOJ,IAAIC,EAJJ,EAAK5C,SAAS,CACZ5C,MAAOA,IAITJ,EAAGI,MACAM,MAAM,QACNC,iBAAiB+D,GACjB9D,OAAM,SAAAxF,GACL,GAAIqK,OAAOC,UAAUxE,GAAM,CACzB0E,EAAaxK,EACb,IAAI6F,EAAUc,MAASS,IAAItB,EAAK,QAChClB,EAAGI,MAAMW,IAAI,CACXC,SAAU,EAAKhG,MAAMgG,SACrBR,KAAMkE,EACNvD,SAAUyE,EAAWzE,SACrBF,QAASA,EAAQ0E,GACjBzJ,GAAI0J,EAAW1J,GACfgC,MAAO0H,EAAW1H,MAClBL,iBAAkB+H,EAAW/H,uBAKvC,EAAKmF,SAAS,CACZ9D,SAAU,GACVG,YAAa,MA5OE,EAiPnBU,YAAc,WACZ,EAAKiD,SAAS,CACZnD,oBAAoB,EACpB5C,WAAY,GACZK,eAAgB,MArPD,EAyPnBuI,WAAa,WAGX,IAHkB,IAAD,EAC8B,EAAKxE,MAA9CpE,EADW,EACXA,WAAYK,EADD,EACCA,eAAgB4B,EADjB,EACiBA,SAChCkB,EAAQ,EAAKiB,MAAMjB,MAAM+E,SAClBF,EAAI,EAAGA,EAAI7E,EAAMwE,OAAQK,IAChC,GAAI7E,EAAM6E,GAAGzE,OAAStB,EAAU,CAC9BkB,EAAM6E,GAAGjB,IAAM/G,EACfmD,EAAM6E,GAAGhB,QAAU3G,EACnB,MAGJ0C,EAAGI,MACAM,MAAM,QACNC,iBAAiBzB,GACjB0B,OAAM,SAAAxF,GACL,IAAIwK,EAAaxK,EACjB4E,EAAGI,MAAMW,IAAI,CACXC,SAAU,EAAKhG,MAAMgG,SACrBR,KAAMtB,EACN+B,QAAS2E,EAAW3E,QACpB+C,IAAK/G,EACLgH,QAAS3G,EACTpB,GAAI0J,EAAW1J,QAGrB,EAAK8G,SAAS,CACZnD,oBAAoB,EACpBO,MAAOA,EACPnD,WAAY,GACZK,eAAgB,MArRD,EAyRnBwI,iBAAmB,SAAAzH,GACjB,EAAK2E,SAAS,CACZ3D,YAAahB,EAAG2G,OAAOhI,SA3RR,EA+RnBK,gBAAkB,SAAAgB,GAChB,EAAK2E,SAAS,CACZ1F,eAAgBe,EAAG2G,OAAOhI,SAjSX,EAqSnBD,YAAc,SAAAsB,GACZ,EAAK2E,SAAS,CACZ/F,WAAYoB,EAAG2G,OAAOhI,SAvSP,EA4SnB+I,oBAAsB,SAAAC,GACpB,IAAI9B,EAAgB8B,EAAMzH,cAAcvB,MACtC0H,EAAUsB,EAAMzH,cAAcC,aAAa,QAE7CwH,EAAMzH,cAAc0H,cAAcA,cAAcC,UAAUC,OAAO,QAGjE,IADA,IAAI/F,EAAQ,EAAKiB,MAAMjB,MAAM+E,SACpBF,EAAI,EAAGA,EAAI7E,EAAMwE,OAAQK,IAChC,GAAI7E,EAAM6E,GAAGzE,OAASkE,EAAS,CAC7BtE,EAAM6E,GAAGf,cAAgBA,EACzB,MAGJlE,EAAGI,MACAM,MAAM,QACNC,iBAAiB+D,GACjB9D,OAAM,SAAAxF,GACL,IAAIwK,EAAaxK,EACjB4E,EAAGI,MAAMW,IAAI,CACXC,SAAU,EAAKhG,MAAMgG,SACrBR,KAAMkE,EACNzD,QAAS2E,EAAW3E,QACpB+C,IAAK4B,EAAW5B,IAChBC,QAAS2B,EAAW3B,QACpBC,cAAeA,EACfhI,GAAI0J,EAAW1J,QAGrB,EAAK8G,SAAS,CACZnD,oBAAoB,EACpBO,MAAOA,EACPnD,WAAY,GACZK,eAAgB,MA5UD,EAgVnB8I,WAAa,SAAA/H,GACX,IAAIgI,EAAsC,SAA3BhI,EAAGE,cAAcvB,MAChC,EAAKgG,SAAS,CACZsD,kBAAmBD,KAnVJ,EAuVnBE,cAAgB,SAAAlI,GACd,IAAImI,EAAcnI,EAAGE,cAAcC,aAAa,SAChDwB,EAAGI,MACAM,MAAM,QACNC,iBAAiB6F,GACjB5F,OAAM,SAAAxF,GACL,EAAK4H,SAAS,CACZyD,WAAW,EACXhG,iBAAkBrF,EAAKoF,KACvBwB,oBAAqB5G,EAAK6F,QAC1ByF,gBAAiBtL,EAAK+F,eAjWX,EAsWnBwF,iBAAmB,WACjB,EAAK3D,SAAS,CACZyD,WAAW,KAxWI,EA6WnBG,eAAiB,SAAAvD,GACf,EAAKL,SAAS,CACZ0D,gBAAiBrD,EACjBwD,mBAAmB,KAhXJ,EAoXnBhI,UAAY,WACV,IAAIiI,EAAW,EAAKzF,MAAM1C,aACxB+F,EAAU,EAAKrD,MAAMnC,SACrB6H,EAAc,EAAK1F,MAAMrD,OAC3B+I,EAAYvE,IAAIsE,GAChB9G,EAAGI,MACAM,MAAM,QACNC,iBAAiB+D,GACjB9D,OAAM,SAAAxF,GACL,IAAIwK,EAAaxK,EACjB4E,EAAGI,MAAMW,IAAI,CACXC,SAAU,EAAKhG,MAAMgG,SACrBR,KAAMkE,EACNzD,QAAS2E,EAAW3E,QACpB+C,IAAK4B,EAAW5B,IAChBC,QAAS2B,EAAW3B,QACpBC,cAAe0B,EAAW1B,cAC1BhI,GAAI0J,EAAW1J,GACfgC,MAAO4I,EACPjJ,iBAAkB,EAAKwD,MAAMxD,sBAInC,IADA,IAAIuC,EAAQ,EAAKiB,MAAMjB,MAAM+E,SACpBF,EAAI,EAAGA,EAAI7E,EAAMwE,OAAQK,IAChC,GAAI7E,EAAM6E,GAAGzE,OAASkE,EAAS,CAC7BtE,EAAM6E,GAAG/G,MAAQ4I,EACjB1G,EAAM6E,GAAGpH,iBAAmB,EAAKwD,MAAMxD,iBACvC,MAGJ,EAAKmF,SAAS,CACZxD,wBAAwB,EACxBM,qBAAqB,EACrBnB,aAAc,GACdyB,MAAOA,EACPpC,OAAQ+I,KAvZO,EA2ZnBjI,gBAAkB,WAChB,EAAKkE,SAAS,CACZxD,wBAAwB,EACxBM,qBAAqB,EACrBnB,aAAc,MA/ZC,EAmanBC,mBAAqB,SAAAyE,GACnB,EAAKL,SAAS,CACZrE,aAAc0E,EAAE9E,cAAcvB,SAraf,EAyanBc,uBAAyB,SAAAuF,GACvB,EAAKL,SAAS,CACZnF,iBAAkBwF,KA3aH,EA+anB/E,0BAA4B,SAAA+E,GAC1B,EAAKL,SAAS,CACZrE,aAAc0E,KAjbC,EAqbnB2D,iBAAmB,WACjB,IAAI5G,EAAQ,EAAKiB,MAAMjB,MACvBA,EAAM6G,MAAK,SAASC,EAAGC,GACrB,IAAIC,EAASF,EAAEhJ,OAASgJ,EAAEhJ,MAAMmJ,eAAkB,IAChDC,EAASH,EAAEjJ,OAASiJ,EAAEjJ,MAAMmJ,eAAkB,IAChD,OAAOD,EAAQE,GAAS,EAAIF,EAAQE,EAAQ,EAAI,KAGlD,EAAKtE,SAAS,CACZ5C,MAAOA,EACPX,2BAA2B,EAC3BqF,gBAAgB,KAhcD,EAocnByC,mBAAqB,WACnB,IAAInH,EAAQ,EAAKiB,MAAMjB,MACvBA,EAAM6G,MAAK,SAASC,EAAGC,GASrB,OARKD,EAAEhG,MACLgG,EAAEhG,IAAMa,IAAO,IAAIO,MAAQC,SAAS,GAAI,SACxC2E,EAAEM,WAAY,GAEXL,EAAEjG,MACLiG,EAAEjG,IAAMa,IAAO,IAAIO,MAAQC,SAAS,GAAI,SACxC4E,EAAEK,WAAY,IAER,EAAIzF,IAAOmF,EAAEhG,KAAKuG,KAAK1F,IAAOoF,EAAEjG,SAE1Cd,EAAMnC,SAAQ,SAAAsC,GACRA,EAAEiH,YAAWjH,EAAEW,SAAMwG,MAE3B,EAAK1E,SAAS,CACZ5C,MAAOA,EACPX,2BAA2B,EAC3BqF,gBAAgB,KAvdD,EA2dnB6C,uBAAyB,SAAAtJ,GACvB,EAAK2E,SAAS,CACZvD,2BAA2B,EAC3BqF,gBAAgB,EAChBjJ,aAAc,CAACwC,EAAGiH,QAASjH,EAAGkH,YA/df,EAmenBqC,sBAAwB,SAAAvJ,GACtB,EAAK2E,SAAS,CACZpD,sBAAsB,EACtBkF,gBAAgB,EAChB5F,SAAUb,EAAGE,cAAcvB,MAC3BnB,aAAc,CAACwC,EAAGiH,QAASjH,EAAGkH,YAxef,EA4enBvG,aAAe,WACb,EAAKgE,SAAS,CACZpD,sBAAsB,EACtBkF,gBAAgB,KA/eD,EAmfnB+C,OAAS,WACH,IAAAC,EAAS,EAAT,EAeE,EAAKzG,MAbPhC,EAFA,EAEAA,YACApC,EAHA,EAGAA,WACAK,EAJA,EAIAA,eACAoH,EALA,EAKAA,QACAlF,EANA,EAMAA,uBACAC,EAPA,EAOAA,0BACAI,EARA,EAQAA,mBACAH,EATA,EASAA,mBAGAxE,GAZA,EAUA4E,oBAVA,EAWAF,qBAXA,EAYA1E,iBACAW,EAbA,EAaAA,aACAyK,EAdA,EAcAA,iBAdA,iBAiBA7B,EAjBA,EAiBAA,UACAsB,EAlBA,EAkBAA,oBACAhJ,EAnBA,EAmBAA,YACAM,EApBA,EAoBAA,gBACAwH,EArBA,EAqBAA,iBACAlF,EAtBA,EAsBAA,eACAmG,EAvBA,EAuBAA,iBACA7G,EAxBA,EAwBAA,WACA8F,EAzBA,EAyBAA,kBACAhF,EA1BA,EA0BAA,YACA2D,EA3BA,EA2BAA,iBACAmC,EA5BA,EA4BAA,WACAR,EA7BA,EA6BAA,wBACAe,EA9BA,EA8BAA,WACAvH,EA/BA,EA+BAA,UACAC,EAhCA,EAgCAA,gBACA6I,EAjCA,EAiCAA,uBAlCS,EAqCgB,EAAK3M,MAA5BoJ,EArCO,EAqCPA,SAAUpD,EArCH,EAqCGA,SAEV+G,EAAe,CACnB,YACA,UACA,SACA,UACA,OACA,QACA,QAGF,OACE,oCACG,EAAK1G,MAAMyD,eACV,yBAAKvJ,UAAU,UAAUG,QAASmJ,IAChC,KACJ,yBAAKtJ,UAAU,OACZ6I,EACC,yBAAK7I,UAAU,uBACb,kBAACgC,EAAA,EAAD,CACEC,QAAQ,YACRjC,UAAU,gBACVG,QAAS,EAAK2I,gBAEb,WAEH,yBAAK9I,UAAU,cACb,yBAAKA,UAAU,cACZ,WACD,0BAAMA,UAAU,YAAYyF,IAE9B,yBAAKzF,UAAU,oBACb,+BACE,kBAAC,IAAD,CACEyM,gBAAgB,EAChBlL,SAAUsJ,EACVpJ,MAAOsJ,MAIb,4BACE5K,QAASiM,EACTpM,UAAU,cAGd,kBAAC,EAAD,CACEgG,KAAM,EAAKF,MAAMoF,UACjBjF,OAAQ,EAAKmF,iBACbvG,MAAO,EAAKiB,MAAMjB,MAClBI,KAAM,EAAKa,MAAM4G,YACjBjH,SAAU,EAAKhG,MAAMgG,SACrBkB,iBAAkB,EAAK0E,eACvBnG,iBAAkB,EAAKY,MAAMZ,iBAC7BuB,oBAAqB,EAAKX,MAAMW,oBAChC6E,kBAAmB,EAAKxF,MAAMwF,kBAC9B1F,SAAU,EAAKE,MAAMqF,gBACrBhJ,QAAS,EAAKiJ,mBAEf,EAAKtF,MAAMiF,iBACV,kBAAC,EAAD,CAAWlG,MAAO,EAAKiB,MAAMjB,QAC3B,KACJ,kBAACjB,EAAA,EAAD,CAAY5D,UAAU,QACpB,kBAACsB,EAAA,EAAD,CACEC,SAAUiI,EACV/H,MAAO0H,EACPxH,YAAY,iBACZC,aAAW,iBACXC,mBAAiB,iBAEnB,kBAAC+B,EAAA,EAAWG,OAAZ,KACE,kBAAC/B,EAAA,EAAD,CAAQ7B,QAAS+I,EAAWjH,QAAQ,qBAApC,SAKJ,kBAACnC,EAAA,EAAD,CAAWE,UAAU,wBACnB,kBAAC,EAAD,CACEyD,aAAc,EAAKA,aACnBF,gBAAiBA,EACjBM,SAAU0G,EACV/I,YAAaA,EACbW,QAASqC,EACTV,YAAaA,EACbV,aAAc,EAAK0C,MAAM1C,aACzBC,mBAAoB,EAAKA,mBACzBN,0BAA2B,EAAKA,0BAChCrB,WAAYA,EACZK,eAAgBA,EAChBD,gBAAiBA,EACjB4B,WAAYA,EACZO,uBAAwBA,EACxBI,qBAAsB,EAAKyB,MAAMzB,qBACjCE,oBAAqB,EAAKuB,MAAMvB,oBAChCL,0BAA2BA,EAC3BC,mBAAoBA,EACpBG,mBAAoBA,EACpBF,eAAgBA,EAChB3B,OAAQ,EAAKqD,MAAMrD,OACnB9C,gBACEsE,EACItE,EACA,EAAKmG,MAAM6G,eAEjBzK,OAAQoI,EACRhH,UAAWA,EACXhB,iBAAkB,EAAKwD,MAAMxD,iBAC7BC,uBAAwB,EAAKA,uBAC7BjC,aAAcA,EACdqD,SAAU,EAAKmC,MAAMnC,WAEtB,EAAKmC,OACJ,EAAKA,MAAMjB,MAAMjF,KAAI,SAAAqF,GACnB,OACE,kBAACnF,EAAA,EAAUC,KAAX,CAAgBE,IAAKsM,KAClB,EAAKzG,MAAMiF,iBACV,yBACE/K,UAAW,gBAAkBiF,EAAK0D,gBAElC,KACJ,0BACE3I,UAAU,aACVyB,MAAOwD,EAAKA,KACZ9E,QAAS,EAAK6K,eAEb/F,EAAKA,MAER,yBAAKjF,UAAU,WACZiF,EAAKU,IAAMa,IAAOvB,EAAKU,KAAKe,OAAO,QAAU,MAEhD,4BACEvG,QAAS,EAAKkM,sBACd5K,MAAOwD,EAAKA,KACZjF,UAAU,mBAEZ,yBAAKA,UAAU,aACb,uBAAG4M,KAAM,WAAa3H,EAAKwD,IAAKgB,OAAO,UACpCxE,EAAKyD,UAIV,4BACEvI,QAAS2J,EACTrI,MAAOwD,EAAKA,KACZjF,UAAU,mBAEViF,EAAKtC,MACL,kBAACQ,EAAA,EAAD,CACEnD,UAAU,eACViC,QAASuK,EAAavH,EAAK3C,mBAE1B2C,EAAKtC,OALK,KAQf,kBAACkK,EAAA,EAAD,CAAWC,iBAAiB,KAC1B,kBAACC,EAAA,EAAD,CAAM/M,UAAU,kBACd,kBAAC6M,EAAA,EAAUG,OAAX,CACEhN,UAAU,mBACViN,SAAS,KAET,kBAACC,EAAA,EAAD,CACEC,SAAO,EACPC,IACGnI,EAAK0D,cAEqB,YAAvB1D,EAAK0D,cACL,GACuB,eAAvB1D,EAAK0D,cACL,GACA,IALA,KARV,UAgBU,IACP1D,EAAK0D,cACF1D,EAAK0D,cACL,WAEN,kBAACkE,EAAA,EAAUQ,SAAX,CAAoBJ,SAAS,KAC3B,kBAACF,EAAA,EAAKzG,KAAN,CAAWtG,UAAU,uBAClB,IACD,4BACEA,UAAU,gBACVyB,MAAOwD,EAAK0D,cACZ1D,KAAMA,EAAKA,KACX1D,SAAUiJ,GAEV,4BAAQ/I,MAAM,UAAUxB,IAAI,KAA5B,WAGA,4BAAQwB,MAAM,aAAaxB,IAAI,KAA/B,eAGA,4BAAQwB,MAAM,YAAYxB,IAAI,KAA9B,wBActB,kBAAC,IAAD,CACEqN,MAAM,kBACNC,UAAU,EACVC,SAAUrF,EACVsF,SAAS,2BACTC,OAAO,0BAxuBjB,EAAK5H,MAAQ,CACXhC,YAAa,GACbe,MAAO,GACPkG,kBAAkB,EAClBzK,aAAc,GACd6I,QAAS,GACTxF,SAAU,GACVM,wBAAwB,EACxBC,2BAA2B,EAC3BC,oBAAoB,EACpBG,oBAAoB,EACpBC,qBAAqB,EACrBF,sBAAsB,EACtBkF,gBAAgB,EAChB7H,WAAY,GACZK,eAAgB,GAChBmJ,WAAW,EACXhG,iBAAkB,GAClBiG,gBAAiB,GACjB/H,aAAc,GACdkI,mBAAmB,EACnBhJ,iBAAkB,EAClBG,OAAQ,IAAI4F,IACZ1I,gBAAiB,CACf,CACEO,KAAM,eACNC,QAAS,WACP,EAAKsH,SAAS,CACZxD,wBAAwB,EACxBE,oBAAoB,EACpBoF,gBAAgB,MAItB,CACErJ,KAAM,WACNC,QAAS,WACP,EAAKsH,SAAS,CACZxD,wBAAwB,EACxBK,oBAAoB,EACpBiF,gBAAgB,MAItB,CACErJ,KAAM,YACNC,QAAS,WACP,IAAIoL,EAAW,GACf,EAAKzF,MAAMjB,MAAMnC,SAAQ,SAAAuC,GACnBA,EAAKA,OAAS,EAAKa,MAAMnC,WAC3B4H,EAAWtG,EAAKtC,UAGpB,EAAK8E,SAAS,CACZxD,wBAAwB,EACxBM,qBAAqB,EACrBnB,aAAcmI,EACdhC,gBAAgB,OAKxBoD,eAAgB,CACd,CACEzM,KAAM,gBACNC,QAAS,WACP,EAAKsL,qBAGT,CACEvL,KAAM,mBACNC,QAAS,WACP,EAAK6L,yBA3EI,E,2BADH/K,IAAMC,WAiwBTyM,eAbS,SAAA7H,GAAK,MAAK,CAChC+C,SAAU/C,EAAM+C,SAChBpD,SAAUK,EAAML,aAGS,SAAAmI,GACzB,MAAO,CACLhF,sBAAuB,SAAAiF,GACrBD,EAAS,CAAEE,KAAM,gBAAiBC,QAASF,QAKlCF,CAA6C5F,G,QC7wBxCiG,QACW,cAA7BzN,OAAO0N,SAASC,UAEe,UAA7B3N,OAAO0N,SAASC,UAEhB3N,OAAO0N,SAASC,SAASC,MACvB,2DClBN,IAAMC,EAAe,CACjBvF,UAAU,EACVpD,SAAU,IAEZ4I,EACkB,gBAgBLC,EAbM,WAAmC,IAAlCxI,EAAiC,uDAAzBsI,EAAcG,EAAW,uCAC7CT,EAAkBS,EAAlBT,KAAMC,EAAYQ,EAAZR,QACd,MAAa,cAATD,EACKhI,EACEgI,IAASO,EACXG,OAAOC,OAAO,GAAIL,EAAc,CACrCvF,SAAUkF,EAAQlF,SAClBpD,SAAUsI,EAAQtI,WAGfK,GCTH4I,EAAQC,YACZL,EACA/N,OAAOqO,8BAAgCrO,OAAOqO,gCAGhDC,IAASvC,OACP,kBAAC,IAAD,CAAUoC,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrJ,MAAK,SAAAsJ,GACjCA,EAAaC,kB","file":"static/js/main.b7a25797.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { Button, ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = props => {\n  const options = props.menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[0] + \"px\"\n          : props.tempPosition[0] - 150 + \"px\",\n      top: props.tempPosition[1] + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let { props } = this,\n        divStyle = {\n          left:\n            props.tempPosition[0] + 150 < window.screen.width\n              ? props.tempPosition[0] + \"px\"\n              : props.tempPosition[0] - 150 + \"px\",\n          top: props.tempPosition[1] + \"px\"\n        };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  return (\n    <div className=\"linkContextMenu\" style={props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n  return (\n    <div className=\"deleteContextMenu\" style={props.divStyle}>\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import React from \"react\";\nimport \"./TaskContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nconst TaskContextMenu = props => {\n  return (\n    <div className=\"taskContextMenu\" style={props.divStyle}>\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          onChange={props.changeFn}\n          value={props.curDeadline}\n          placeholder=\"Add deadline to task\"\n          aria-label=\"Add deadline to task\"\n          aria-describedby=\"basic-addon2\"\n        />\n      </InputGroup>\n      <InputGroup.Append>\n        <Button\n          className=\"deadline-close-btn\"\n          onClick={props.closeFn}\n          variant=\"outline-secondary\"\n        >\n          Close\n        </Button>\n      </InputGroup.Append>\n    </div>\n  );\n};\n\nTaskContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  curDeadline: PropTypes.string,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(TaskContextMenu);\n","import React from \"react\";\n\nimport MenuItems from \"../MenuItems\";\nimport LinkContextMenu from \"./LinkContextMenu\";\nimport LabelContextMenu from \"./LabelContextMenu\";\nimport DeleteContextMenu from \"./DeleteContextMenu\";\nimport TaskContextMenu from \"./TaskContextMenu\";\n\nclass ContextMenuContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {\n      displayAllContextMenus,\n      tempPosition,\n      menuOptionsList,\n      displaySortingOptionsMenu,\n      displayTaskCtxMenu,\n      endTimeCloseFn,\n      changeFn,\n      curDeadline,\n      displayDeleteCtxMenu,\n      displayLinkCtxMenu,\n      displayLabelCtxMenu,\n      linkCloseFn,\n      saveFn,\n      currentURL,\n      currentURLText,\n      changeURLTextFn,\n      changeURLFn,\n      saveLabel,\n      currentLabel,\n      cancelSaveLabel,\n      tempTask,\n      currentLabelChange,\n      selectedLabelIdx,\n      selectedLabelIdxChange,\n      labels,\n      currentLabelChangeByClick,\n      deleteTask,\n      cancelDelete\n    } = this.props;\n    return (\n      <>\n        {displayAllContextMenus ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displaySortingOptionsMenu ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displayTaskCtxMenu ? (\n          <TaskContextMenu\n            closeFn={endTimeCloseFn}\n            changeFn={changeFn}\n            curDeadline={curDeadline}\n            tempPosition={tempPosition}\n          ></TaskContextMenu>\n        ) : null}\n        {displayLinkCtxMenu ? (\n          <LinkContextMenu\n            tempPosition={tempPosition}\n            closeFn={linkCloseFn}\n            saveFn={saveFn}\n            currentURL={currentURL}\n            currentURLText={currentURLText}\n            changeURLTextFn={changeURLTextFn}\n            changeURLFn={changeURLFn}\n          ></LinkContextMenu>\n        ) : null}\n        {displayLabelCtxMenu ? (\n          <LabelContextMenu\n            tempPosition={tempPosition}\n            saveLabel={saveLabel}\n            currentLabel={currentLabel}\n            cancelSaveLabel={cancelSaveLabel}\n            tempTask={tempTask}\n            currentLabelChange={currentLabelChange}\n            selectedLabelIdx={selectedLabelIdx}\n            selectedLabelIdxChange={selectedLabelIdxChange}\n            labels={labels}\n            currentLabelChangeByClick={currentLabelChangeByClick}\n          />\n        ) : null}\n        {displayDeleteCtxMenu ? (\n          <DeleteContextMenu\n            tempPosition={tempPosition}\n            tempTask={tempTask}\n            deleteTask={deleteTask}\n            cancelDelete={cancelDelete}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ContextMenuContainer;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.currentModalTask}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\");\n    this.state = {\n      dates: [],\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n\n    for (let d in dateSet) {\n      dates.push({\n        date: d,\n        count: dateSet[d]\n      });\n    }\n    this.setState({\n      dates: dates\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={this.state.dates}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport \"./App.scss\";\nimport \"react-toggle/style.css\"; // for ES6 modules\nimport Toggle from \"react-toggle\";\n\nimport FacebookLogin from \"react-facebook-login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      currentURL: \"\",\n      currentURLText: \"\",\n      showModal: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n  };\n\n  responseFacebook = res => {\n    let tasks = [],\n      labels = new Set(); // we're going to use a Set to store the labels\n    window.localStorage.setItem(\"todousername\", res.name);\n    db.tasks\n      .where(\"userName\")\n      .equalsIgnoreCase(res.name)\n      .each(rec => {\n        if (rec.label) {\n          labels.add(rec.label);\n        }\n        tasks.push({\n          task: rec.task,\n          end: rec.endTime,\n          url: rec.url,\n          urlText: rec.urlText,\n          progressState: rec.progressState,\n          label: rec.label,\n          selectedLabelIdx: rec.selectedLabelIdx\n        });\n      })\n      .then(() => {\n        this.props.facebookLoginDispatch({\n          loggedin: true,\n          userName: res.name\n        });\n        this.setState({\n          tasks: tasks,\n          labels: labels\n        });\n      });\n  };\n\n  logOutFacebook = () => {\n    window.localStorage.removeItem(\"todousername\");\n    window.FB.logout();\n    this.props.facebookLoginDispatch({\n      loggedin: false,\n      userName: \"User\"\n    });\n  };\n\n  addToList = ev => {\n    if (this.state.curTask.trim().length >= 1) {\n      let curTask = this.state.curTask;\n      let tasks = this.state.tasks;\n      tasks.push({\n        task: curTask\n      });\n      this.setState({\n        tasks: tasks,\n        curTask: \"\"\n      });\n      db.tasks.put({ userName: this.props.userName, task: curTask });\n    }\n  };\n\n  closeAllCtxMenus = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = ev => {\n    this.setState({\n      curTask: ev.target.value\n    });\n  };\n\n  deleteTask = tempTask => {\n    let tasks = this.state.tasks,\n      curTask = tempTask,\n      idx;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        idx = i;\n        break;\n      }\n    }\n\n    tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n    this.setState({\n      tasks: tasks,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .delete();\n  };\n\n  // Function to show the context menu\n  showDeadlineContextMenu = ev => {\n    this.setState({\n      displayAllContextMenus: true,\n      displayCurtain: true,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  endTimeCloseFn = () => {\n    let tasks = this.state.tasks.concat();\n    let curTask = this.state.tempTask;\n    this.setState({\n      displayTaskCtxMenu: false\n    });\n    let end = parseInt(this.state.curDeadline);\n    if (Number.isInteger(end)) {\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].task === curTask) {\n          tasks[i].end = Moment(new Date()).add(end, \"hour\")._d;\n          break;\n        }\n      }\n      this.setState({\n        tasks: tasks\n      });\n\n      let firstMatch;\n      db.tasks\n        .where(\"task\")\n        .equalsIgnoreCase(curTask)\n        .first(item => {\n          if (Number.isInteger(end)) {\n            firstMatch = item;\n            let endTime = Moment().add(end, \"hour\");\n            db.tasks.put({\n              userName: this.props.userName,\n              task: curTask,\n              richText: firstMatch.richText,\n              endTime: endTime._d,\n              id: firstMatch.id,\n              label: firstMatch.label,\n              selectedLabelIdx: firstMatch.selectedLabelIdx\n            });\n          }\n        });\n    }\n    this.setState({\n      tempTask: \"\",\n      curDeadline: \"\"\n    });\n  };\n\n  // Functions for the link\n  linkCloseFn = () => {\n    this.setState({\n      displayLinkCtxMenu: false,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  saveLinkFn = () => {\n    let { currentURL, currentURLText, tempTask } = this.state,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === tempTask) {\n        tasks[i].url = currentURL;\n        tasks[i].urlText = currentURLText;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(tempTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: tempTask,\n          endTime: firstMatch.endTime,\n          url: currentURL,\n          urlText: currentURLText,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  deadlineChangeFn = ev => {\n    this.setState({\n      curDeadline: ev.target.value\n    });\n  };\n\n  changeURLTextFn = ev => {\n    this.setState({\n      currentURLText: ev.target.value\n    });\n  };\n\n  changeURLFn = ev => {\n    this.setState({\n      currentURL: ev.target.value\n    });\n  };\n\n  // Function to save the state change of the task\n  changeProgressState = param => {\n    let progressState = param.currentTarget.value,\n      curTask = param.currentTarget.getAttribute(\"task\");\n    // TODO: make this better\n    param.currentTarget.parentElement.parentElement.classList.remove(\"show\");\n\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressState = progressState;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: progressState,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item.task,\n          currentModalTaskEnd: item.endTime,\n          currentRichText: item.richText\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  saveLabel = () => {\n    let curLabel = this.state.currentLabel,\n      curTask = this.state.tempTask,\n      stateLabels = this.state.labels;\n    stateLabels.add(curLabel);\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: firstMatch.progressState,\n          id: firstMatch.id,\n          label: curLabel,\n          selectedLabelIdx: this.state.selectedLabelIdx\n        });\n      });\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].label = curLabel;\n        tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n        break;\n      }\n    }\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\",\n      tasks: tasks,\n      labels: stateLabels\n    });\n  };\n\n  cancelSaveLabel = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\"\n    });\n  };\n\n  currentLabelChange = v => {\n    this.setState({\n      currentLabel: v.currentTarget.value\n    });\n  };\n\n  selectedLabelIdxChange = v => {\n    this.setState({\n      selectedLabelIdx: v\n    });\n  };\n\n  currentLabelChangeByClick = v => {\n    this.setState({\n      currentLabel: v\n    });\n  };\n\n  sortTasksByLabel = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n        textB = (b.label && b.label.toUpperCase()) || \"Z\";\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  sortTasksByEndTime = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      if (!a.end) {\n        a.end = Moment(new Date()).subtract(10, \"years\");\n        a.removeEnd = true;\n      }\n      if (!b.end) {\n        b.end = Moment(new Date()).subtract(10, \"years\");\n        b.removeEnd = true;\n      }\n      return -1 * Moment(a.end).diff(Moment(b.end));\n    });\n    tasks.forEach(t => {\n      if (t.removeEnd) t.end = undefined;\n    });\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showSortingOptionsMenu = ev => {\n    this.setState({\n      displaySortingOptionsMenu: true,\n      displayCurtain: true,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: true,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  render = () => {\n    let listId = 0,\n      {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeProgressState,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ];\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                <div className=\"welcomeBar\">\n                  {\"Welcome \"}\n                  <span className=\"userName\">{userName}</span>\n                </div>\n                <div className=\"toggle-container\">\n                  <label>\n                    <Toggle\n                      defaultChecked={false}\n                      onChange={showColors}\n                      value={shouldShowColors}\n                    />\n                  </label>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              ></TaskModal>\n              {this.state.shouldShowColors ? (\n                <Dashboard tasks={this.state.tasks} />\n              ) : null}\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  onChange={handleInputChange}\n                  value={curTask}\n                  placeholder=\"Add task to do\"\n                  aria-label=\"Add task to do\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <InputGroup.Append>\n                  <Button onClick={addToList} variant=\"outline-secondary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n              <ListGroup className=\"listOfTasksContainer\">\n                <ContextMenuContainer\n                  cancelDelete={this.cancelDelete}\n                  cancelSaveLabel={cancelSaveLabel}\n                  changeFn={deadlineChangeFn}\n                  changeURLFn={changeURLFn}\n                  closeFn={linkCloseFn}\n                  curDeadline={curDeadline}\n                  currentLabel={this.state.currentLabel}\n                  currentLabelChange={this.currentLabelChange}\n                  currentLabelChangeByClick={this.currentLabelChangeByClick}\n                  currentURL={currentURL}\n                  currentURLText={currentURLText}\n                  changeURLTextFn={changeURLTextFn}\n                  deleteTask={deleteTask}\n                  displayAllContextMenus={displayAllContextMenus}\n                  displayDeleteCtxMenu={this.state.displayDeleteCtxMenu}\n                  displayLabelCtxMenu={this.state.displayLabelCtxMenu}\n                  displaySortingOptionsMenu={displaySortingOptionsMenu}\n                  displayTaskCtxMenu={displayTaskCtxMenu}\n                  displayLinkCtxMenu={displayLinkCtxMenu}\n                  endTimeCloseFn={endTimeCloseFn}\n                  labels={this.state.labels}\n                  menuOptionsList={\n                    displayAllContextMenus\n                      ? menuOptionsList\n                      : this.state.sortingOptions\n                  }\n                  saveFn={saveLinkFn}\n                  saveLabel={saveLabel}\n                  selectedLabelIdx={this.state.selectedLabelIdx}\n                  selectedLabelIdxChange={this.selectedLabelIdxChange}\n                  tempPosition={tempPosition}\n                  tempTask={this.state.tempTask}\n                />\n                {this.state &&\n                  this.state.tasks.map(task => {\n                    return (\n                      <ListGroup.Item key={listId++}>\n                        {this.state.shouldShowColors ? (\n                          <div\n                            className={\"color-status \" + task.progressState}\n                          ></div>\n                        ) : null}\n                        <span\n                          className=\"task-title\"\n                          value={task.task}\n                          onClick={this.openTaskModal}\n                        >\n                          {task.task}\n                        </span>\n                        <div className=\"endTime\">\n                          {task.end ? Moment(task.end).format(\"LLLL\") : null}\n                        </div>\n                        <button\n                          onClick={this.showDeleteContextMenu}\n                          value={task.task}\n                          className=\"menuItembutton\"\n                        />\n                        <div className=\"list-link\">\n                          <a href={\"https://\" + task.url} target=\"_blank\">\n                            {task.urlText}\n                          </a>\n                        </div>\n\n                        <button\n                          onClick={showDeadlineContextMenu}\n                          value={task.task}\n                          className=\"menuLinkbutton\"\n                        />\n                        {!task.label ? null : (\n                          <Badge\n                            className=\"genericLabel\"\n                            variant={badgeOptions[task.selectedLabelIdx]}\n                          >\n                            {task.label}\n                          </Badge>\n                        )}\n                        <Accordion defaultActiveKey=\"0\">\n                          <Card className=\"invisible-card\">\n                            <Accordion.Toggle\n                              className=\"accordion-toggle\"\n                              eventKey=\"1\"\n                            >\n                              <ProgressBar\n                                striped\n                                now={\n                                  !task.progressState\n                                    ? 10\n                                    : task.progressState === \"defined\"\n                                    ? 10\n                                    : task.progressState === \"inprogress\"\n                                    ? 60\n                                    : 100\n                                }\n                              />\n                              Status:{\" \"}\n                              {task.progressState\n                                ? task.progressState\n                                : \"Defined\"}\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                              <Card.Body className=\"invisible-card-body\">\n                                {\" \"}\n                                <select\n                                  className=\"custom-select\"\n                                  value={task.progressState}\n                                  task={task.task}\n                                  onChange={changeProgressState}\n                                >\n                                  <option value=\"defined\" key=\"0\">\n                                    Defined\n                                  </option>\n                                  <option value=\"inprogress\" key=\"1\">\n                                    In Progress\n                                  </option>\n                                  <option value=\"completed\" key=\"2\">\n                                    Completed\n                                  </option>\n                                </select>\n                              </Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        </Accordion>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </div>\n          ) : (\n            <FacebookLogin\n              appId=\"176625356093687\"\n              autoLoad={false}\n              callback={responseFacebook}\n              cssClass=\"my-facebook-button-class\"\n              fields=\"name,email,picture\"\n            />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}