{"version":3,"sources":["assets/drag.svg","animations/CompletedAnimation.js","animations/DeletedAnimation.js","MenuItems.js","contextMenus/withContextMenu.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","contextMenus/DeadlineContextMenu.js","contextMenus/CalendarContextMenu.js","contextMenus/ContextMenuContainer.js","db.js","TaskModal.js","Dashboard.js","TabSelector.js","LoginPage.js","Tasks/TasksListGroup.js","_TaskListsFunctions.js","_DragActions.js","_DeadlineFunctions.js","_LabelFunctions.js","_LinkFunctions.js","_SignInFunctions.js","_SortingFunctions.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js","assets/event.svg"],"names":["module","exports","CompletedAnimation","props","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","show","className","options","height","width","DeletedAnimation","style","position","zIndex","top","left","transform","MenuItems","menuOptionsList","tempPosition","map","item","ListGroup","Item","key","text","onClick","divStyle","window","screen","id","withHOC","OriginalComponent","matchMedia","matches","console","log","this","right","marginLeft","marginRight","name","React","Component","isMobile","bottom","border","borderTopLeftRadius","borderTopRightRadius","boxShadow","Form","Group","controlId","FormControl","onChange","changeURLFn","value","currentURL","placeholder","aria-label","aria-describedby","changeURLTextFn","currentURLText","Button","variant","saveFn","closeFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","cancelDelete","deleteTask","tempTask","useState","Date","startDate","setStartDate","useEffect","datePickers","document","getElementsByClassName","Array","from","el","childNodes","setAttribute","selected","date","changeFn","toString","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","InputGroup","Append","CalendarContextMenu","curTask","setCurTask","formattedCurDate","Moment","currentCalendarDate","_d","split","slice","join","event","target","length","addTaskToDate","hideCalendarContextMenu","src","eventIcon","ContextMenuContainer","displayAllContextMenus","displaySortingOptionsMenu","displayTaskCtxMenu","endTimeCloseFn","curDeadline","displayDeleteCtxMenu","displayLinkCtxMenu","displayLabelCtxMenu","displayCalendarCtxMenu","linkCloseFn","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","put","userName","endTime","end","richText","then","state","Modal","onHide","centered","Header","closeButton","Title","Body","Label","currentModalTaskEnd","format","onRichTextChange","modules","toolbar","header","list","indent","formats","Footer","Dashboard","setUpDates","setState","dates","getDatesFromProps","dateSet","d","count","start","subtract","add","numDays","diff","num","day","firstDate","lastDate","endDate","values","titleForValue","v","classForValue","showCalendarContextMenu","TabSelector","shouldShowDashboard","hideDashboard","showDashboard","LoginPage","responseFacebook","appId","autoLoad","callback","cssClass","fields","TaskListGroup","currentDraggingTask","onDragEnd","openTaskModal","progressClick","shouldShowColors","showDeadlineContextMenu","showDeleteContextMenu","startDrag","stopDrag","listId","badgeOptions","onDrop","onDragOver","e","preventDefault","progressState","dragIcon","draggable","onDrag","href","url","urlText","ProgressBar","striped","now","progressPercent","addToList","trim","i","concat","showDeletedAnimation","displayCurtain","delete","setTimeout","handleInputChange","title","deletedTask","curDragTask","firstHalf","clientX","clientY","deadlineChangeFn","time","firstMatch","curLabel","stateLabels","saveLinkFn","res","Set","localStorage","setItem","each","rec","facebookLoginDispatch","loggedin","logOutFacebook","removeItem","FB","logout","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","undefined","showSortingOptionsMenu","App","componentDidMount","getItem","bind","closeAllCtxMenus","showColors","curState","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","dims","getBoundingClientRect","percentDone","Math","ceil","floor","showCompletedAnimation","render","defaultChecked","currentTask","sortingOptions","TasksListGroup","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7471ec4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drag.bc42c9bb.svg\";","import React from \"react\";\nimport animationData from \"./completed.json\";\nimport Lottie from \"react-lottie\";\nimport \"./CompletedAnimation.scss\";\nconst CompletedAnimation = props => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n\n  if (props.show) {\n    return (\n      <div className=\"completed-animation\">\n        <Lottie options={defaultOptions} height={200} width={300} />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default CompletedAnimation;\n","import React from \"react\";\nimport animationData from \"./deleted.json\";\nimport Lottie from \"react-lottie\";\nconst DeletedAnimation = props => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n\n  const style = {\n    position: \"absolute\",\n    zIndex: \"4\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  };\n\n  if (props.show) {\n    return (\n      <div className=\"deleted-animation\" style={style}>\n        <Lottie options={defaultOptions} height={200} width={300} />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default DeletedAnimation;\n","import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = ({ menuOptionsList, tempPosition }) => {\n  const options = menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        tempPosition[0] + 150 < window.screen.width\n          ? tempPosition[0] + \"px\"\n          : tempPosition[0] - 100 + \"px\",\n      top:\n        tempPosition[0] + 150 < window.screen.width\n          ? tempPosition[1] + \"px\"\n          : tempPosition[1] - 50 + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n        .matches;\n\n      if (isMobile) {\n        //Conditional script here\n        console.log(\"isMobile true\");\n      } else {\n        console.log(\"is mobile false\");\n      }\n\n      let { props } = this,\n        divStyle =\n          props.tempPosition[0] + 300 < window.screen.width\n            ? {\n                left: props.tempPosition[0] + \"px\",\n                top: props.tempPosition[1] + \"px\"\n              }\n            : {\n                left: \"0\",\n                right: \"0\",\n                top: \"40%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n\n  return (\n    <div className=\"linkContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"85%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n  return (\n    <div\n      className=\"deleteContextMenu\"\n      style={isMobile ? style : props.divStyle}\n    >\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import React, { useState, useEffect } from \"react\";\nimport \"./DeadlineContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DeadlineContextMenu = props => {\n  const [startDate, setStartDate] = useState(new Date());\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"10px\";\n    style.borderTopRightRadius = \"10px\";\n    style.width = \"100%\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.height = \"100px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n\n  useEffect(() => {\n    if (isMobile) {\n      const datePickers = document.getElementsByClassName(\n        \"react-datepicker__input-container\"\n      );\n      Array.from(datePickers).forEach(el =>\n        el.childNodes[0].setAttribute(\"readOnly\", true)\n      );\n    }\n  });\n  return (\n    <>\n      <div\n        className=\"taskContextMenu\"\n        style={isMobile ? style : props.divStyle}\n      >\n        <DatePicker\n          selected={startDate}\n          onChange={date => {\n            setStartDate(date);\n            props.changeFn(date.toString());\n          }}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n        <span className=\"deadlont-text\">Select a deadline for the task</span>\n\n        {/*  <InputGroup className=\"mb-3\">\n          <FormControl\n            onChange={props.changeFn}\n            value={props.curDeadline}\n            placeholder=\"Hours\"\n            aria-label=\"Add deadline to task\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </InputGroup> */}\n        {\n          <InputGroup.Append>\n            <Button\n              className=\"deadline-close-btn\"\n              onClick={props.closeFn}\n              variant=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"deadline-ok-btn\"\n              onClick={() => {\n                props.changeFn(startDate);\n                props.closeFn();\n                console.log(startDate);\n              }}\n              variant=\"primary\"\n            >\n              Okay\n            </Button>\n          </InputGroup.Append>\n        }\n      </div>\n    </>\n  );\n};\n\nDeadlineContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(DeadlineContextMenu);\n","import React from \"react\";\nimport Moment from \"moment\";\nimport { Button, InputGroup, FormControl, Badge } from \"react-bootstrap\";\nimport eventIcon from \"../assets/event.svg\";\nimport { useState } from \"react\";\nimport \"./CalendarContextMenu.scss\";\n\nconst CalendarContextMenu = props => {\n  const [curTask, setCurTask] = useState(\"\");\n\n  let callAddTaskFn = () => {\n    if (curTask.length > 0) {\n      props.addTaskToDate(curTask, props.currentCalendarDate);\n      props.hideCalendarContextMenu();\n    }\n  };\n\n  let close = () => {\n    props.hideCalendarContextMenu();\n  };\n\n  let curDate = Moment(props.currentCalendarDate);\n  let formattedCurDate = curDate._d\n    .toString()\n    .split(\" \")\n    .slice(0, 4)\n    .join(\" \");\n\n  return (\n    <div className=\"calendarCtxMenu\">\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          value={curTask}\n          onChange={event => setCurTask(event.target.value)}\n          placeholder=\"Add task\"\n          aria-label=\"Add task\"\n        />\n        <InputGroup.Append>\n          <Button className=\"addBtn\" value={curTask} onClick={callAddTaskFn}>\n            Add\n          </Button>\n          <Button\n            className=\"cancelBtn\"\n            variant=\"secondary\"\n            value={curTask}\n            onClick={close}\n          >\n            Cancel\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n      <img className=\"calendar-icon\" src={eventIcon} />\n      <Badge>{formattedCurDate}</Badge>\n    </div>\n  );\n};\n\nexport default CalendarContextMenu;\n","import React from \"react\";\n\nimport MenuItems from \"../MenuItems\";\nimport LinkContextMenu from \"./LinkContextMenu\";\nimport LabelContextMenu from \"./LabelContextMenu\";\nimport DeleteContextMenu from \"./DeleteContextMenu\";\nimport DeadlineContextMenu from \"./DeadlineContextMenu\";\nimport CalendarContextMenu from \"./CalendarContextMenu\";\n\nclass ContextMenuContainer extends React.Component {\n  render() {\n    let {\n      displayAllContextMenus,\n      tempPosition,\n      menuOptionsList,\n      displaySortingOptionsMenu,\n      displayTaskCtxMenu,\n      endTimeCloseFn,\n      changeFn,\n      curDeadline,\n      currentCalendarDate,\n      displayDeleteCtxMenu,\n      displayLinkCtxMenu,\n      displayLabelCtxMenu,\n      displayCalendarCtxMenu,\n      linkCloseFn,\n      saveFn,\n      currentURL,\n      currentURLText,\n      changeURLTextFn,\n      changeURLFn,\n      saveLabel,\n      currentLabel,\n      cancelSaveLabel,\n      tempTask,\n      currentLabelChange,\n      selectedLabelIdx,\n      selectedLabelIdxChange,\n      labels,\n      currentLabelChangeByClick,\n      deleteTask,\n      cancelDelete\n    } = this.props;\n    return (\n      <>\n        {displayAllContextMenus ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displaySortingOptionsMenu ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displayTaskCtxMenu ? (\n          <DeadlineContextMenu\n            closeFn={endTimeCloseFn}\n            changeFn={changeFn}\n            curDeadline={curDeadline}\n            tempPosition={tempPosition}\n          ></DeadlineContextMenu>\n        ) : null}\n        {displayLinkCtxMenu ? (\n          <LinkContextMenu\n            tempPosition={tempPosition}\n            closeFn={linkCloseFn}\n            saveFn={saveFn}\n            currentURL={currentURL}\n            currentURLText={currentURLText}\n            changeURLTextFn={changeURLTextFn}\n            changeURLFn={changeURLFn}\n          ></LinkContextMenu>\n        ) : null}\n        {displayLabelCtxMenu ? (\n          <LabelContextMenu\n            tempPosition={tempPosition}\n            saveLabel={saveLabel}\n            currentLabel={currentLabel}\n            cancelSaveLabel={cancelSaveLabel}\n            tempTask={tempTask}\n            currentLabelChange={currentLabelChange}\n            selectedLabelIdx={selectedLabelIdx}\n            selectedLabelIdxChange={selectedLabelIdxChange}\n            labels={labels}\n            currentLabelChangeByClick={currentLabelChangeByClick}\n          />\n        ) : null}\n        {displayDeleteCtxMenu ? (\n          <DeleteContextMenu\n            tempPosition={tempPosition}\n            tempTask={tempTask}\n            deleteTask={deleteTask}\n            cancelDelete={cancelDelete}\n          />\n        ) : null}\n        {displayCalendarCtxMenu ? (\n          <CalendarContextMenu\n            currentCalendarDate={currentCalendarDate}\n            addTaskToDate={this.props.addTaskToDate}\n            hideCalendarContextMenu={this.props.hideCalendarContextMenu}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ContextMenuContainer;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n\n    let modules = {\n        toolbar: [\n          [{ header: [1, 2, false] }],\n          [\"bold\", \"italic\", \"underline\", \"strike\", \"code-block\"],\n          [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" }\n          ],\n          [\"clean\"]\n        ]\n      },\n      formats = [\n        \"header\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strike\",\n        \"code-block\",\n        \"list\",\n        \"bullet\",\n        \"indent\"\n      ];\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"task-modal-title\">\n            {props.currentModalTask}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n                modules={modules}\n                formats={formats}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      numDays = Moment(end).diff(start, \"days\"),\n      num = 0,\n      day = start,\n      dates = [],\n      dateSet = {};\n    while (num < numDays) {\n      let date = Moment(day).format(\"YYYY-MM-DD\");\n      dates.push({ date: date, count: 0 });\n      dateSet[date] = num;\n      num++;\n      day = Moment(day).add(1, \"days\");\n    }\n    this.state = {\n      dates: dates,\n      dateSet: dateSet,\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  setUpDates = () => {\n    this.setState({\n      dates: this.getDatesFromProps()\n    });\n  };\n\n  getDatesFromProps = () => {\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n    dates = this.state.dates;\n    dates.forEach(date => {\n      date.count = 0;\n    });\n\n    for (let d in dateSet) {\n      let idx = this.state.dateSet[d];\n      dates && dates[idx] && dates[idx].count++;\n    }\n    return dates;\n  };\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    this.setUpDates();\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <ContextMenuContainer\n          displayCalendarCtxMenu={this.props.displayCalendarCtxMenu}\n          currentCalendarDate={this.props.currentCalendarDate}\n          addTaskToDate={this.props.addTaskToDate}\n          hideCalendarContextMenu={this.props.hideCalendarContextMenu}\n        />\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={(() => {\n            return this.getDatesFromProps();\n          })()}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n          classForValue={value => {\n            if (value && value !== null && value.count === 0) {\n              return \"color-empty\";\n            } else {\n              if (value === null) return \"color-empty\";\n              return \"color-filled\";\n            }\n          }}\n          onClick={value => {\n            if (value && value.date) {\n              this.props.showCalendarContextMenu(value.date);\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport \"./TabSelector.scss\";\nconst TabSelector = ({ shouldShowDashboard, hideDashboard, showDashboard }) => {\n  return (\n    <>\n      <Badge\n        className={\"tabselector \" + (!shouldShowDashboard ? \"selected\" : \"\")}\n        onClick={hideDashboard}\n      >\n        Tasks\n      </Badge>\n      <Badge\n        className={\"tabselector \" + (shouldShowDashboard ? \"selected\" : \"\")}\n        onClick={showDashboard}\n      >\n        Statistics\n      </Badge>\n    </>\n  );\n};\n\nexport default TabSelector;\n","import FacebookLogin from \"react-facebook-login\";\nimport React from \"react\";\nimport \"./LoginPage.scss\";\n\nconst LoginPage = ({ responseFacebook }) => {\n  return (\n    <>\n      <div className=\"login-welcome\">Welcome to Planner App</div>\n      <FacebookLogin\n        appId=\"176625356093687\"\n        autoLoad={false}\n        callback={responseFacebook}\n        cssClass=\"my-facebook-button-class\"\n        fields=\"name,email,picture\"\n      />\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Badge, ListGroup, ProgressBar } from \"react-bootstrap\";\nimport dragIcon from \"../assets/drag.svg\";\nimport Moment from \"moment\";\nimport eventIcon from \"../assets/event.svg\";\n\nconst TaskListGroup = ({\n  currentDraggingTask,\n  onDragEnd,\n  openTaskModal,\n  progressClick,\n  shouldShowColors,\n  showDeadlineContextMenu,\n  showDeleteContextMenu,\n  startDrag,\n  stopDrag,\n  tasks\n}) => {\n  let listId = 0;\n  const badgeOptions = [\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"warning\",\n    \"info\",\n    \"light\",\n    \"dark\"\n  ];\n  return (\n    <ListGroup className=\"listOfTasksContainer\">\n      {tasks.map(task => {\n        return (\n          <ListGroup.Item\n            key={listId++}\n            onDrop={() => {\n             stopDrag(task.task);\n            }}\n            onDragOver={e => {\n              e.preventDefault();\n            }}\n            className={\n              currentDraggingTask && currentDraggingTask.task === task.task\n                ? \"blur\"\n                : \"\"\n            }\n          >\n            {shouldShowColors ? (\n              <div className={\"color-status \" + task.progressState}></div>\n            ) : null}\n            <img\n              className=\"dragIcon\"\n              value={task.task}\n              src={dragIcon}\n              draggable\n              onDrag={startDrag}\n              onDragEnd={onDragEnd}\n            ></img>\n            <div\n              className=\"task-title\"\n              value={task.task}\n              onClick={openTaskModal}\n            >\n              <span className=\"details-icon\">Details</span>\n              {task.task}\n            </div>\n            {task.end ? (\n              <>\n                <img className=\"calendar-icon\" src={eventIcon} />\n                <div className=\"endTime\">{Moment(task.end).format(\"LLLL\")}</div>\n              </>\n            ) : null}\n\n            <button\n              onClick={showDeleteContextMenu}\n              value={task.task}\n              className=\"menuItembutton\"\n            />\n            <div className=\"list-link\">\n              <a href={\"https://\" + task.url} target=\"_blank\">\n                {task.urlText}\n              </a>\n            </div>\n\n            <button\n              onClick={showDeadlineContextMenu}\n              value={task.task}\n              className=\"menuLinkbutton\"\n            />\n            {!task.label ? null : (\n              <Badge\n                className=\"genericLabel\"\n                variant={badgeOptions[task.selectedLabelIdx]}\n              >\n                {task.label}\n              </Badge>\n            )}\n            <ProgressBar\n              striped\n              onClick={progressClick}\n              value={task.task}\n              now={!task.progressPercent ? 10 : task.progressPercent}\n            />\n          </ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nexport default TaskListGroup;\n","import db from \"./db\";\n\nexport function addToList(ev) {\n  if (this.state.curTask.trim().length >= 1) {\n    let curTask = this.state.curTask;\n    let tasks = this.state.tasks;\n    tasks.push({\n      task: curTask\n    });\n    this.setState({\n      tasks: tasks,\n      curTask: \"\"\n    });\n    db.tasks.put({ userName: this.props.userName, task: curTask });\n  }\n}\n\nexport function deleteTask(tempTask) {\n  let tasks = this.state.tasks,\n    curTask = tempTask,\n    idx;\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === curTask) {\n      idx = i;\n      break;\n    }\n  }\n  tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n  this.setState({\n    tasks: tasks,\n    showDeletedAnimation: true,\n    displayDeleteCtxMenu: false,\n    displayCurtain: false\n  });\n  db.tasks\n    .where(\"task\")\n    .equalsIgnoreCase(curTask)\n    .delete();\n\n  setTimeout(() => {\n    this.setState({\n      showDeletedAnimation: false\n    });\n  }, 3000);\n}\n\nexport function handleInputChange(ev) {\n  let val = ev.target.value;\n  if (val.length < 50) {\n    this.setState({\n      curTask: ev.target.value\n    });\n  }\n}\n","export function startDrag(ev) {\n  if (this.state.currentDraggingTask === null) {\n    let title = ev.currentTarget.getAttribute(\"value\"),\n      tasks = this.state.tasks,\n      deletedTask = null,\n      i;\n    for (i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === title) {\n        deletedTask = tasks[i];\n        break;\n      }\n    }\n    this.setState({\n      tasks: tasks,\n      currentDraggingTask: deletedTask\n    });\n  }\n}\n\nexport function stopDrag(task) {\n  let tasks = this.state.tasks,\n    i, // index of dropped area\n    idx = 0, // index of dragging task\n    curDragTask = this.state.currentDraggingTask;\n\n  for (idx = 0; idx < tasks.length; idx++) {\n    if (tasks[idx].task === curDragTask.task) {\n      break;\n    }\n  }\n  tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === task) {\n      break;\n    }\n  }\n  let firstHalf = tasks.slice(0, i + 1);\n  if (this.state.currentDraggingTask !== null) {\n    firstHalf.push({\n      task: curDragTask.task,\n      end: curDragTask.end,\n      url: curDragTask.url,\n      urlText: curDragTask.urlText,\n      progressState: curDragTask.progressState,\n      label: curDragTask.label,\n      selectedLabelIdx: curDragTask.selectedLabelIdx\n    });\n    tasks = firstHalf.concat(tasks.slice(i + 1, tasks.length));\n    this.setState({\n      tasks: tasks,\n      currentDraggingTask: null\n    });\n  }\n}\n\nexport function onDragEnd() {\n  if (this.state.currentDraggingTask) {\n    this.setState({\n      currentDraggingTask: null\n    });\n  }\n}\n","import db from \"./db\";\n// Function to show the context menu\nexport function showDeadlineContextMenu(ev) {\n  this.setState({\n    displayAllContextMenus: true,\n    displayCurtain: window.screen.width < 500 ? false : true, // hack for mobile TODO: fix later\n    tempTask: ev.currentTarget.value,\n    tempPosition: [ev.clientX, ev.clientY]\n  });\n}\n\nexport function deadlineChangeFn(time) {\n  this.setState({\n    curDeadline: time\n  });\n}\n\nexport function endTimeCloseFn() {\n  let tasks = this.state.tasks.concat();\n  let curTask = this.state.tempTask;\n  this.setState({\n    displayTaskCtxMenu: false\n  });\n  if (this.state.curDeadline) {\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].end = this.state.curDeadline;\n        break;\n      }\n    }\n    this.setState({\n      tasks: tasks\n    });\n\n    let firstMatch;\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        //if (Number.isInteger(end)) {\n        firstMatch = item;\n        //let endTime = Moment().add(end, \"hour\");\n        if (firstMatch) {\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            richText: firstMatch.richText,\n            endTime: this.state.curDeadline,\n            id: firstMatch.id,\n            label: firstMatch.label,\n            selectedLabelIdx: firstMatch.selectedLabelIdx\n          });\n        }\n        //  }\n      });\n  }\n  this.setState({\n    tempTask: \"\"\n    //curDeadline: \"\"\n  });\n}\n","import db from \"./db\";\n\nexport function saveLabel() {\n  let curLabel = this.state.currentLabel,\n    curTask = this.state.tempTask,\n    stateLabels = this.state.labels;\n  stateLabels.add(curLabel);\n  db.tasks\n    .where(\"task\")\n    .equalsIgnoreCase(curTask)\n    .first(item => {\n      let firstMatch = item;\n      db.tasks.put({\n        userName: this.props.userName,\n        task: curTask,\n        endTime: firstMatch.endTime,\n        url: firstMatch.url,\n        urlText: firstMatch.urlText,\n        progressState: firstMatch.progressState,\n        id: firstMatch.id,\n        label: curLabel,\n        selectedLabelIdx: this.state.selectedLabelIdx\n      });\n    });\n  let tasks = this.state.tasks.concat();\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === curTask) {\n      tasks[i].label = curLabel;\n      tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n      break;\n    }\n  }\n  this.setState({\n    displayAllContextMenus: false,\n    displayLabelCtxMenu: false,\n    currentLabel: \"\",\n    tasks: tasks,\n    labels: stateLabels\n  });\n}\n\nexport function cancelSaveLabel() {\n  this.setState({\n    displayAllContextMenus: false,\n    displayLabelCtxMenu: false,\n    currentLabel: \"\"\n  });\n}\n\nexport function currentLabelChange(v) {\n  this.setState({\n    currentLabel: v.currentTarget.value\n  });\n}\n\nexport function selectedLabelIdxChange(v) {\n  this.setState({\n    selectedLabelIdx: v\n  });\n}\n\nexport function currentLabelChangeByClick(v) {\n  this.setState({\n    currentLabel: v\n  });\n}\n","// Functions for the link\nimport db from \"./db\";\nexport function linkCloseFn() {\n  this.setState({\n    displayLinkCtxMenu: false,\n    currentURL: \"\",\n    currentURLText: \"\"\n  });\n}\n\nexport function saveLinkFn() {\n  let { currentURL, currentURLText, tempTask } = this.state,\n    tasks = this.state.tasks.concat();\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === tempTask) {\n      tasks[i].url = currentURL;\n      tasks[i].urlText = currentURLText;\n      break;\n    }\n  }\n  db.tasks\n    .where(\"task\")\n    .equalsIgnoreCase(tempTask)\n    .first(item => {\n      let firstMatch = item;\n      db.tasks.put({\n        userName: this.props.userName,\n        task: tempTask,\n        endTime: firstMatch.endTime,\n        url: currentURL,\n        urlText: currentURLText,\n        id: firstMatch.id\n      });\n    });\n  this.setState({\n    displayLinkCtxMenu: false,\n    tasks: tasks,\n    currentURL: \"\",\n    currentURLText: \"\"\n  });\n}\n\nexport function changeURLTextFn(ev) {\n  this.setState({\n    currentURLText: ev.target.value\n  });\n}\n\nexport function changeURLFn(ev) {\n  this.setState({\n    currentURL: ev.target.value\n  });\n}\n","import db from \"./db\";\n\nexport function responseFacebook(res) {\n  let tasks = [],\n    labels = new Set(); // we're going to use a Set to store the labels\n  window.localStorage.setItem(\"todousername\", res.name);\n  db.tasks\n    .where(\"userName\")\n    .equalsIgnoreCase(res.name)\n    .each(rec => {\n      if (rec.label) {\n        labels.add(rec.label);\n      }\n      tasks.push({\n        task: rec.task,\n        end: rec.endTime,\n        url: rec.url,\n        urlText: rec.urlText,\n        progressPercent: rec.progressPercent,\n        label: rec.label,\n        selectedLabelIdx: rec.selectedLabelIdx\n      });\n    })\n    .then(() => {\n      this.props.facebookLoginDispatch({\n        loggedin: true,\n        userName: res.name || \"Hello\"\n      });\n      if (tasks.length === 0) {\n        tasks.push({\n          task: \"Add a task like this!\",\n          end: new Date(),\n          url: \"www.google.com\",\n          urlText: \"Add a link like this\",\n          progressPercent: 10,\n          label: \"Label\",\n          selectedLabelIdx: 1\n        });\n      }\n      this.setState({\n        tasks: tasks,\n        labels: labels\n      });\n    });\n}\n\nexport function logOutFacebook() {\n  window.localStorage.removeItem(\"todousername\");\n  window.FB.logout();\n  this.props.facebookLoginDispatch({\n    loggedin: false,\n    userName: \"User\"\n  });\n}\n","import Moment from \"moment\";\nexport function sortTasksByLabel() {\n  let tasks = this.state.tasks;\n  tasks.sort(function(a, b) {\n    let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n      textB = (b.label && b.label.toUpperCase()) || \"Z\";\n    return textA < textB ? -1 : textA > textB ? 1 : 0;\n  });\n\n  this.setState({\n    tasks: tasks,\n    displaySortingOptionsMenu: false,\n    displayCurtain: false\n  });\n}\n\nexport function sortTasksByEndTime() {\n  let tasks = this.state.tasks;\n  tasks.sort(function(a, b) {\n    if (!a.end) {\n      a.end = Moment(new Date()).subtract(10, \"years\");\n      a.removeEnd = true;\n    }\n    if (!b.end) {\n      b.end = Moment(new Date()).subtract(10, \"years\");\n      b.removeEnd = true;\n    }\n    return -1 * Moment(a.end).diff(Moment(b.end));\n  });\n  tasks.forEach(t => {\n    if (t.removeEnd) t.end = undefined;\n  });\n  this.setState({\n    tasks: tasks,\n    displaySortingOptionsMenu: false,\n    displayCurtain: false\n  });\n}\n\nexport function showSortingOptionsMenu(ev) {\n  this.setState({\n    displaySortingOptionsMenu: true,\n    displayCurtain: window.screen.width > 500 ? true : false,\n    tempPosition: [ev.clientX, ev.clientY]\n  });\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport \"react-toggle/style.css\"; // for ES6 modules\nimport Toggle from \"react-toggle\";\nimport Moment from \"moment\";\nimport CompletedAnimation from \"./animations/CompletedAnimation\";\nimport DeletedAnimation from \"./animations/DeletedAnimation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport TabSelector from \"./TabSelector\";\nimport LoginPage from \"./LoginPage\";\nimport TasksListGroup from \"./Tasks/TasksListGroup\";\nimport {\n  addToList,\n  deleteTask,\n  handleInputChange\n} from \"./_TaskListsFunctions\";\nimport { startDrag, stopDrag, onDragEnd } from \"./_DragActions\";\nimport {\n  showDeadlineContextMenu,\n  deadlineChangeFn,\n  endTimeCloseFn\n} from \"./_DeadlineFunctions\";\n\nimport {\n  saveLabel,\n  cancelSaveLabel,\n  currentLabelChange,\n  selectedLabelIdxChange,\n  currentLabelChangeByClick\n} from \"./_LabelFunctions\";\nimport {\n  linkCloseFn,\n  saveLinkFn,\n  changeURLTextFn,\n  changeURLFn\n} from \"./_LinkFunctions\";\nimport { responseFacebook, logOutFacebook } from \"./_SignInFunctions\";\nimport {\n  sortTasksByLabel,\n  sortTasksByEndTime,\n  showSortingOptionsMenu\n} from \"./_SortingFunctions\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      displayCalendarCtxMenu: false,\n      currentCalendarDate: null,\n      currentURL: \"\",\n      currentURLText: \"\",\n      currentDraggingTask: null,\n      showModal: false,\n      showCompletedAnimation: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      shouldShowDashboard: false,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Close\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n    // async function getStocks() {\n    //   let url =\n    //     \"https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=MSFT&interval=30min&apikey=1HZKQ8BEPBGQMTV0\";\n    //   let res = await fetch(url);\n    //   let text = await res.text();\n    //   console.log(text);\n    // }\n    // getStocks();\n  };\n\n  responseFacebook = responseFacebook.bind(this);\n\n  logOutFacebook = logOutFacebook.bind(this);\n\n  addToList = addToList.bind(this);\n\n  closeAllCtxMenus = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = handleInputChange.bind(this);\n\n  deleteTask = deleteTask.bind(this);\n\n  // Function to show the context menu\n  showDeadlineContextMenu = showDeadlineContextMenu.bind(this);\n\n  deadlineChangeFn = deadlineChangeFn.bind(this);\n\n  endTimeCloseFn = endTimeCloseFn.bind(this);\n\n  // Functions for the link\n  linkCloseFn = linkCloseFn.bind(this);\n\n  saveLinkFn = saveLinkFn.bind(this);\n\n  changeURLTextFn = changeURLTextFn.bind(this);\n\n  changeURLFn = changeURLFn.bind(this);\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  showDashboard = () => {\n    this.setState({\n      shouldShowDashboard: true\n    });\n  };\n\n  hideDashboard = () => {\n    this.setState({\n      shouldShowDashboard: false\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item\n            ? item.task\n            : \"You'll see your task header here\",\n          currentModalTaskEnd: item ? item.endTime : \"Jan 24 2020 8:45pm EST\",\n          currentRichText: item\n            ? item.richText\n            : \"Here you can have a details section too! ^_^\"\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  saveLabel = saveLabel.bind(this);\n\n  cancelSaveLabel = cancelSaveLabel.bind(this);\n\n  currentLabelChange = currentLabelChange.bind(this);\n\n  selectedLabelIdxChange = selectedLabelIdxChange.bind(this);\n\n  currentLabelChangeByClick = currentLabelChangeByClick.bind(this);\n\n  sortTasksByLabel = sortTasksByLabel.bind(this);\n\n  sortTasksByEndTime = sortTasksByEndTime.bind(this);\n\n  showSortingOptionsMenu = showSortingOptionsMenu.bind(this);\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showCalendarContextMenu = date => {\n    this.setState({\n      displayCalendarCtxMenu: true,\n      currentCalendarDate: date\n    });\n  };\n\n  hideCalendarContextMenu = () => {\n    this.setState({\n      displayCalendarCtxMenu: false\n    });\n  };\n\n  // callback that we will pass to CalendarContextMenu\n  addTaskToDate = (task, date) => {\n    let tasks = this.state.tasks;\n\n    tasks.push({\n      task: task,\n      end: Moment(date)._d,\n      url: null,\n      urlText: null,\n      progressPercent: null,\n      label: null,\n      selectedLabelIdx: null\n    });\n\n    this.setState({\n      tasks: tasks\n    });\n\n    db.tasks.put({\n      userName: this.props.userName,\n      task: task,\n      endTime: Moment(date)._d\n    });\n  };\n\n  startDrag = startDrag.bind(this);\n\n  stopDrag = stopDrag.bind(this);\n\n  progressClick = ev => {\n    //console.log(ev.clientX);\n    let dims = ev.currentTarget.getBoundingClientRect(),\n      curTask = ev.currentTarget.getAttribute(\"value\"),\n      percentDone =\n        Math.ceil(\n          Math.floor(((ev.clientX - dims.left) / dims.width) * 100) / 10\n        ) * 10,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressPercent = percentDone;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        if (item) {\n          let firstMatch = item;\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            endTime: firstMatch.endTime,\n            url: firstMatch.url,\n            urlText: firstMatch.urlText,\n            progressPercent: percentDone,\n            id: firstMatch.id\n          });\n        }\n      });\n    this.setState({\n      tasks: tasks\n    });\n\n    if (percentDone === 100) {\n      this.setState({\n        showCompletedAnimation: true\n      });\n      setTimeout(() => {\n        this.setState({\n          showCompletedAnimation: false\n        });\n      }, 4000);\n    }\n  };\n\n  render = () => {\n    let {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        displayCalendarCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        hideCalendarContextMenu,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showCalendarContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <CompletedAnimation show={this.state.showCompletedAnimation} />\n              <DeletedAnimation show={this.state.showDeletedAnimation} />\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                <div className=\"welcomeBar\">\n                  {\"Welcome \"}\n                  <span className=\"userName\">{userName}</span>\n                </div>\n                <div className=\"toggle-container\">\n                  <label>\n                    <Toggle\n                      defaultChecked={false}\n                      onChange={showColors}\n                      value={shouldShowColors}\n                    />\n                  </label>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TabSelector\n                shouldShowDashboard={this.state.shouldShowDashboard}\n                showDashboard={this.showDashboard}\n                hideDashboard={this.hideDashboard}\n              />\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              />\n              {this.state.shouldShowDashboard ? (\n                <Dashboard\n                  tasks={this.state.tasks}\n                  currentCalendarDate={this.state.currentCalendarDate}\n                  displayCalendarCtxMenu={this.state.displayCalendarCtxMenu}\n                  showCalendarContextMenu={showCalendarContextMenu}\n                  hideCalendarContextMenu={hideCalendarContextMenu}\n                  addTaskToDate={this.addTaskToDate}\n                />\n              ) : null}\n              {this.state.shouldShowDashboard ? null : (\n                <>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      onChange={handleInputChange}\n                      value={curTask}\n                      placeholder=\"Add task to do\"\n                      aria-label=\"Add task to do\"\n                      aria-describedby=\"basic-addon2\"\n                    />\n                    <InputGroup.Append>\n                      <Button onClick={addToList} variant=\"outline-secondary\">\n                        Add\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <ContextMenuContainer\n                    cancelDelete={this.cancelDelete}\n                    cancelSaveLabel={cancelSaveLabel}\n                    changeFn={deadlineChangeFn}\n                    changeURLFn={changeURLFn}\n                    closeFn={linkCloseFn}\n                    curDeadline={curDeadline}\n                    currentLabel={this.state.currentLabel}\n                    currentLabelChange={this.currentLabelChange}\n                    currentLabelChangeByClick={this.currentLabelChangeByClick}\n                    currentURL={currentURL}\n                    currentURLText={currentURLText}\n                    changeURLTextFn={changeURLTextFn}\n                    deleteTask={deleteTask}\n                    displayAllContextMenus={displayAllContextMenus}\n                    displayDeleteCtxMenu={this.state.displayDeleteCtxMenu}\n                    displayLabelCtxMenu={this.state.displayLabelCtxMenu}\n                    displaySortingOptionsMenu={displaySortingOptionsMenu}\n                    displayTaskCtxMenu={displayTaskCtxMenu}\n                    displayLinkCtxMenu={displayLinkCtxMenu}\n                    displayCalendarCtxMenu={displayCalendarCtxMenu}\n                    addTaskToDate={this.addTaskToDate}\n                    endTimeCloseFn={endTimeCloseFn}\n                    labels={this.state.labels}\n                    linkCloseFn={linkCloseFn}\n                    menuOptionsList={\n                      displayAllContextMenus\n                        ? menuOptionsList\n                        : this.state.sortingOptions\n                    }\n                    saveFn={saveLinkFn}\n                    saveLabel={saveLabel}\n                    selectedLabelIdx={this.state.selectedLabelIdx}\n                    selectedLabelIdxChange={this.selectedLabelIdxChange}\n                    tempPosition={tempPosition}\n                    tempTask={this.state.tempTask}\n                  />\n                  <TasksListGroup\n                    tasks={this.state.tasks}\n                    currentDraggingTask={this.state.currentDraggingTask}\n                    onDragEnd={onDragEnd.bind(this)}\n                    openTaskModal={this.openTaskModal}\n                    showDeadlineContextMenu={showDeadlineContextMenu}\n                    showDeleteContextMenu={this.showDeleteContextMenu}\n                    shouldShowColors={this.state.shouldShowColors}\n                    startDrag={this.startDrag}\n                    stopDrag={this.stopDrag}\n                    progressClick={this.progressClick}\n                  />\n                </>\n              )}\n            </div>\n          ) : (\n            <LoginPage responseFacebook={this.responseFacebook} />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/event.90837826.svg\";"],"sourceRoot":""}