{"version":3,"sources":["assets/event.svg","assets/drag.svg","animations/CompletedAnimation.js","animations/DeletedAnimation.js","MenuItems.js","contextMenus/withContextMenu.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","contextMenus/DeadlineContextMenu.js","contextMenus/CalendarContextMenu.js","contextMenus/ContextMenuContainer.js","db.js","TaskModal.js","Dashboard.js","TabSelector.js","LoginPage.js","_TaskListsFunctions.js","_DragActions.js","_LabelFunctions.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js"],"names":["module","exports","CompletedAnimation","props","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","show","className","options","height","width","DeletedAnimation","style","position","zIndex","top","left","transform","MenuItems","menuOptionsList","tempPosition","map","item","ListGroup","Item","key","text","onClick","divStyle","window","screen","id","withHOC","OriginalComponent","matchMedia","matches","console","log","this","right","marginLeft","marginRight","name","React","Component","isMobile","bottom","border","borderTopLeftRadius","borderTopRightRadius","boxShadow","Form","Group","controlId","FormControl","onChange","changeURLFn","value","currentURL","placeholder","aria-label","aria-describedby","changeURLTextFn","currentURLText","Button","variant","saveFn","closeFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","cancelDelete","deleteTask","tempTask","useState","Date","startDate","setStartDate","useEffect","datePickers","document","getElementsByClassName","Array","from","el","childNodes","setAttribute","selected","date","changeFn","toString","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","InputGroup","Append","CalendarContextMenu","curTask","setCurTask","event","target","length","addTaskToDate","currentCalendarDate","hideCalendarContextMenu","ContextMenuContainer","displayAllContextMenus","displaySortingOptionsMenu","displayTaskCtxMenu","endTimeCloseFn","curDeadline","displayDeleteCtxMenu","displayLinkCtxMenu","displayLabelCtxMenu","displayCalendarCtxMenu","linkCloseFn","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","put","userName","endTime","end","richText","then","state","Modal","onHide","centered","Header","closeButton","Title","Body","Label","Moment","currentModalTaskEnd","format","onRichTextChange","modules","toolbar","header","list","indent","formats","Footer","Dashboard","start","subtract","add","numDays","diff","num","day","dates","dateSet","count","firstDate","lastDate","d","setState","endDate","values","titleForValue","v","classForValue","showCalendarContextMenu","TabSelector","shouldShowDashboard","hideDashboard","showDashboard","LoginPage","responseFacebook","appId","autoLoad","callback","cssClass","fields","addToList","trim","i","slice","concat","showDeletedAnimation","displayCurtain","delete","setTimeout","handleInputChange","startDrag","currentDraggingTask","title","deletedTask","stopDrag","curDragTask","firstHalf","url","urlText","progressState","onDragEnd","curLabel","stateLabels","firstMatch","App","componentDidMount","localStorage","getItem","res","Set","setItem","each","rec","facebookLoginDispatch","loggedin","logOutFacebook","removeItem","FB","logout","bind","closeAllCtxMenus","showDeadlineContextMenu","clientX","clientY","deadlineChangeFn","time","saveLinkFn","changeProgressState","param","parentElement","classList","remove","showCompletedAnimation","showColors","curState","shouldShowColors","openTaskModal","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","undefined","showSortingOptionsMenu","showDeleteContextMenu","_d","render","listId","badgeOptions","defaultChecked","currentTask","sortingOptions","onDrop","onDragOver","e","preventDefault","src","dragIcon","draggable","onDrag","eventIcon","href","Accordion","defaultActiveKey","Card","Toggle","eventKey","ProgressBar","striped","now","Collapse","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,q91HCyB5BC,G,OArBY,SAAAC,GACzB,IAAMC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,aAIzB,OAAIN,EAAMO,KAEN,yBAAKC,UAAU,uBACb,kBAAC,IAAD,CAAQC,QAASR,EAAgBS,OAAQ,IAAKC,MAAO,OAIlD,uC,SCWIC,EA7BU,SAAAZ,GACvB,IAAMC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,aAYzB,OAAIN,EAAMO,KAEN,yBAAKC,UAAU,oBAAoBK,MAVzB,CACZC,SAAU,WACVC,OAAQ,IACRC,IAAK,MACLC,KAAM,MACNC,UAAW,0BAMP,kBAAC,IAAD,CAAQT,QAASR,EAAgBS,OAAQ,IAAKC,MAAO,OAIlD,sC,mCCWIQ,EAlCG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAC9BZ,EAAUW,EAAgBE,KAAI,SAAAC,GAChC,OACE,kBAACC,EAAA,EAAUC,KAAX,CACEjB,UAAU,aACVkB,IAAKH,EAAKI,KACVC,QAASL,EAAKK,SAEbL,EAAKI,SAIZE,EAAW,CACTZ,KACEI,EAAa,GAAK,IAAMS,OAAOC,OAAOpB,MAClCU,EAAa,GAAK,KAClBA,EAAa,GAAK,IAAM,KAC9BL,IACEK,EAAa,GAAK,IAAMS,OAAOC,OAAOpB,MAClCU,EAAa,GAAK,KAClBA,EAAa,GAAK,GAAK,MAEjC,OACE,kBAACG,EAAA,EAAD,CAAWhB,UAAU,YAAYwB,GAAG,YAAYnB,MAAOgB,GACpDpB,ICYQwB,G,cAvCC,SAAAC,GAoCd,OApCmC,iLAGhBJ,OAAOK,WAAW,sCAC9BC,QAIDC,QAAQC,IAAI,iBAEZD,QAAQC,IAAI,mBAGV,IAAEtC,EAAUuC,KAAVvC,MACJ6B,EACE7B,EAAMqB,aAAa,GAAK,IAAMS,OAAOC,OAAOpB,MACxC,CACEM,KAAMjB,EAAMqB,aAAa,GAAK,KAC9BL,IAAKhB,EAAMqB,aAAa,GAAK,MAE/B,CACEJ,KAAM,IACNuB,MAAO,IACPxB,IAAK,MACLyB,WAAY,OACZC,YAAa,QAEvB,OACE,kBAACR,EAAD,iBACMK,KAAKvC,MADX,CAEE6B,SAAUA,EACVc,KAAK,kBA/BsB,GACRC,IAAMC,a,2BCkEpBZ,KA/DS,SAAAjC,GACtB,IAAIa,EAAQ,GACRiC,EAAWhB,OAAOK,WAAW,sCAC9BC,QAaH,OAZIU,IACFjC,EAAMC,SAAW,WACjBD,EAAMkC,OAAS,MACflC,EAAMI,KAAO,MACbJ,EAAMG,IAAM,MACZH,EAAMF,MAAQ,OACdE,EAAMmC,OAAS,sBACfnC,EAAMoC,oBAAsB,OAC5BpC,EAAMqC,qBAAuB,OAC7BrC,EAAMsC,UAAY,sCAIlB,yBAAK3C,UAAU,kBAAkBK,MAAOiC,EAAWjC,EAAQb,EAAM6B,UAC/D,kBAACuB,EAAA,EAAD,CAAM5C,UAAU,QACd,kBAAC4C,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACC,EAAA,EAAD,CACEC,SAAUxD,EAAMyD,YAChBC,MAAO1D,EAAM2D,WACbC,YAAY,UACZC,aAAW,UACXC,mBAAiB,kBAGrB,kBAACV,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACC,EAAA,EAAD,CACEC,SAAUxD,EAAM+D,gBAChBL,MAAO1D,EAAMgE,eACbJ,YAAY,mBACZC,aAAW,mBACXC,mBAAiB,kBAGrB,6BACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,UACR1D,UAAU,mBACVoB,QAAS5B,EAAMmE,QAHjB,MAOA,kBAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYtC,QAAS5B,EAAMoE,SAA3C,gB,kBCgDKnC,KA5FU,SAAAjC,GACvB,IAAIa,EAAQ,GACRiC,EAAWhB,OAAOK,WAAW,sCAC9BC,QACCU,IACFjC,EAAMC,SAAW,WACjBD,EAAMkC,OAAS,MACflC,EAAMI,KAAO,MACbJ,EAAMG,IAAM,MACZH,EAAMF,MAAQ,OACdE,EAAMmC,OAAS,sBACfnC,EAAMoC,oBAAsB,OAC5BpC,EAAMqC,qBAAuB,OAC7BrC,EAAMsC,UAAY,sCAEpB,IASEkB,EATmB,CACjB,YACA,UACA,SACA,UACA,OACA,QACA,QAEuB/C,KAAI,SAACC,EAAM+C,GAAP,OAC3B,yBACE5C,IAAK4C,EACL9D,UACE,eACAe,GACC+C,IAAQtE,EAAMuE,iBAAmB,WAAa,IAEjD3C,QAAS,WACP5B,EAAMwE,uBAAuBF,SAInCG,EAAiB,GACnBzE,EAAM0E,OAAOC,SAAQ,SAAAC,GACnBH,EAAeI,KAAKD,MAGtB,IAAME,EAAqB,SAAAC,GACzB/E,EAAMgF,0BAA0BD,EAAGE,cAAcC,aAAa,WAE5DlD,GAAM,EACJmD,EAAwBV,EAAenD,KAAI,SAAAsD,GAE/C,OADA5C,IAEE,kBAACoD,EAAA,EAAD,CACE1D,IAAKM,EACLxB,UAAU,gBACV0D,QAAQ,UACRtC,QAASkD,EACTpB,MAAOkB,GAENA,MAIP,OACE,yBAAKpE,UAAU,mBAAmBK,MAAOiC,EAAWjC,EAAQb,EAAM6B,UAChE,kBAACuB,EAAA,EAAD,CAAM5C,UAAU,QACd,kBAAC4C,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACC,EAAA,EAAD,CACEK,YAAY,QACZC,aAAW,UACXC,mBAAiB,eACjBJ,MAAO1D,EAAMqF,aACb7B,SAAUxD,EAAMsF,sBAGpB,wBAAI9E,UAAU,2BAAd,gBACA,yBAAKA,UAAU,mBAAmB6D,GAClC,yBAAK7D,UAAU,sBAAsB2E,EAArC,KACA,6BACE,kBAAClB,EAAA,EAAD,CACEC,QAAQ,UACR1D,UAAU,mBACVoB,QAAS5B,EAAMuF,WAHjB,MAOA,kBAACtB,EAAA,EAAD,CAAQC,QAAQ,YAAYtC,QAAS5B,EAAMwF,iBAA3C,gBC7CKvD,G,OAAAA,GAxCW,SAAAjC,GACxB,IAIIa,EAAQ,GACRiC,EAAWhB,OAAOK,WAAW,sCAC9BC,QAYH,OAXIU,IACFjC,EAAMC,SAAW,WACjBD,EAAMkC,OAAS,MACflC,EAAMI,KAAO,MACbJ,EAAMG,IAAM,MACZH,EAAMF,MAAQ,OACdE,EAAMmC,OAAS,sBACfnC,EAAMoC,oBAAsB,OAC5BpC,EAAMqC,qBAAuB,OAC7BrC,EAAMsC,UAAY,sCAGlB,yBACE3C,UAAU,oBACVK,MAAOiC,EAAWjC,EAAQb,EAAM6B,UAEhC,2EACA,kBAACoC,EAAA,EAAD,CACEpD,MAzBmB,CACvB6B,YAAa,OAyBTlC,UAAU,eACV0D,QAAQ,YACRtC,QAAS5B,EAAMyF,cAJjB,UAQA,kBAACxB,EAAA,EAAD,CAAQC,QAAQ,SAAStC,QAAS,kBAAM5B,EAAM0F,WAAW1F,EAAM2F,YAA/D,oB,6CC4DS1D,G,OAAAA,GAzFa,SAAAjC,GAAU,IAAD,EACD4F,mBAAS,IAAIC,MADZ,mBAC5BC,EAD4B,KACjBC,EADiB,KAE/BlF,EAAQ,GACRiC,EAAWhB,OAAOK,WAAW,sCAC9BC,QAuBH,OAtBIU,IACFjC,EAAMC,SAAW,WACjBD,EAAMmC,OAAS,sBACfnC,EAAMoC,oBAAsB,OAC5BpC,EAAMqC,qBAAuB,OAC7BrC,EAAMF,MAAQ,OACdE,EAAMkC,OAAS,MACflC,EAAMI,KAAO,MACbJ,EAAMH,OAAS,QACfG,EAAMsC,UAAY,sCAGpB6C,qBAAU,WACR,GAAIlD,EAAU,CACZ,IAAMmD,EAAcC,SAASC,uBAC3B,qCAEFC,MAAMC,KAAKJ,GAAatB,SAAQ,SAAA2B,GAAE,OAChCA,EAAGC,WAAW,GAAGC,aAAa,YAAY,UAK9C,oCACE,yBACEhG,UAAU,kBACVK,MAAOiC,EAAWjC,EAAQb,EAAM6B,UAEhC,kBAAC,IAAD,CACE4E,SAAUX,EACVtC,SAAU,SAAAkD,GACRX,EAAaW,GACb1G,EAAM2G,SAASD,EAAKE,aAEtBC,gBAAc,EACdC,WAAW,QACXC,cAAe,GACfC,YAAY,OACZC,WAAW,yBAEb,0BAAMzG,UAAU,iBAAhB,kCAYE,kBAAC0G,EAAA,EAAWC,OAAZ,KACE,kBAAClD,EAAA,EAAD,CACEzD,UAAU,qBACVoB,QAAS5B,EAAMoE,QACfF,QAAQ,aAHV,UAOA,kBAACD,EAAA,EAAD,CACEzD,UAAU,kBACVoB,QAAS,WACP5B,EAAM2G,SAASb,GACf9F,EAAMoE,UACN/B,QAAQC,IAAIwD,IAEd5B,QAAQ,WAPV,eC5BGkD,G,OAzCa,SAAApH,GAAU,IAAD,EACL4F,mBAAS,IADJ,mBAC5ByB,EAD4B,KACnBC,EADmB,KAanC,OACE,yBAAK9G,UAAU,mBACb,kBAAC0G,EAAA,EAAD,CAAY1G,UAAU,QACpB,kBAAC+C,EAAA,EAAD,CACEG,MAAO2D,EACP7D,SAAU,SAAA+D,GAAK,OAAID,EAAWC,EAAMC,OAAO9D,QAC3CE,YAAY,WACZC,aAAW,aAEb,kBAACqD,EAAA,EAAWC,OAAZ,KACE,kBAAClD,EAAA,EAAD,CAAQzD,UAAU,SAASkD,MAAO2D,EAASzF,QApB/B,WACdyF,EAAQI,OAAS,IACnBzH,EAAM0H,cAAcL,EAASrH,EAAM2H,qBACnC3H,EAAM4H,6BAiBF,OAGA,kBAAC3D,EAAA,EAAD,CACEzD,UAAU,YACV0D,QAAQ,YACRR,MAAO2D,EACPzF,QApBE,WACV5B,EAAM4H,4BAeA,YAUJ,kBAACxC,EAAA,EAAD,KAAQpF,EAAM2H,wBCqELE,E,iLApGH,IAAD,EAgCHtF,KAAKvC,MA9BP8H,EAFK,EAELA,uBACAzG,EAHK,EAGLA,aACAD,EAJK,EAILA,gBACA2G,EALK,EAKLA,0BACAC,EANK,EAMLA,mBACAC,EAPK,EAOLA,eACAtB,EARK,EAQLA,SACAuB,EATK,EASLA,YACAP,EAVK,EAULA,oBACAQ,EAXK,EAWLA,qBACAC,EAZK,EAYLA,mBACAC,EAbK,EAaLA,oBACAC,EAdK,EAcLA,uBACAC,EAfK,EAeLA,YACApE,EAhBK,EAgBLA,OACAR,EAjBK,EAiBLA,WACAK,EAlBK,EAkBLA,eACAD,EAnBK,EAmBLA,gBACAN,EApBK,EAoBLA,YACA8B,EArBK,EAqBLA,UACAF,EAtBK,EAsBLA,aACAG,EAvBK,EAuBLA,gBACAG,EAxBK,EAwBLA,SACAL,EAzBK,EAyBLA,mBACAf,EA1BK,EA0BLA,iBACAC,EA3BK,EA2BLA,uBACAE,EA5BK,EA4BLA,OACAM,EA7BK,EA6BLA,0BACAU,EA9BK,EA8BLA,WACAD,EA/BK,EA+BLA,aAEF,OACE,oCACGqC,EACC,kBAAC,EAAD,CACEzG,aAAcA,EACdD,gBAAiBA,IAEjB,KACH2G,EACC,kBAAC,EAAD,CACE1G,aAAcA,EACdD,gBAAiBA,IAEjB,KACH4G,EACC,kBAAC,EAAD,CACE5D,QAAS6D,EACTtB,SAAUA,EACVuB,YAAaA,EACb7G,aAAcA,IAEd,KACH+G,EACC,kBAAC,EAAD,CACE/G,aAAcA,EACd+C,QAASmE,EACTpE,OAAQA,EACRR,WAAYA,EACZK,eAAgBA,EAChBD,gBAAiBA,EACjBN,YAAaA,IAEb,KACH4E,EACC,kBAAC,EAAD,CACEhH,aAAcA,EACdkE,UAAWA,EACXF,aAAcA,EACdG,gBAAiBA,EACjBG,SAAUA,EACVL,mBAAoBA,EACpBf,iBAAkBA,EAClBC,uBAAwBA,EACxBE,OAAQA,EACRM,0BAA2BA,IAE3B,KACHmD,EACC,kBAAC,EAAD,CACE9G,aAAcA,EACdsE,SAAUA,EACVD,WAAYA,EACZD,aAAcA,IAEd,KACH6C,EACC,kBAAC,EAAD,CACEX,oBAAqBA,EACrBD,cAAenF,KAAKvC,MAAM0H,cAC1BE,wBAAyBrF,KAAKvC,MAAM4H,0BAEpC,U,GA/FuBhF,IAAMC,W,2CCPnC2F,EAAK,I,OAAIC,GAAM,WACrBD,EAAGE,QAAQ,GAAGC,OAAO,CAAEC,MAAO,yBAEfJ,QCqGAK,E,YAlGb,WAAY7I,GAAQ,IAAD,8BACjB,4CAAMA,KAMRoE,QAAU,WACR,IAAI0E,EAAU,KACd,EAAK9I,MAAM4I,MAAMjE,SAAQ,SAAAoE,GACnBA,EAAEC,OAAS,EAAKhJ,MAAMiJ,mBACxBH,EAAUC,MAGdP,EAAGI,MACAM,MAAM,QACNC,iBAAiB,EAAKnJ,MAAMiJ,kBAC5BG,OAAM,SAAA7H,GACDA,IACFc,QAAQC,IAAR,cACAkG,EAAGI,MAAMS,IAAI,CACXC,SAAU,EAAKtJ,MAAMsJ,SACrBN,KAAM,EAAKhJ,MAAMiJ,iBACjBM,QAAST,EAAQU,IACjBC,SAAU,EAAKzJ,MAAMyJ,SACrBzH,GAAIT,EAAKS,GACT4C,MAAOrD,EAAKqD,MACZL,iBAAkBhD,EAAKgD,uBAI5BmF,MAAK,WACJ,EAAK1J,MAAMoE,cA9Bf,EAAKuF,MAAQ,CACXhI,KAAM3B,EAAMyJ,UAAY,IAHT,E,sEAoCjB,IAAIzJ,EAAQuC,KAAKvC,MA0BjB,OACE,kBAAC4J,EAAA,EAAD,CAAOrJ,KAAMP,EAAMO,KAAMsJ,OAAQ7J,EAAM6J,OAAQC,UAAQ,GACrD,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,CAAazJ,UAAU,oBACpBR,EAAMiJ,mBAGX,kBAACW,EAAA,EAAMM,KAAP,KACE,kBAAC9G,EAAA,EAAKC,MAAN,CAAYC,UAAU,gCACpB,kBAACF,EAAA,EAAK+G,MAAN,KACGnK,EAAMiJ,kBACL,WAAamB,IAAOpK,EAAMqK,qBAAqBC,OAAO,SAGxD,kBAAC,IAAD,CACE5G,MAAO1D,EAAMyJ,UAAY,GACzBjG,SAAUxD,EAAMuK,iBAChBC,QAzCE,CACVC,QAAS,CACP,CAAC,CAAEC,OAAQ,CAAC,EAAG,GAAG,KAClB,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CACE,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,OAEZ,CAAC,WAgCKC,QA7BA,CACR,SACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,cAyBA,kBAACjB,EAAA,EAAMkB,OAAP,KACE,kBAAC7G,EAAA,EAAD,CAAQC,QAAQ,YAAYtC,QAASW,KAAK6B,SAA1C,SAGA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUtC,QAASW,KAAK6B,SAAxC,sB,GA1FcxB,IAAMC,W,0BC0FfkI,G,mBAvFb,WAAY/K,GAAQ,IAAD,sBACjB,4CAAMA,IAYN,IAXA,IAAIgL,EAAQZ,IAAO,IAAIvE,MAClBoF,SAAS,GAAI,QACbX,OAAO,cACVd,EAAMY,IAAO,IAAIvE,MACdqF,IAAI,IAAK,QACTZ,OAAO,cACVa,EAAUf,IAAOZ,GAAK4B,KAAKJ,EAAO,QAClCK,EAAM,EACNC,EAAMN,EACNO,EAAQ,GACRC,EAAU,GACLH,EAAMF,GAAS,CACpB,IAAIzE,EAAO0D,IAAOkB,GAAKhB,OAAO,cAC9BiB,EAAM1G,KAAK,CAAE6B,KAAMA,EAAM+E,MAAO,IAChCD,EAAQ9E,GAAQ2E,EAChBA,IACAC,EAAMlB,IAAOkB,GAAKJ,IAAI,EAAG,QAlBV,OAoBjB,EAAKvB,MAAQ,CACX4B,MAAOA,EACPC,QAASA,EACTE,UAAWV,EACXW,SAAUnC,GAxBK,E,iFA+BjB,IAAIgC,EAAU,GACZD,EAAQ,GASV,IAAK,IAAIK,KARTrJ,KAAKvC,MAAM4I,MAAMjE,SAAQ,SAAAoE,GACvB,GAAIA,EAAES,IAAK,CACT,IAAI9C,EAAO0D,IAAOrB,EAAES,KAAKc,OAAO,cAChCkB,EAAQ9E,GAAQ8E,EAAQ9E,GAAQ8E,EAAQ9E,GAAQ,EAAI,MAGxD6E,EAAQhJ,KAAKoH,MAAM4B,MAELC,EAAS,CACrB,IAAIlH,EAAM/B,KAAKoH,MAAM6B,QAAQI,GAC7BL,GAASA,EAAMjH,IAAQiH,EAAMjH,GAAKmH,QAEpClJ,KAAKsJ,SAAS,CACZN,MAAOA,M,+BAID,IAAD,OACP,OACE,yBAAK/K,UAAU,aAGb,kBAAC,EAAD,CACE8H,uBAAwB/F,KAAKvC,MAAMsI,uBACnCX,oBAAqBpF,KAAKvC,MAAM2H,oBAChCD,cAAenF,KAAKvC,MAAM0H,cAC1BE,wBAAyBrF,KAAKvC,MAAM4H,0BAEtC,kBAAC,IAAD,CACE9B,UAAW,IAAID,KAAKtD,KAAKoH,MAAM+B,WAAa,cAC5CI,QAAS,IAAIjG,KAAKtD,KAAKoH,MAAMgC,UAAY,cACzCI,OAAQxJ,KAAKoH,MAAM4B,MACnBS,cAAe,SAAAC,GACb,OAAOA,GAAC,UAAOA,EAAEvF,KAAT,cAAmBuF,EAAER,MAArB,WAEVS,cAAe,SAAAxI,GACb,OAAIA,GAAmB,OAAVA,GAAkC,IAAhBA,EAAM+H,MAC5B,cAEO,OAAV/H,EAAuB,cACpB,gBAGX9B,QAAS,SAAA8B,GACHA,GAASA,EAAMgD,MACjB,EAAK1G,MAAMmM,wBAAwBzI,EAAMgD,c,GA/E/B9D,IAAMC,YCafuJ,G,OAnBK,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,oBAAqBC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACzD,OACE,oCACE,kBAACnH,EAAA,EAAD,CACE5E,UAAW,gBAAmB6L,EAAmC,GAAb,YACpDzK,QAAS0K,GAFX,SAMA,kBAAClH,EAAA,EAAD,CACE5E,UAAW,gBAAkB6L,EAAsB,WAAa,IAChEzK,QAAS2K,GAFX,iB,qBCOSC,I,OAfG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACnB,OACE,oCACE,yBAAKjM,UAAU,iBAAf,0BACA,kBAAC,KAAD,CACEkM,MAAM,kBACNC,UAAU,EACVC,SAAUH,EACVI,SAAS,2BACTC,OAAO,0BCXR,SAASC,GAAUhI,GACxB,GAAIxC,KAAKoH,MAAMtC,QAAQ2F,OAAOvF,QAAU,EAAG,CACzC,IAAIJ,EAAU9E,KAAKoH,MAAMtC,QACrBuB,EAAQrG,KAAKoH,MAAMf,MACvBA,EAAM/D,KAAK,CACTmE,KAAM3B,IAER9E,KAAKsJ,SAAS,CACZjD,MAAOA,EACPvB,QAAS,KAEXmB,EAAGI,MAAMS,IAAI,CAAEC,SAAU/G,KAAKvC,MAAMsJ,SAAUN,KAAM3B,KAIjD,SAAS3B,GAAWC,GAIzB,IAJoC,IAGlCrB,EAHiC,OAC/BsE,EAAQrG,KAAKoH,MAAMf,MACrBvB,EAAU1B,EAEHsH,EAAI,EAAGA,EAAIrE,EAAMnB,OAAQwF,IAChC,GAAIrE,EAAMqE,GAAGjE,OAAS3B,EAAS,CAC7B/C,EAAM2I,EACN,MAGJrE,EAAQA,EAAMsE,MAAM,EAAG5I,GAAK6I,OAAOvE,EAAMsE,MAAM5I,EAAM,EAAGsE,EAAMnB,SAE9DlF,KAAKsJ,SAAS,CACZjD,MAAOA,EACPwE,sBAAsB,EACtBjF,sBAAsB,EACtBkF,gBAAgB,IAElB7E,EAAGI,MACAM,MAAM,QACNC,iBAAiB9B,GACjBiG,SAEHC,YAAW,WACT,EAAK1B,SAAS,CACZuB,sBAAsB,MAEvB,KAGE,SAASI,GAAkBzI,GACtBA,EAAGyC,OAAO9D,MACZ+D,OAAS,IACflF,KAAKsJ,SAAS,CACZxE,QAAStC,EAAGyC,OAAO9D,QCnDlB,SAAS+J,GAAU1I,GACxB,GAAuC,OAAnCxC,KAAKoH,MAAM+D,oBAA8B,CAC3C,IAGET,EAHEU,EAAQ5I,EAAGE,cAAcC,aAAa,SACxC0D,EAAQrG,KAAKoH,MAAMf,MACnBgF,EAAc,KAEhB,IAAKX,EAAI,EAAGA,EAAIrE,EAAMnB,OAAQwF,IAC5B,GAAIrE,EAAMqE,GAAGjE,OAAS2E,EAAO,CAC3BC,EAAchF,EAAMqE,GACpB,MAGJ1K,KAAKsJ,SAAS,CACZjD,MAAOA,EACP8E,oBAAqBE,KAKpB,SAASC,GAAS7E,GACvB,IACEiE,EADErE,EAAQrG,KAAKoH,MAAMf,MAErBtE,EAAM,EACNwJ,EAAcvL,KAAKoH,MAAM+D,oBAE3B,IAAKpJ,EAAM,EAAGA,EAAMsE,EAAMnB,QACpBmB,EAAMtE,GAAK0E,OAAS8E,EAAY9E,KADJ1E,KAMlC,IADAsE,EAAQA,EAAMsE,MAAM,EAAG5I,GAAK6I,OAAOvE,EAAMsE,MAAM5I,EAAM,EAAGsE,EAAMnB,SACzDwF,EAAI,EAAGA,EAAIrE,EAAMnB,QAChBmB,EAAMqE,GAAGjE,OAASA,EADMiE,KAK9B,IAAIc,EAAYnF,EAAMsE,MAAM,EAAGD,EAAI,GACI,OAAnC1K,KAAKoH,MAAM+D,sBACbK,EAAUlJ,KAAK,CACbmE,KAAM8E,EAAY9E,KAClBQ,IAAKsE,EAAYtE,IACjBwE,IAAKF,EAAYE,IACjBC,QAASH,EAAYG,QACrBC,cAAeJ,EAAYI,cAC3BtJ,MAAOkJ,EAAYlJ,MACnBL,iBAAkBuJ,EAAYvJ,mBAEhCqE,EAAQmF,EAAUZ,OAAOvE,EAAMsE,MAAMD,EAAI,EAAGrE,EAAMnB,SAClDlF,KAAKsJ,SAAS,CACZjD,MAAOA,EACP8E,oBAAqB,QAKpB,SAASS,KACV5L,KAAKoH,MAAM+D,qBACbnL,KAAKsJ,SAAS,CACZ6B,oBAAqB,OCxDpB,SAASnI,KAAa,IAAD,OACtB6I,EAAW7L,KAAKoH,MAAMtE,aACxBgC,EAAU9E,KAAKoH,MAAMhE,SACrB0I,EAAc9L,KAAKoH,MAAMjF,OAC3B2J,EAAYnD,IAAIkD,GAChB5F,EAAGI,MACAM,MAAM,QACNC,iBAAiB9B,GACjB+B,OAAM,SAAA7H,GACL,IAAI+M,EAAa/M,EACjBiH,EAAGI,MAAMS,IAAI,CACXC,SAAU,EAAKtJ,MAAMsJ,SACrBN,KAAM3B,EACNkC,QAAS+E,EAAW/E,QACpByE,IAAKM,EAAWN,IAChBC,QAASK,EAAWL,QACpBC,cAAeI,EAAWJ,cAC1BlM,GAAIsM,EAAWtM,GACf4C,MAAOwJ,EACP7J,iBAAkB,EAAKoF,MAAMpF,sBAInC,IADA,IAAIqE,EAAQrG,KAAKoH,MAAMf,MAAMuE,SACpBF,EAAI,EAAGA,EAAIrE,EAAMnB,OAAQwF,IAChC,GAAIrE,EAAMqE,GAAGjE,OAAS3B,EAAS,CAC7BuB,EAAMqE,GAAGrI,MAAQwJ,EACjBxF,EAAMqE,GAAG1I,iBAAmBhC,KAAKoH,MAAMpF,iBACvC,MAGJhC,KAAKsJ,SAAS,CACZ/D,wBAAwB,EACxBO,qBAAqB,EACrBhD,aAAc,GACduD,MAAOA,EACPlE,OAAQ2J,IAIL,SAAS7I,KACdjD,KAAKsJ,SAAS,CACZ/D,wBAAwB,EACxBO,qBAAqB,EACrBhD,aAAc,KAIX,SAASC,GAAmB2G,GACjC1J,KAAKsJ,SAAS,CACZxG,aAAc4G,EAAEhH,cAAcvB,QAI3B,SAASc,GAAuByH,GACrC1J,KAAKsJ,SAAS,CACZtH,iBAAkB0H,IAIf,SAASjH,GAA0BiH,GACxC1J,KAAKsJ,SAAS,CACZxG,aAAc4G,I,2CCrBZsC,G,YACJ,WAAYvO,GAAQ,IAAD,8BACjB,4CAAMA,KA+FRwO,kBAAoB,WACkC,OAAhD1M,OAAO2M,aAAaC,QAAQ,iBAC9B,EAAKjC,iBAAiB,CACpB9J,KAAMb,OAAO2M,aAAaC,QAAQ,mBAnGrB,EAgHnBjC,iBAAmB,SAAAkC,GACjB,IAAI/F,EAAQ,GACVlE,EAAS,IAAIkK,IACf9M,OAAO2M,aAAaI,QAAQ,eAAgBF,EAAIhM,MAChD6F,EAAGI,MACAM,MAAM,YACNC,iBAAiBwF,EAAIhM,MACrBmM,MAAK,SAAAC,GACAA,EAAInK,OACNF,EAAOwG,IAAI6D,EAAInK,OAEjBgE,EAAM/D,KAAK,CACTmE,KAAM+F,EAAI/F,KACVQ,IAAKuF,EAAIxF,QACTyE,IAAKe,EAAIf,IACTC,QAASc,EAAId,QACbC,cAAea,EAAIb,cACnBtJ,MAAOmK,EAAInK,MACXL,iBAAkBwK,EAAIxK,sBAGzBmF,MAAK,WACJ,EAAK1J,MAAMgP,sBAAsB,CAC/BC,UAAU,EACV3F,SAAUqF,EAAIhM,OAEK,IAAjBiG,EAAMnB,QACRmB,EAAM/D,KAAK,CACTmE,KAAM,wBACNQ,IAAK,IAAI3D,KACTmI,IAAK,iBACLC,QAAS,uBACTC,cAAe,WACftJ,MAAO,QACPL,iBAAkB,IAGtB,EAAKsH,SAAS,CACZjD,MAAOA,EACPlE,OAAQA,QAvJG,EA4JnBwK,eAAiB,WACfpN,OAAO2M,aAAaU,WAAW,gBAC/BrN,OAAOsN,GAAGC,SACV,EAAKrP,MAAMgP,sBAAsB,CAC/BC,UAAU,EACV3F,SAAU,UAjKK,EAqKnByD,UAAYA,GAAUuC,KAAV,gBArKO,EAuKnBC,iBAAmB,WACjB,EAAK1D,SAAS,CACZ/D,wBAAwB,EACxBC,2BAA2B,EAC3BsF,gBAAgB,EAChBlF,sBAAsB,KA5KP,EAgLnBqF,kBAAoBA,GAAkB8B,KAAlB,gBAhLD,EAkLnB5J,WAAaA,GAAW4J,KAAX,gBAlLM,EAqLnBE,wBAA0B,SAAAzK,GACxB,EAAK8G,SAAS,CACZ/D,wBAAwB,EACxBuF,iBAAgBvL,OAAOC,OAAOpB,MAAQ,KACtCgF,SAAUZ,EAAGE,cAAcvB,MAC3BrC,aAAc,CAAC0D,EAAG0K,QAAS1K,EAAG2K,YA1Lf,EA8LnBC,iBAAmB,SAAAC,GACjB,EAAK/D,SAAS,CACZ3D,YAAa0H,KAhME,EAoMnB3H,eAAiB,WACf,IAAIW,EAAQ,EAAKe,MAAMf,MAAMuE,SACzB9F,EAAU,EAAKsC,MAAMhE,SAIzB,GAHA,EAAKkG,SAAS,CACZ7D,oBAAoB,IAElB,EAAK2B,MAAMzB,YAAa,CAC1B,IAAK,IAAI+E,EAAI,EAAGA,EAAIrE,EAAMnB,OAAQwF,IAChC,GAAIrE,EAAMqE,GAAGjE,OAAS3B,EAAS,CAC7BuB,EAAMqE,GAAGzD,IAAM,EAAKG,MAAMzB,YAC1B,MAOJ,IAAIoG,EAJJ,EAAKzC,SAAS,CACZjD,MAAOA,IAITJ,EAAGI,MACAM,MAAM,QACNC,iBAAiB9B,GACjB+B,OAAM,SAAA7H,GAEL+M,EAAa/M,EAEbiH,EAAGI,MAAMS,IAAI,CACXC,SAAU,EAAKtJ,MAAMsJ,SACrBN,KAAM3B,EACNoC,SAAU6E,EAAW7E,SACrBF,QAAS,EAAKI,MAAMzB,YACpBlG,GAAIsM,EAAWtM,GACf4C,MAAO0J,EAAW1J,MAClBL,iBAAkB+J,EAAW/J,sBAKrC,EAAKsH,SAAS,CACZlG,SAAU,MA1OK,EAgPnB4C,YAAc,WACZ,EAAKsD,SAAS,CACZzD,oBAAoB,EACpBzE,WAAY,GACZK,eAAgB,MApPD,EAwPnB6L,WAAa,WAGX,IAHkB,IAAD,EAC8B,EAAKlG,MAA9ChG,EADW,EACXA,WAAYK,EADD,EACCA,eAAgB2B,EADjB,EACiBA,SAChCiD,EAAQ,EAAKe,MAAMf,MAAMuE,SAClBF,EAAI,EAAGA,EAAIrE,EAAMnB,OAAQwF,IAChC,GAAIrE,EAAMqE,GAAGjE,OAASrD,EAAU,CAC9BiD,EAAMqE,GAAGe,IAAMrK,EACfiF,EAAMqE,GAAGgB,QAAUjK,EACnB,MAGJwE,EAAGI,MACAM,MAAM,QACNC,iBAAiBxD,GACjByD,OAAM,SAAA7H,GACL,IAAI+M,EAAa/M,EACjBiH,EAAGI,MAAMS,IAAI,CACXC,SAAU,EAAKtJ,MAAMsJ,SACrBN,KAAMrD,EACN4D,QAAS+E,EAAW/E,QACpByE,IAAKrK,EACLsK,QAASjK,EACThC,GAAIsM,EAAWtM,QAGrB,EAAK6J,SAAS,CACZzD,oBAAoB,EACpBQ,MAAOA,EACPjF,WAAY,GACZK,eAAgB,MApRD,EAwRnBD,gBAAkB,SAAAgB,GAChB,EAAK8G,SAAS,CACZ7H,eAAgBe,EAAGyC,OAAO9D,SA1RX,EA8RnBD,YAAc,SAAAsB,GACZ,EAAK8G,SAAS,CACZlI,WAAYoB,EAAGyC,OAAO9D,SAhSP,EAqSnBoM,oBAAsB,SAAAC,GACpB,IAAI7B,EAAgB6B,EAAM9K,cAAcvB,MACtC2D,EAAU0I,EAAM9K,cAAcC,aAAa,QAE7C6K,EAAM9K,cAAc+K,cAAcA,cAAcC,UAAUC,OAAO,QAGjE,IADA,IAAItH,EAAQ,EAAKe,MAAMf,MAAMuE,SACpBF,EAAI,EAAGA,EAAIrE,EAAMnB,OAAQwF,IAChC,GAAIrE,EAAMqE,GAAGjE,OAAS3B,EAAS,CAC7BuB,EAAMqE,GAAGiB,cAAgBA,EACzB,MAGJ1F,EAAGI,MACAM,MAAM,QACNC,iBAAiB9B,GACjB+B,OAAM,SAAA7H,GACL,GAAIA,EAAM,CACR,IAAI+M,EAAa/M,EACjBiH,EAAGI,MAAMS,IAAI,CACXC,SAAU,EAAKtJ,MAAMsJ,SACrBN,KAAM3B,EACNkC,QAAS+E,EAAW/E,QACpByE,IAAKM,EAAWN,IAChBC,QAASK,EAAWL,QACpBC,cAAeA,EACflM,GAAIsM,EAAWtM,SAIvB,EAAK6J,SAAS,CACZzD,oBAAoB,EACpBQ,MAAOA,EACPjF,WAAY,GACZK,eAAgB,KAGI,cAAlBkK,IACF,EAAKrC,SAAS,CACZsE,wBAAwB,IAE1B5C,YAAW,WACT,EAAK1B,SAAS,CACZsE,wBAAwB,MAEzB,OAlVY,EAsVnBC,WAAa,SAAArL,GACX,IAAIsL,EAAsC,SAA3BtL,EAAGE,cAAcvB,MAChC,EAAKmI,SAAS,CACZyE,kBAAmBD,KAzVJ,EA6VnB9D,cAAgB,WACd,EAAKV,SAAS,CACZQ,qBAAqB,KA/VN,EAmWnBC,cAAgB,WACd,EAAKT,SAAS,CACZQ,qBAAqB,KArWN,EAyWnBkE,cAAgB,SAAAxL,GACd,IAAIyL,EAAczL,EAAGE,cAAcC,aAAa,SAChDsD,EAAGI,MACAM,MAAM,QACNC,iBAAiBqH,GACjBpH,OAAM,SAAA7H,GACL,EAAKsK,SAAS,CACZ4E,WAAW,EACXxH,iBAAkB1H,EACdA,EAAKyH,KACL,mCACJqB,oBAAqB9I,EAAOA,EAAKgI,QAAU,yBAC3CmH,gBAAiBnP,EACbA,EAAKkI,SACL,qDAvXO,EA4XnBkH,iBAAmB,WACjB,EAAK9E,SAAS,CACZ4E,WAAW,KA9XI,EAmYnBG,eAAiB,SAAA3E,GACf,EAAKJ,SAAS,CACZ6E,gBAAiBzE,EACjB4E,mBAAmB,KAtYJ,EA0YnBtL,UAAYA,GAAU+J,KAAV,gBA1YO,EA4YnB9J,gBAAkBA,GAAgB8J,KAAhB,gBA5YC,EA8YnBhK,mBAAqBA,GAAmBgK,KAAnB,gBA9YF,EAgZnB9K,uBAAyBA,GAAuB8K,KAAvB,gBAhZN,EAkZnBtK,0BAA4BA,GAA0BsK,KAA1B,gBAlZT,EAoZnBwB,iBAAmB,WACjB,IAAIlI,EAAQ,EAAKe,MAAMf,MACvBA,EAAMmI,MAAK,SAASC,EAAGC,GACrB,IAAIC,EAASF,EAAEpM,OAASoM,EAAEpM,MAAMuM,eAAkB,IAChDC,EAASH,EAAErM,OAASqM,EAAErM,MAAMuM,eAAkB,IAChD,OAAOD,EAAQE,GAAS,EAAIF,EAAQE,EAAQ,EAAI,KAGlD,EAAKvF,SAAS,CACZjD,MAAOA,EACPb,2BAA2B,EAC3BsF,gBAAgB,KA/ZD,EAmanBgE,mBAAqB,WACnB,IAAIzI,EAAQ,EAAKe,MAAMf,MACvBA,EAAMmI,MAAK,SAASC,EAAGC,GASrB,OARKD,EAAExH,MACLwH,EAAExH,IAAMY,IAAO,IAAIvE,MAAQoF,SAAS,GAAI,SACxC+F,EAAEM,WAAY,GAEXL,EAAEzH,MACLyH,EAAEzH,IAAMY,IAAO,IAAIvE,MAAQoF,SAAS,GAAI,SACxCgG,EAAEK,WAAY,IAER,EAAIlH,IAAO4G,EAAExH,KAAK4B,KAAKhB,IAAO6G,EAAEzH,SAE1CZ,EAAMjE,SAAQ,SAAAoE,GACRA,EAAEuI,YAAWvI,EAAES,SAAM+H,MAE3B,EAAK1F,SAAS,CACZjD,MAAOA,EACPb,2BAA2B,EAC3BsF,gBAAgB,KAtbD,EA0bnBmE,uBAAyB,SAAAzM,GACvB,EAAK8G,SAAS,CACZ9D,2BAA2B,EAC3BsF,eAAgBvL,OAAOC,OAAOpB,MAAQ,IACtCU,aAAc,CAAC0D,EAAG0K,QAAS1K,EAAG2K,YA9bf,EAkcnB+B,sBAAwB,SAAA1M,GACtB,EAAK8G,SAAS,CACZ1D,sBAAsB,EACtBkF,eAAgBvL,OAAOC,OAAOpB,MAAQ,IACtCgF,SAAUZ,EAAGE,cAAcvB,MAC3BrC,aAAc,CAAC0D,EAAG0K,QAAS1K,EAAG2K,YAvcf,EA2cnBjK,aAAe,WACb,EAAKoG,SAAS,CACZ1D,sBAAsB,EACtBkF,gBAAgB,KA9cD,EAkdnBlB,wBAA0B,SAAAzF,GACxB,EAAKmF,SAAS,CACZvD,wBAAwB,EACxBX,oBAAqBjB,KArdN,EAydnBkB,wBAA0B,WACxB,EAAKiE,SAAS,CACZvD,wBAAwB,KA3dT,EAgenBZ,cAAgB,SAACsB,EAAMtC,GACrB,IAAIkC,EAAQ,EAAKe,MAAMf,MAEvBA,EAAM/D,KAAK,CACTmE,KAAMA,EACNQ,IAAKY,IAAO1D,GAAMgL,GAClB1D,IAAK,KACLC,QAAS,KACTC,cAAe,KACftJ,MAAO,KACPL,iBAAkB,OAGpB,EAAKsH,SAAS,CACZjD,MAAOA,IAGTJ,EAAGI,MAAMS,IAAI,CACXC,SAAU,EAAKtJ,MAAMsJ,SACrBN,KAAMA,EACNO,QAASa,IAAO1D,GAAMgL,MApfP,EAwfnBjE,UAAYA,GAAU6B,KAAV,gBAxfO,EA0fnBzB,SAAWA,GAASyB,KAAT,gBA1fQ,EA4fnBqC,OAAS,WACH,IAAAC,EAAS,EAAT,EAgBE,EAAKjI,MAdPzB,EAFA,EAEAA,YACAvE,EAHA,EAGAA,WACAK,EAJA,EAIAA,eACAqD,EALA,EAKAA,QACAS,EANA,EAMAA,uBACAC,EAPA,EAOAA,0BACAK,EARA,EAQAA,mBACAJ,EATA,EASAA,mBAGAM,GAZA,EAUAD,oBAVA,EAWAF,qBAXA,EAYAG,wBACAlH,EAbA,EAaAA,gBACAC,EAdA,EAcAA,aACAiP,EAfA,EAeAA,iBAfA,iBAkBAvD,EAlBA,EAkBAA,UACA+C,EAnBA,EAmBAA,oBACArM,EApBA,EAoBAA,YACAM,EArBA,EAqBAA,gBACAwL,EAtBA,EAsBAA,iBACAtH,EAvBA,EAuBAA,eACA0H,EAxBA,EAwBAA,iBACAjK,EAzBA,EAyBAA,WACA8H,EA1BA,EA0BAA,kBACA5F,EA3BA,EA2BAA,wBACAW,EA5BA,EA4BAA,YAEAsH,GA9BA,EA6BApD,iBA7BA,EA8BAoD,YACAL,EA/BA,EA+BAA,wBACArD,EAhCA,EAgCAA,wBACAiE,EAjCA,EAiCAA,WACA7K,EAlCA,EAkCAA,UACAC,EAnCA,EAmCAA,gBACAgM,EApCA,EAoCAA,uBArCS,EAwCgB,EAAKxR,MAA5BiP,EAxCO,EAwCPA,SAAU3F,EAxCH,EAwCGA,SAEVuI,GAAe,CACnB,YACA,UACA,SACA,UACA,OACA,QACA,QAGF,OACE,oCACG,EAAKlI,MAAM0D,eACV,yBAAK7M,UAAU,UAAUoB,QAAS2N,IAChC,KACJ,yBAAK/O,UAAU,OACZyO,EACC,yBAAKzO,UAAU,uBACb,kBAAC,EAAD,CAAoBD,KAAM,EAAKoJ,MAAMwG,yBACrC,kBAAC,EAAD,CAAkB5P,KAAM,EAAKoJ,MAAMyD,uBACnC,kBAACnJ,EAAA,EAAD,CACEC,QAAQ,YACR1D,UAAU,gBACVoB,QAAS,EAAKsN,gBAEb,WAEH,yBAAK1O,UAAU,cACb,yBAAKA,UAAU,cACZ,WACD,0BAAMA,UAAU,YAAY8I,IAE9B,yBAAK9I,UAAU,oBACb,+BACE,kBAAC,IAAD,CACEsR,gBAAgB,EAChBtO,SAAU4M,EACV1M,MAAO4M,MAIb,4BACE1O,QAAS4P,EACThR,UAAU,cAGd,kBAAC,EAAD,CACE6L,oBAAqB,EAAK1C,MAAM0C,oBAChCE,cAAe,EAAKA,cACpBD,cAAe,EAAKA,gBAEtB,kBAAC,EAAD,CACE/L,KAAM,EAAKoJ,MAAM8G,UACjB5G,OAAQ,EAAK8G,iBACb/H,MAAO,EAAKe,MAAMf,MAClBI,KAAM,EAAKW,MAAMoI,YACjBzI,SAAU,EAAKtJ,MAAMsJ,SACrBiB,iBAAkB,EAAKqG,eACvB3H,iBAAkB,EAAKU,MAAMV,iBAC7BoB,oBAAqB,EAAKV,MAAMU,oBAChCwG,kBAAmB,EAAKlH,MAAMkH,kBAC9BpH,SAAU,EAAKE,MAAM+G,gBACrBtM,QAAS,EAAKuM,mBAEf,EAAKhH,MAAM0C,oBACV,kBAAC,EAAD,CACEzD,MAAO,EAAKe,MAAMf,MAClBjB,oBAAqB,EAAKgC,MAAMhC,oBAChCW,uBAAwB,EAAKqB,MAAMrB,uBACnC6D,wBAAyBA,EACzBvE,wBAAyBA,EACzBF,cAAe,EAAKA,gBAEpB,KACH,EAAKiC,MAAM0C,oBAAsB,KAChC,oCACE,kBAACnF,EAAA,EAAD,CAAY1G,UAAU,QACpB,kBAAC+C,EAAA,EAAD,CACEC,SAAUgK,EACV9J,MAAO2D,EACPzD,YAAY,iBACZC,aAAW,iBACXC,mBAAiB,iBAEnB,kBAACoD,EAAA,EAAWC,OAAZ,KACE,kBAAClD,EAAA,EAAD,CAAQrC,QAASmL,EAAW7I,QAAQ,qBAApC,SAKJ,kBAAC,EAAD,CACEuB,aAAc,EAAKA,aACnBD,gBAAiBA,EACjBmB,SAAUgJ,EACVlM,YAAaA,EACbW,QAASmE,EACTL,YAAaA,EACb7C,aAAc,EAAKsE,MAAMtE,aACzBC,mBAAoB,EAAKA,mBACzBN,0BAA2B,EAAKA,0BAChCrB,WAAYA,EACZK,eAAgBA,EAChBD,gBAAiBA,EACjB2B,WAAYA,EACZoC,uBAAwBA,EACxBK,qBAAsB,EAAKwB,MAAMxB,qBACjCE,oBAAqB,EAAKsB,MAAMtB,oBAChCN,0BAA2BA,EAC3BC,mBAAoBA,EACpBI,mBAAoBA,EACpBE,uBAAwBA,EACxBZ,cAAe,EAAKA,cACpBO,eAAgBA,EAChBvD,OAAQ,EAAKiF,MAAMjF,OACnB6D,YAAaA,EACbnH,gBACE0G,EACI1G,EACA,EAAKuI,MAAMqI,eAEjB7N,OAAQ0L,EACRtK,UAAWA,EACXhB,iBAAkB,EAAKoF,MAAMpF,iBAC7BC,uBAAwB,EAAKA,uBAC7BnD,aAAcA,EACdsE,SAAU,EAAKgE,MAAMhE,WAGvB,kBAACnE,EAAA,EAAD,CAAWhB,UAAU,wBAClB,EAAKmJ,OACJ,EAAKA,MAAMf,MAAMtH,KAAI,SAAA0H,GACnB,OACE,kBAACxH,EAAA,EAAUC,KAAX,CACEC,IAAKkQ,IACLK,OAAQ,WACN,EAAKpE,SAAS7E,EAAKA,OAErBkJ,WAAY,SAAAC,GACVA,EAAEC,kBAEJ5R,UACE,EAAKmJ,MAAM+D,qBACX,EAAK/D,MAAM+D,oBAAoB1E,OAASA,EAAKA,KACzC,OACA,IAGL,EAAKW,MAAM2G,iBACV,yBACE9P,UAAW,gBAAkBwI,EAAKkF,gBAElC,KACJ,yBACE1N,UAAU,WACVkD,MAAOsF,EAAKA,KACZqJ,IAAKC,IACLC,WAAS,EACTC,OAAQ,EAAK/E,UACbU,UAAWA,GAAUmB,KAAV,kBAEb,yBACE9O,UAAU,aACVkD,MAAOsF,EAAKA,KACZpH,QAAS,EAAK2O,eAEd,0BAAM/P,UAAU,gBAAhB,WACCwI,EAAKA,MAEPA,EAAKQ,IACJ,oCACE,yBACEhJ,UAAU,gBACV6R,IAAKI,MAEP,yBAAKjS,UAAU,WACZ4J,IAAOpB,EAAKQ,KAAKc,OAAO,UAG3B,KAEJ,4BACE1I,QAAS,EAAK6P,sBACd/N,MAAOsF,EAAKA,KACZxI,UAAU,mBAEZ,yBAAKA,UAAU,aACb,uBAAGkS,KAAM,WAAa1J,EAAKgF,IAAKxG,OAAO,UACpCwB,EAAKiF,UAIV,4BACErM,QAAS4N,EACT9L,MAAOsF,EAAKA,KACZxI,UAAU,mBAEVwI,EAAKpE,MACL,kBAACQ,EAAA,EAAD,CACE5E,UAAU,eACV0D,QAAS2N,GAAa7I,EAAKzE,mBAE1ByE,EAAKpE,OALK,KAQf,kBAAC+N,GAAA,EAAD,CAAWC,iBAAiB,KAC1B,kBAACC,GAAA,EAAD,CAAMrS,UAAU,kBACd,kBAACmS,GAAA,EAAUG,OAAX,CACEtS,UAAU,mBACVuS,SAAS,KAET,kBAACC,GAAA,EAAD,CACEC,SAAO,EACPC,IACGlK,EAAKkF,cAEqB,YAAvBlF,EAAKkF,cACL,GACuB,eAAvBlF,EAAKkF,cACL,GACA,IALA,KARV,UAgBU,IACPlF,EAAKkF,cACFlF,EAAKkF,cACL,WAEN,kBAACyE,GAAA,EAAUQ,SAAX,CAAoBJ,SAAS,KAC3B,kBAACF,GAAA,EAAK3I,KAAN,CAAW1J,UAAU,uBAClB,IACD,4BACEA,UAAU,gBACVkD,MAAOsF,EAAKkF,cACZlF,KAAMA,EAAKA,KACXxF,SAAUsM,GAEV,4BAAQpM,MAAM,UAAUhC,IAAI,KAA5B,WAGA,4BAAQgC,MAAM,aAAahC,IAAI,KAA/B,eAGA,4BAAQgC,MAAM,YAAYhC,IAAI,KAA9B,yBAgB1B,kBAAC,GAAD,CAAW+K,iBAAkB,EAAKA,sBAryB1C,EAAK9C,MAAQ,CACXzB,YAAa,GACbU,MAAO,GACP0H,kBAAkB,EAClBjP,aAAc,GACdgG,QAAS,GACT1B,SAAU,GACVmC,wBAAwB,EACxBC,2BAA2B,EAC3BC,oBAAoB,EACpBI,oBAAoB,EACpBC,qBAAqB,EACrBF,sBAAsB,EACtBkF,gBAAgB,EAChB/E,wBAAwB,EACxBX,oBAAqB,KACrBhE,WAAY,GACZK,eAAgB,GAChB0J,oBAAqB,KACrB+C,WAAW,EACXN,wBAAwB,EACxBlH,iBAAkB,GAClByH,gBAAiB,GACjBrL,aAAc,GACdwL,mBAAmB,EACnBtM,iBAAkB,EAClB8H,qBAAqB,EACrB3H,OAAQ,IAAIkK,IACZxN,gBAAiB,CACf,CACEO,KAAM,QACNC,QAAS,WACP,EAAKiK,SAAS,CACZ/D,wBAAwB,EACxBuF,gBAAgB,MAItB,CACE1L,KAAM,eACNC,QAAS,WACP,EAAKiK,SAAS,CACZ/D,wBAAwB,EACxBE,oBAAoB,EACpBqF,gBAAgB,MAItB,CACE1L,KAAM,WACNC,QAAS,WACP,EAAKiK,SAAS,CACZ/D,wBAAwB,EACxBM,oBAAoB,EACpBiF,gBAAgB,MAItB,CACE1L,KAAM,YACNC,QAAS,WACP,IAAIwM,EAAW,GACf,EAAKzE,MAAMf,MAAMjE,SAAQ,SAAAqE,GACnBA,EAAKA,OAAS,EAAKW,MAAMhE,WAC3ByI,EAAWpF,EAAKpE,UAGpB,EAAKiH,SAAS,CACZ/D,wBAAwB,EACxBO,qBAAqB,EACrBhD,aAAc+I,EACdf,gBAAgB,OAKxB2E,eAAgB,CACd,CACErQ,KAAM,gBACNC,QAAS,WACP,EAAKkP,qBAGT,CACEnP,KAAM,mBACNC,QAAS,WACP,EAAKyP,yBAzFI,E,2BADHzO,IAAMC,WA6zBTuQ,iBAbS,SAAAzJ,GAAK,MAAK,CAChCsF,SAAUtF,EAAMsF,SAChB3F,SAAUK,EAAML,aAGS,SAAA+J,GACzB,MAAO,CACLrE,sBAAuB,SAAAsE,GACrBD,EAAS,CAAEE,KAAM,gBAAiBC,QAASF,QAKlCF,CAA6C7E,I,SC31BxCkF,QACW,cAA7B3R,OAAO4R,SAASC,UAEe,UAA7B7R,OAAO4R,SAASC,UAEhB7R,OAAO4R,SAASC,SAASC,MACvB,2DClBN,IAAMC,GAAe,CACjB5E,UAAU,EACV3F,SAAU,IAEZwK,GACkB,gBAgBLC,GAbM,WAAmC,IAAlCpK,EAAiC,uDAAzBkK,GAAcG,EAAW,uCAC7CT,EAAkBS,EAAlBT,KAAMC,EAAYQ,EAAZR,QACd,MAAa,cAATD,EACK5J,EACE4J,IAASO,GACXG,OAAOC,OAAO,GAAIL,GAAc,CACrC5E,SAAUuE,EAAQvE,SAClB3F,SAAUkK,EAAQlK,WAGfK,GCTHwK,GAAQC,aACZL,GACAjS,OAAOuS,8BAAgCvS,OAAOuS,gCAGhDC,IAAS3C,OACP,kBAAC,KAAD,CAAUwC,MAAOA,IACf,kBAAC,GAAD,OAEFjO,SAASqO,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhL,MAAK,SAAAiL,GACjCA,EAAaC,kB","file":"static/js/main.24dda48e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/event.90837826.svg\";","module.exports = __webpack_public_path__ + \"static/media/drag.bc42c9bb.svg\";","import React from \"react\";\nimport animationData from \"./completed.json\";\nimport Lottie from \"react-lottie\";\nimport \"./CompletedAnimation.scss\";\nconst CompletedAnimation = props => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n\n  if (props.show) {\n    return (\n      <div className=\"completed-animation\">\n        <Lottie options={defaultOptions} height={200} width={300} />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default CompletedAnimation;\n","import React from \"react\";\nimport animationData from \"./deleted.json\";\nimport Lottie from \"react-lottie\";\nconst DeletedAnimation = props => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n\n  const style = {\n    position: \"absolute\",\n    zIndex: \"4\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  };\n\n  if (props.show) {\n    return (\n      <div className=\"deleted-animation\" style={style}>\n        <Lottie options={defaultOptions} height={200} width={300} />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default DeletedAnimation;\n","import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = ({ menuOptionsList, tempPosition }) => {\n  const options = menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        tempPosition[0] + 150 < window.screen.width\n          ? tempPosition[0] + \"px\"\n          : tempPosition[0] - 100 + \"px\",\n      top:\n        tempPosition[0] + 150 < window.screen.width\n          ? tempPosition[1] + \"px\"\n          : tempPosition[1] - 50 + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n        .matches;\n\n      if (isMobile) {\n        //Conditional script here\n        console.log(\"isMobile true\");\n      } else {\n        console.log(\"is mobile false\");\n      }\n\n      let { props } = this,\n        divStyle =\n          props.tempPosition[0] + 300 < window.screen.width\n            ? {\n                left: props.tempPosition[0] + \"px\",\n                top: props.tempPosition[1] + \"px\"\n              }\n            : {\n                left: \"0\",\n                right: \"0\",\n                top: \"40%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n\n  return (\n    <div className=\"linkContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"85%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n  return (\n    <div\n      className=\"deleteContextMenu\"\n      style={isMobile ? style : props.divStyle}\n    >\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import React, { useState, useEffect } from \"react\";\nimport \"./DeadlineContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DeadlineContextMenu = props => {\n  const [startDate, setStartDate] = useState(new Date());\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"10px\";\n    style.borderTopRightRadius = \"10px\";\n    style.width = \"100%\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.height = \"100px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n\n  useEffect(() => {\n    if (isMobile) {\n      const datePickers = document.getElementsByClassName(\n        \"react-datepicker__input-container\"\n      );\n      Array.from(datePickers).forEach(el =>\n        el.childNodes[0].setAttribute(\"readOnly\", true)\n      );\n    }\n  });\n  return (\n    <>\n      <div\n        className=\"taskContextMenu\"\n        style={isMobile ? style : props.divStyle}\n      >\n        <DatePicker\n          selected={startDate}\n          onChange={date => {\n            setStartDate(date);\n            props.changeFn(date.toString());\n          }}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n        <span className=\"deadlont-text\">Select a deadline for the task</span>\n\n        {/*  <InputGroup className=\"mb-3\">\n          <FormControl\n            onChange={props.changeFn}\n            value={props.curDeadline}\n            placeholder=\"Hours\"\n            aria-label=\"Add deadline to task\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </InputGroup> */}\n        {\n          <InputGroup.Append>\n            <Button\n              className=\"deadline-close-btn\"\n              onClick={props.closeFn}\n              variant=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"deadline-ok-btn\"\n              onClick={() => {\n                props.changeFn(startDate);\n                props.closeFn();\n                console.log(startDate);\n              }}\n              variant=\"primary\"\n            >\n              Okay\n            </Button>\n          </InputGroup.Append>\n        }\n      </div>\n    </>\n  );\n};\n\nDeadlineContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(DeadlineContextMenu);\n","import React from \"react\";\nimport { Button, InputGroup, FormControl, Badge } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport \"./CalendarContextMenu.scss\";\n\nconst CalendarContextMenu = props => {\n  const [curTask, setCurTask] = useState(\"\");\n\n  let callAddTaskFn = () => {\n    if (curTask.length > 0) {\n      props.addTaskToDate(curTask, props.currentCalendarDate);\n      props.hideCalendarContextMenu();\n    }\n  };\n\n  let close = () => {\n    props.hideCalendarContextMenu();\n  };\n  return (\n    <div className=\"calendarCtxMenu\">\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          value={curTask}\n          onChange={event => setCurTask(event.target.value)}\n          placeholder=\"Add task\"\n          aria-label=\"Add task\"\n        />\n        <InputGroup.Append>\n          <Button className=\"addBtn\" value={curTask} onClick={callAddTaskFn}>\n            Add\n          </Button>\n          <Button\n            className=\"cancelBtn\"\n            variant=\"secondary\"\n            value={curTask}\n            onClick={close}\n          >\n            Cancel\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n      <Badge>{props.currentCalendarDate}</Badge>\n    </div>\n  );\n};\n\nexport default CalendarContextMenu;\n","import React from \"react\";\n\nimport MenuItems from \"../MenuItems\";\nimport LinkContextMenu from \"./LinkContextMenu\";\nimport LabelContextMenu from \"./LabelContextMenu\";\nimport DeleteContextMenu from \"./DeleteContextMenu\";\nimport DeadlineContextMenu from \"./DeadlineContextMenu\";\nimport CalendarContextMenu from \"./CalendarContextMenu\";\n\nclass ContextMenuContainer extends React.Component {\n  render() {\n    let {\n      displayAllContextMenus,\n      tempPosition,\n      menuOptionsList,\n      displaySortingOptionsMenu,\n      displayTaskCtxMenu,\n      endTimeCloseFn,\n      changeFn,\n      curDeadline,\n      currentCalendarDate,\n      displayDeleteCtxMenu,\n      displayLinkCtxMenu,\n      displayLabelCtxMenu,\n      displayCalendarCtxMenu,\n      linkCloseFn,\n      saveFn,\n      currentURL,\n      currentURLText,\n      changeURLTextFn,\n      changeURLFn,\n      saveLabel,\n      currentLabel,\n      cancelSaveLabel,\n      tempTask,\n      currentLabelChange,\n      selectedLabelIdx,\n      selectedLabelIdxChange,\n      labels,\n      currentLabelChangeByClick,\n      deleteTask,\n      cancelDelete\n    } = this.props;\n    return (\n      <>\n        {displayAllContextMenus ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displaySortingOptionsMenu ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displayTaskCtxMenu ? (\n          <DeadlineContextMenu\n            closeFn={endTimeCloseFn}\n            changeFn={changeFn}\n            curDeadline={curDeadline}\n            tempPosition={tempPosition}\n          ></DeadlineContextMenu>\n        ) : null}\n        {displayLinkCtxMenu ? (\n          <LinkContextMenu\n            tempPosition={tempPosition}\n            closeFn={linkCloseFn}\n            saveFn={saveFn}\n            currentURL={currentURL}\n            currentURLText={currentURLText}\n            changeURLTextFn={changeURLTextFn}\n            changeURLFn={changeURLFn}\n          ></LinkContextMenu>\n        ) : null}\n        {displayLabelCtxMenu ? (\n          <LabelContextMenu\n            tempPosition={tempPosition}\n            saveLabel={saveLabel}\n            currentLabel={currentLabel}\n            cancelSaveLabel={cancelSaveLabel}\n            tempTask={tempTask}\n            currentLabelChange={currentLabelChange}\n            selectedLabelIdx={selectedLabelIdx}\n            selectedLabelIdxChange={selectedLabelIdxChange}\n            labels={labels}\n            currentLabelChangeByClick={currentLabelChangeByClick}\n          />\n        ) : null}\n        {displayDeleteCtxMenu ? (\n          <DeleteContextMenu\n            tempPosition={tempPosition}\n            tempTask={tempTask}\n            deleteTask={deleteTask}\n            cancelDelete={cancelDelete}\n          />\n        ) : null}\n        {displayCalendarCtxMenu ? (\n          <CalendarContextMenu\n            currentCalendarDate={currentCalendarDate}\n            addTaskToDate={this.props.addTaskToDate}\n            hideCalendarContextMenu={this.props.hideCalendarContextMenu}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ContextMenuContainer;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n\n    let modules = {\n        toolbar: [\n          [{ header: [1, 2, false] }],\n          [\"bold\", \"italic\", \"underline\", \"strike\", \"code-block\"],\n          [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" }\n          ],\n          [\"clean\"]\n        ]\n      },\n      formats = [\n        \"header\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strike\",\n        \"code-block\",\n        \"list\",\n        \"bullet\",\n        \"indent\"\n      ];\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"task-modal-title\">\n            {props.currentModalTask}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n                modules={modules}\n                formats={formats}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      numDays = Moment(end).diff(start, \"days\"),\n      num = 0,\n      day = start,\n      dates = [],\n      dateSet = {};\n    while (num < numDays) {\n      let date = Moment(day).format(\"YYYY-MM-DD\");\n      dates.push({ date: date, count: 0 });\n      dateSet[date] = num;\n      num++;\n      day = Moment(day).add(1, \"days\");\n    }\n    this.state = {\n      dates: dates,\n      dateSet: dateSet,\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n    dates = this.state.dates;\n\n    for (let d in dateSet) {\n      let idx = this.state.dateSet[d];\n      dates && dates[idx] && dates[idx].count++;\n    }\n    this.setState({\n      dates: dates\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <ContextMenuContainer\n          displayCalendarCtxMenu={this.props.displayCalendarCtxMenu}\n          currentCalendarDate={this.props.currentCalendarDate}\n          addTaskToDate={this.props.addTaskToDate}\n          hideCalendarContextMenu={this.props.hideCalendarContextMenu}\n        />\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={this.state.dates}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n          classForValue={value => {\n            if (value && value !== null && value.count === 0) {\n              return \"color-empty\";\n            } else {\n              if (value === null) return \"color-empty\";\n              return \"color-filled\";\n            }\n          }}\n          onClick={value => {\n            if (value && value.date) {\n              this.props.showCalendarContextMenu(value.date);\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport \"./TabSelector.scss\";\nconst TabSelector = ({ shouldShowDashboard, hideDashboard, showDashboard }) => {\n  return (\n    <>\n      <Badge\n        className={\"tabselector \" + (!shouldShowDashboard ? \"selected\" : \"\")}\n        onClick={hideDashboard}\n      >\n        Tasks\n      </Badge>\n      <Badge\n        className={\"tabselector \" + (shouldShowDashboard ? \"selected\" : \"\")}\n        onClick={showDashboard}\n      >\n        Statistics\n      </Badge>\n    </>\n  );\n};\n\nexport default TabSelector;\n","import FacebookLogin from \"react-facebook-login\";\nimport React from \"react\";\nimport \"./LoginPage.scss\";\n\nconst LoginPage = ({ responseFacebook }) => {\n  return (\n    <>\n      <div className=\"login-welcome\">Welcome to Planner App</div>\n      <FacebookLogin\n        appId=\"176625356093687\"\n        autoLoad={false}\n        callback={responseFacebook}\n        cssClass=\"my-facebook-button-class\"\n        fields=\"name,email,picture\"\n      />\n    </>\n  );\n};\n\nexport default LoginPage;\n","import db from \"./db\";\n\nexport function addToList(ev) {\n  if (this.state.curTask.trim().length >= 1) {\n    let curTask = this.state.curTask;\n    let tasks = this.state.tasks;\n    tasks.push({\n      task: curTask\n    });\n    this.setState({\n      tasks: tasks,\n      curTask: \"\"\n    });\n    db.tasks.put({ userName: this.props.userName, task: curTask });\n  }\n}\n\nexport function deleteTask(tempTask) {\n  let tasks = this.state.tasks,\n    curTask = tempTask,\n    idx;\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === curTask) {\n      idx = i;\n      break;\n    }\n  }\n  tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n  this.setState({\n    tasks: tasks,\n    showDeletedAnimation: true,\n    displayDeleteCtxMenu: false,\n    displayCurtain: false\n  });\n  db.tasks\n    .where(\"task\")\n    .equalsIgnoreCase(curTask)\n    .delete();\n\n  setTimeout(() => {\n    this.setState({\n      showDeletedAnimation: false\n    });\n  }, 3000);\n}\n\nexport function handleInputChange(ev) {\n  let val = ev.target.value;\n  if (val.length < 50) {\n    this.setState({\n      curTask: ev.target.value\n    });\n  }\n}\n","export function startDrag(ev) {\n  if (this.state.currentDraggingTask === null) {\n    let title = ev.currentTarget.getAttribute(\"value\"),\n      tasks = this.state.tasks,\n      deletedTask = null,\n      i;\n    for (i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === title) {\n        deletedTask = tasks[i];\n        break;\n      }\n    }\n    this.setState({\n      tasks: tasks,\n      currentDraggingTask: deletedTask\n    });\n  }\n}\n\nexport function stopDrag(task) {\n  let tasks = this.state.tasks,\n    i, // index of dropped area\n    idx = 0, // index of dragging task\n    curDragTask = this.state.currentDraggingTask;\n\n  for (idx = 0; idx < tasks.length; idx++) {\n    if (tasks[idx].task === curDragTask.task) {\n      break;\n    }\n  }\n  tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === task) {\n      break;\n    }\n  }\n  let firstHalf = tasks.slice(0, i + 1);\n  if (this.state.currentDraggingTask !== null) {\n    firstHalf.push({\n      task: curDragTask.task,\n      end: curDragTask.end,\n      url: curDragTask.url,\n      urlText: curDragTask.urlText,\n      progressState: curDragTask.progressState,\n      label: curDragTask.label,\n      selectedLabelIdx: curDragTask.selectedLabelIdx\n    });\n    tasks = firstHalf.concat(tasks.slice(i + 1, tasks.length));\n    this.setState({\n      tasks: tasks,\n      currentDraggingTask: null\n    });\n  }\n}\n\nexport function onDragEnd() {\n  if (this.state.currentDraggingTask) {\n    this.setState({\n      currentDraggingTask: null\n    });\n  }\n}\n","import db from \"./db\";\n\nexport function saveLabel() {\n  let curLabel = this.state.currentLabel,\n    curTask = this.state.tempTask,\n    stateLabels = this.state.labels;\n  stateLabels.add(curLabel);\n  db.tasks\n    .where(\"task\")\n    .equalsIgnoreCase(curTask)\n    .first(item => {\n      let firstMatch = item;\n      db.tasks.put({\n        userName: this.props.userName,\n        task: curTask,\n        endTime: firstMatch.endTime,\n        url: firstMatch.url,\n        urlText: firstMatch.urlText,\n        progressState: firstMatch.progressState,\n        id: firstMatch.id,\n        label: curLabel,\n        selectedLabelIdx: this.state.selectedLabelIdx\n      });\n    });\n  let tasks = this.state.tasks.concat();\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task === curTask) {\n      tasks[i].label = curLabel;\n      tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n      break;\n    }\n  }\n  this.setState({\n    displayAllContextMenus: false,\n    displayLabelCtxMenu: false,\n    currentLabel: \"\",\n    tasks: tasks,\n    labels: stateLabels\n  });\n}\n\nexport function cancelSaveLabel() {\n  this.setState({\n    displayAllContextMenus: false,\n    displayLabelCtxMenu: false,\n    currentLabel: \"\"\n  });\n}\n\nexport function currentLabelChange(v) {\n  this.setState({\n    currentLabel: v.currentTarget.value\n  });\n}\n\nexport function selectedLabelIdxChange(v) {\n  this.setState({\n    selectedLabelIdx: v\n  });\n}\n\nexport function currentLabelChangeByClick(v) {\n  this.setState({\n    currentLabel: v\n  });\n}\n","import React from \"react\";\nimport Moment from \"moment\";\nimport \"./App.scss\";\nimport \"react-toggle/style.css\"; // for ES6 modules\nimport Toggle from \"react-toggle\";\nimport eventIcon from \"./assets/event.svg\";\nimport dragIcon from \"./assets/drag.svg\";\nimport CompletedAnimation from \"./animations/CompletedAnimation\";\nimport DeletedAnimation from \"./animations/DeletedAnimation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport TabSelector from \"./TabSelector\";\nimport LoginPage from \"./LoginPage\";\nimport {\n  addToList,\n  deleteTask,\n  handleInputChange\n} from \"./_TaskListsFunctions\";\nimport { startDrag, stopDrag, onDragEnd } from \"./_DragActions\";\n\nimport {\n  saveLabel,\n  cancelSaveLabel,\n  currentLabelChange,\n  selectedLabelIdxChange,\n  currentLabelChangeByClick\n} from \"./_LabelFunctions\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      displayCalendarCtxMenu: false,\n      currentCalendarDate: null,\n      currentURL: \"\",\n      currentURLText: \"\",\n      currentDraggingTask: null,\n      showModal: false,\n      showCompletedAnimation: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      shouldShowDashboard: false,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Close\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n    // async function getStocks() {\n    //   let url =\n    //     \"https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=MSFT&interval=30min&apikey=1HZKQ8BEPBGQMTV0\";\n    //   let res = await fetch(url);\n    //   let text = await res.text();\n    //   console.log(text);\n    // }\n    // getStocks();\n  };\n\n  responseFacebook = res => {\n    let tasks = [],\n      labels = new Set(); // we're going to use a Set to store the labels\n    window.localStorage.setItem(\"todousername\", res.name);\n    db.tasks\n      .where(\"userName\")\n      .equalsIgnoreCase(res.name)\n      .each(rec => {\n        if (rec.label) {\n          labels.add(rec.label);\n        }\n        tasks.push({\n          task: rec.task,\n          end: rec.endTime,\n          url: rec.url,\n          urlText: rec.urlText,\n          progressState: rec.progressState,\n          label: rec.label,\n          selectedLabelIdx: rec.selectedLabelIdx\n        });\n      })\n      .then(() => {\n        this.props.facebookLoginDispatch({\n          loggedin: true,\n          userName: res.name\n        });\n        if (tasks.length === 0) {\n          tasks.push({\n            task: \"Add a task like this!\",\n            end: new Date(),\n            url: \"www.google.com\",\n            urlText: \"Add a link like this\",\n            progressState: \"progress\",\n            label: \"Label\",\n            selectedLabelIdx: 1\n          });\n        }\n        this.setState({\n          tasks: tasks,\n          labels: labels\n        });\n      });\n  };\n\n  logOutFacebook = () => {\n    window.localStorage.removeItem(\"todousername\");\n    window.FB.logout();\n    this.props.facebookLoginDispatch({\n      loggedin: false,\n      userName: \"User\"\n    });\n  };\n\n  addToList = addToList.bind(this);\n\n  closeAllCtxMenus = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = handleInputChange.bind(this);\n\n  deleteTask = deleteTask.bind(this);\n\n  // Function to show the context menu\n  showDeadlineContextMenu = ev => {\n    this.setState({\n      displayAllContextMenus: true,\n      displayCurtain: window.screen.width < 500 ? false : true, // hack for mobile TODO: fix later\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  deadlineChangeFn = time => {\n    this.setState({\n      curDeadline: time\n    });\n  };\n\n  endTimeCloseFn = () => {\n    let tasks = this.state.tasks.concat();\n    let curTask = this.state.tempTask;\n    this.setState({\n      displayTaskCtxMenu: false\n    });\n    if (this.state.curDeadline) {\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].task === curTask) {\n          tasks[i].end = this.state.curDeadline;\n          break;\n        }\n      }\n      this.setState({\n        tasks: tasks\n      });\n\n      let firstMatch;\n      db.tasks\n        .where(\"task\")\n        .equalsIgnoreCase(curTask)\n        .first(item => {\n          //if (Number.isInteger(end)) {\n          firstMatch = item;\n          //let endTime = Moment().add(end, \"hour\");\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            richText: firstMatch.richText,\n            endTime: this.state.curDeadline,\n            id: firstMatch.id,\n            label: firstMatch.label,\n            selectedLabelIdx: firstMatch.selectedLabelIdx\n          });\n          //  }\n        });\n    }\n    this.setState({\n      tempTask: \"\"\n      //curDeadline: \"\"\n    });\n  };\n\n  // Functions for the link\n  linkCloseFn = () => {\n    this.setState({\n      displayLinkCtxMenu: false,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  saveLinkFn = () => {\n    let { currentURL, currentURLText, tempTask } = this.state,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === tempTask) {\n        tasks[i].url = currentURL;\n        tasks[i].urlText = currentURLText;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(tempTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: tempTask,\n          endTime: firstMatch.endTime,\n          url: currentURL,\n          urlText: currentURLText,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  changeURLTextFn = ev => {\n    this.setState({\n      currentURLText: ev.target.value\n    });\n  };\n\n  changeURLFn = ev => {\n    this.setState({\n      currentURL: ev.target.value\n    });\n  };\n\n  // Function to save the state change of the task\n  changeProgressState = param => {\n    let progressState = param.currentTarget.value,\n      curTask = param.currentTarget.getAttribute(\"task\");\n    // TODO: make this better\n    param.currentTarget.parentElement.parentElement.classList.remove(\"show\");\n\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressState = progressState;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        if (item) {\n          let firstMatch = item;\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            endTime: firstMatch.endTime,\n            url: firstMatch.url,\n            urlText: firstMatch.urlText,\n            progressState: progressState,\n            id: firstMatch.id\n          });\n        }\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n\n    if (progressState === \"completed\") {\n      this.setState({\n        showCompletedAnimation: true\n      });\n      setTimeout(() => {\n        this.setState({\n          showCompletedAnimation: false\n        });\n      }, 4000);\n    }\n  };\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  showDashboard = () => {\n    this.setState({\n      shouldShowDashboard: true\n    });\n  };\n\n  hideDashboard = () => {\n    this.setState({\n      shouldShowDashboard: false\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item\n            ? item.task\n            : \"You'll see your task header here\",\n          currentModalTaskEnd: item ? item.endTime : \"Jan 24 2020 8:45pm EST\",\n          currentRichText: item\n            ? item.richText\n            : \"Here you can have a details section too! ^_^\"\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  saveLabel = saveLabel.bind(this);\n\n  cancelSaveLabel = cancelSaveLabel.bind(this);\n\n  currentLabelChange = currentLabelChange.bind(this);\n\n  selectedLabelIdxChange = selectedLabelIdxChange.bind(this);\n\n  currentLabelChangeByClick = currentLabelChangeByClick.bind(this);\n\n  sortTasksByLabel = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n        textB = (b.label && b.label.toUpperCase()) || \"Z\";\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  sortTasksByEndTime = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      if (!a.end) {\n        a.end = Moment(new Date()).subtract(10, \"years\");\n        a.removeEnd = true;\n      }\n      if (!b.end) {\n        b.end = Moment(new Date()).subtract(10, \"years\");\n        b.removeEnd = true;\n      }\n      return -1 * Moment(a.end).diff(Moment(b.end));\n    });\n    tasks.forEach(t => {\n      if (t.removeEnd) t.end = undefined;\n    });\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showSortingOptionsMenu = ev => {\n    this.setState({\n      displaySortingOptionsMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showCalendarContextMenu = date => {\n    this.setState({\n      displayCalendarCtxMenu: true,\n      currentCalendarDate: date\n    });\n  };\n\n  hideCalendarContextMenu = () => {\n    this.setState({\n      displayCalendarCtxMenu: false\n    });\n  };\n\n  // callback that we will pass to CalendarContextMenu\n  addTaskToDate = (task, date) => {\n    let tasks = this.state.tasks;\n\n    tasks.push({\n      task: task,\n      end: Moment(date)._d,\n      url: null,\n      urlText: null,\n      progressState: null,\n      label: null,\n      selectedLabelIdx: null\n    });\n\n    this.setState({\n      tasks: tasks\n    });\n\n    db.tasks.put({\n      userName: this.props.userName,\n      task: task,\n      endTime: Moment(date)._d\n    });\n  };\n\n  startDrag = startDrag.bind(this);\n\n  stopDrag = stopDrag.bind(this);\n\n  render = () => {\n    let listId = 0,\n      {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        displayCalendarCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeProgressState,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        hideCalendarContextMenu,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showCalendarContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ];\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <CompletedAnimation show={this.state.showCompletedAnimation} />\n              <DeletedAnimation show={this.state.showDeletedAnimation} />\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                <div className=\"welcomeBar\">\n                  {\"Welcome \"}\n                  <span className=\"userName\">{userName}</span>\n                </div>\n                <div className=\"toggle-container\">\n                  <label>\n                    <Toggle\n                      defaultChecked={false}\n                      onChange={showColors}\n                      value={shouldShowColors}\n                    />\n                  </label>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TabSelector\n                shouldShowDashboard={this.state.shouldShowDashboard}\n                showDashboard={this.showDashboard}\n                hideDashboard={this.hideDashboard}\n              />\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              />\n              {this.state.shouldShowDashboard ? (\n                <Dashboard\n                  tasks={this.state.tasks}\n                  currentCalendarDate={this.state.currentCalendarDate}\n                  displayCalendarCtxMenu={this.state.displayCalendarCtxMenu}\n                  showCalendarContextMenu={showCalendarContextMenu}\n                  hideCalendarContextMenu={hideCalendarContextMenu}\n                  addTaskToDate={this.addTaskToDate}\n                />\n              ) : null}\n              {this.state.shouldShowDashboard ? null : (\n                <>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      onChange={handleInputChange}\n                      value={curTask}\n                      placeholder=\"Add task to do\"\n                      aria-label=\"Add task to do\"\n                      aria-describedby=\"basic-addon2\"\n                    />\n                    <InputGroup.Append>\n                      <Button onClick={addToList} variant=\"outline-secondary\">\n                        Add\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <ContextMenuContainer\n                    cancelDelete={this.cancelDelete}\n                    cancelSaveLabel={cancelSaveLabel}\n                    changeFn={deadlineChangeFn}\n                    changeURLFn={changeURLFn}\n                    closeFn={linkCloseFn}\n                    curDeadline={curDeadline}\n                    currentLabel={this.state.currentLabel}\n                    currentLabelChange={this.currentLabelChange}\n                    currentLabelChangeByClick={this.currentLabelChangeByClick}\n                    currentURL={currentURL}\n                    currentURLText={currentURLText}\n                    changeURLTextFn={changeURLTextFn}\n                    deleteTask={deleteTask}\n                    displayAllContextMenus={displayAllContextMenus}\n                    displayDeleteCtxMenu={this.state.displayDeleteCtxMenu}\n                    displayLabelCtxMenu={this.state.displayLabelCtxMenu}\n                    displaySortingOptionsMenu={displaySortingOptionsMenu}\n                    displayTaskCtxMenu={displayTaskCtxMenu}\n                    displayLinkCtxMenu={displayLinkCtxMenu}\n                    displayCalendarCtxMenu={displayCalendarCtxMenu}\n                    addTaskToDate={this.addTaskToDate}\n                    endTimeCloseFn={endTimeCloseFn}\n                    labels={this.state.labels}\n                    linkCloseFn={linkCloseFn}\n                    menuOptionsList={\n                      displayAllContextMenus\n                        ? menuOptionsList\n                        : this.state.sortingOptions\n                    }\n                    saveFn={saveLinkFn}\n                    saveLabel={saveLabel}\n                    selectedLabelIdx={this.state.selectedLabelIdx}\n                    selectedLabelIdxChange={this.selectedLabelIdxChange}\n                    tempPosition={tempPosition}\n                    tempTask={this.state.tempTask}\n                  />\n\n                  <ListGroup className=\"listOfTasksContainer\">\n                    {this.state &&\n                      this.state.tasks.map(task => {\n                        return (\n                          <ListGroup.Item\n                            key={listId++}\n                            onDrop={() => {\n                              this.stopDrag(task.task);\n                            }}\n                            onDragOver={e => {\n                              e.preventDefault();\n                            }}\n                            className={\n                              this.state.currentDraggingTask &&\n                              this.state.currentDraggingTask.task === task.task\n                                ? \"blur\"\n                                : \"\"\n                            }\n                          >\n                            {this.state.shouldShowColors ? (\n                              <div\n                                className={\"color-status \" + task.progressState}\n                              ></div>\n                            ) : null}\n                            <img\n                              className=\"dragIcon\"\n                              value={task.task}\n                              src={dragIcon}\n                              draggable\n                              onDrag={this.startDrag}\n                              onDragEnd={onDragEnd.bind(this)}\n                            ></img>\n                            <div\n                              className=\"task-title\"\n                              value={task.task}\n                              onClick={this.openTaskModal}\n                            >\n                              <span className=\"details-icon\">Details</span>\n                              {task.task}\n                            </div>\n                            {task.end ? (\n                              <>\n                                <img\n                                  className=\"calendar-icon\"\n                                  src={eventIcon}\n                                />\n                                <div className=\"endTime\">\n                                  {Moment(task.end).format(\"LLLL\")}\n                                </div>\n                              </>\n                            ) : null}\n\n                            <button\n                              onClick={this.showDeleteContextMenu}\n                              value={task.task}\n                              className=\"menuItembutton\"\n                            />\n                            <div className=\"list-link\">\n                              <a href={\"https://\" + task.url} target=\"_blank\">\n                                {task.urlText}\n                              </a>\n                            </div>\n\n                            <button\n                              onClick={showDeadlineContextMenu}\n                              value={task.task}\n                              className=\"menuLinkbutton\"\n                            />\n                            {!task.label ? null : (\n                              <Badge\n                                className=\"genericLabel\"\n                                variant={badgeOptions[task.selectedLabelIdx]}\n                              >\n                                {task.label}\n                              </Badge>\n                            )}\n                            <Accordion defaultActiveKey=\"0\">\n                              <Card className=\"invisible-card\">\n                                <Accordion.Toggle\n                                  className=\"accordion-toggle\"\n                                  eventKey=\"1\"\n                                >\n                                  <ProgressBar\n                                    striped\n                                    now={\n                                      !task.progressState\n                                        ? 10\n                                        : task.progressState === \"defined\"\n                                        ? 10\n                                        : task.progressState === \"inprogress\"\n                                        ? 60\n                                        : 100\n                                    }\n                                  />\n                                  Status:{\" \"}\n                                  {task.progressState\n                                    ? task.progressState\n                                    : \"Defined\"}\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                  <Card.Body className=\"invisible-card-body\">\n                                    {\" \"}\n                                    <select\n                                      className=\"custom-select\"\n                                      value={task.progressState}\n                                      task={task.task}\n                                      onChange={changeProgressState}\n                                    >\n                                      <option value=\"defined\" key=\"0\">\n                                        Defined\n                                      </option>\n                                      <option value=\"inprogress\" key=\"1\">\n                                        In Progress\n                                      </option>\n                                      <option value=\"completed\" key=\"2\">\n                                        Completed\n                                      </option>\n                                    </select>\n                                  </Card.Body>\n                                </Accordion.Collapse>\n                              </Card>\n                            </Accordion>\n                          </ListGroup.Item>\n                        );\n                      })}\n                  </ListGroup>\n                </>\n              )}\n            </div>\n          ) : (\n            <LoginPage responseFacebook={this.responseFacebook} />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}