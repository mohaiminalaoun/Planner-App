{"version":3,"sources":["MenuItems.js","contextMenus/withContextMenu.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","contextMenus/DeadlineContextMenu.js","contextMenus/ContextMenuContainer.js","db.js","TaskModal.js","Dashboard.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js"],"names":["MenuItems","props","options","menuOptionsList","map","item","ListGroup","Item","className","key","text","onClick","divStyle","left","tempPosition","window","screen","width","top","id","style","withHOC","OriginalComponent","this","right","marginLeft","marginRight","name","React","Component","Form","Group","controlId","FormControl","onChange","changeURLFn","value","currentURL","placeholder","aria-label","aria-describedby","changeURLTextFn","currentURLText","Button","variant","saveFn","closeFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","cancelDelete","deleteTask","tempTask","InputGroup","changeFn","curDeadline","Append","ContextMenuContainer","displayAllContextMenus","displaySortingOptionsMenu","displayTaskCtxMenu","endTimeCloseFn","displayDeleteCtxMenu","displayLinkCtxMenu","displayLabelCtxMenu","linkCloseFn","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","console","log","put","userName","endTime","end","richText","then","state","Modal","show","onHide","centered","Header","closeButton","Title","Body","Label","Moment","currentModalTaskEnd","format","onRichTextChange","Footer","Dashboard","start","Date","subtract","add","dates","firstDate","lastDate","dateSet","d","date","count","setState","startDate","endDate","values","titleForValue","v","App","componentDidMount","localStorage","getItem","responseFacebook","res","Set","setItem","each","rec","url","urlText","progressState","facebookLoginDispatch","loggedin","logOutFacebook","removeItem","FB","logout","addToList","curTask","trim","length","closeAllCtxMenus","displayCurtain","handleInputChange","target","i","slice","concat","delete","showDeadlineContextMenu","clientX","clientY","parseInt","Number","isInteger","_d","firstMatch","saveLinkFn","deadlineChangeFn","changeProgressState","param","parentElement","classList","remove","showColors","curState","shouldShowColors","openTaskModal","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","curLabel","stateLabels","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","diff","undefined","showSortingOptionsMenu","showDeleteContextMenu","render","listId","badgeOptions","defaultChecked","currentTask","sortingOptions","href","Accordion","defaultActiveKey","Card","Toggle","eventKey","ProgressBar","striped","now","Collapse","appId","autoLoad","callback","cssClass","fields","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9d911a8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { Button, ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = props => {\n  const options = props.menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[0] + \"px\"\n          : props.tempPosition[0] - 100 + \"px\",\n      top:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[1] + \"px\"\n          : props.tempPosition[1] - 50 + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let { props } = this,\n        divStyle =\n          props.tempPosition[0] + 300 < window.screen.width\n            ? {\n                left: props.tempPosition[0] + \"px\",\n                top: props.tempPosition[1] + \"px\"\n              }\n            : {\n                left: \"0\",\n                right: \"0\",\n                top: \"40%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  return (\n    <div className=\"linkContextMenu\" style={props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n  return (\n    <div className=\"deleteContextMenu\" style={props.divStyle}>\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import React from \"react\";\nimport \"./DeadlineContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nconst DeadlineContextMenu = props => {\n  return (\n    <div className=\"taskContextMenu\" style={props.divStyle}>\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          onChange={props.changeFn}\n          value={props.curDeadline}\n          placeholder=\"Hours\"\n          aria-label=\"Add deadline to task\"\n          aria-describedby=\"basic-addon2\"\n        />\n      </InputGroup>\n      <InputGroup.Append>\n        <Button\n          className=\"deadline-close-btn\"\n          onClick={props.closeFn}\n          variant=\"secondary\"\n        >\n          Cancel\n        </Button>\n        <Button\n          className=\"deadline-ok-btn\"\n          onClick={props.closeFn}\n          variant=\"primary\"\n        >\n          Okay\n        </Button>\n      </InputGroup.Append>\n    </div>\n  );\n};\n\nDeadlineContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  curDeadline: PropTypes.string,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(DeadlineContextMenu);\n","import React from \"react\";\n\nimport MenuItems from \"../MenuItems\";\nimport LinkContextMenu from \"./LinkContextMenu\";\nimport LabelContextMenu from \"./LabelContextMenu\";\nimport DeleteContextMenu from \"./DeleteContextMenu\";\nimport DeadlineContextMenu from \"./DeadlineContextMenu\";\n\nclass ContextMenuContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {\n      displayAllContextMenus,\n      tempPosition,\n      menuOptionsList,\n      displaySortingOptionsMenu,\n      displayTaskCtxMenu,\n      endTimeCloseFn,\n      changeFn,\n      curDeadline,\n      displayDeleteCtxMenu,\n      displayLinkCtxMenu,\n      displayLabelCtxMenu,\n      linkCloseFn,\n      saveFn,\n      currentURL,\n      currentURLText,\n      changeURLTextFn,\n      changeURLFn,\n      saveLabel,\n      currentLabel,\n      cancelSaveLabel,\n      tempTask,\n      currentLabelChange,\n      selectedLabelIdx,\n      selectedLabelIdxChange,\n      labels,\n      currentLabelChangeByClick,\n      deleteTask,\n      cancelDelete\n    } = this.props;\n    return (\n      <>\n        {displayAllContextMenus ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displaySortingOptionsMenu ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displayTaskCtxMenu ? (\n          <DeadlineContextMenu\n            closeFn={endTimeCloseFn}\n            changeFn={changeFn}\n            curDeadline={curDeadline}\n            tempPosition={tempPosition}\n          ></DeadlineContextMenu>\n        ) : null}\n        {displayLinkCtxMenu ? (\n          <LinkContextMenu\n            tempPosition={tempPosition}\n            closeFn={linkCloseFn}\n            saveFn={saveFn}\n            currentURL={currentURL}\n            currentURLText={currentURLText}\n            changeURLTextFn={changeURLTextFn}\n            changeURLFn={changeURLFn}\n          ></LinkContextMenu>\n        ) : null}\n        {displayLabelCtxMenu ? (\n          <LabelContextMenu\n            tempPosition={tempPosition}\n            saveLabel={saveLabel}\n            currentLabel={currentLabel}\n            cancelSaveLabel={cancelSaveLabel}\n            tempTask={tempTask}\n            currentLabelChange={currentLabelChange}\n            selectedLabelIdx={selectedLabelIdx}\n            selectedLabelIdxChange={selectedLabelIdxChange}\n            labels={labels}\n            currentLabelChangeByClick={currentLabelChangeByClick}\n          />\n        ) : null}\n        {displayDeleteCtxMenu ? (\n          <DeleteContextMenu\n            tempPosition={tempPosition}\n            tempTask={tempTask}\n            deleteTask={deleteTask}\n            cancelDelete={cancelDelete}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ContextMenuContainer;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"task-modal-title\">\n            {props.currentModalTask}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\");\n    this.state = {\n      dates: [],\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n\n    for (let d in dateSet) {\n      dates.push({\n        date: d,\n        count: dateSet[d]\n      });\n    }\n    this.setState({\n      dates: dates\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={this.state.dates}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport \"./App.scss\";\nimport \"react-toggle/style.css\"; // for ES6 modules\nimport Toggle from \"react-toggle\";\n\nimport FacebookLogin from \"react-facebook-login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      currentURL: \"\",\n      currentURLText: \"\",\n      showModal: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n  };\n\n  responseFacebook = res => {\n    let tasks = [],\n      labels = new Set(); // we're going to use a Set to store the labels\n    window.localStorage.setItem(\"todousername\", res.name);\n    db.tasks\n      .where(\"userName\")\n      .equalsIgnoreCase(res.name)\n      .each(rec => {\n        if (rec.label) {\n          labels.add(rec.label);\n        }\n        tasks.push({\n          task: rec.task,\n          end: rec.endTime,\n          url: rec.url,\n          urlText: rec.urlText,\n          progressState: rec.progressState,\n          label: rec.label,\n          selectedLabelIdx: rec.selectedLabelIdx\n        });\n      })\n      .then(() => {\n        this.props.facebookLoginDispatch({\n          loggedin: true,\n          userName: res.name\n        });\n        this.setState({\n          tasks: tasks,\n          labels: labels\n        });\n      });\n  };\n\n  logOutFacebook = () => {\n    window.localStorage.removeItem(\"todousername\");\n    window.FB.logout();\n    this.props.facebookLoginDispatch({\n      loggedin: false,\n      userName: \"User\"\n    });\n  };\n\n  addToList = ev => {\n    if (this.state.curTask.trim().length >= 1) {\n      let curTask = this.state.curTask;\n      let tasks = this.state.tasks;\n      tasks.push({\n        task: curTask\n      });\n      this.setState({\n        tasks: tasks,\n        curTask: \"\"\n      });\n      db.tasks.put({ userName: this.props.userName, task: curTask });\n    }\n  };\n\n  closeAllCtxMenus = () => {\n    console.log(\"clicked close all context menus fn\");\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = ev => {\n    let val = ev.target.value;\n    if (val.length < 50) {\n      this.setState({\n        curTask: ev.target.value\n      });\n    }\n  };\n\n  deleteTask = tempTask => {\n    let tasks = this.state.tasks,\n      curTask = tempTask,\n      idx;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        idx = i;\n        break;\n      }\n    }\n\n    tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n    this.setState({\n      tasks: tasks,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .delete();\n  };\n\n  // Function to show the context menu\n  showDeadlineContextMenu = ev => {\n    this.setState({\n      displayAllContextMenus: true,\n      displayCurtain: window.screen.width < 500 ? false : true, // hack for mobile TODO: fix later\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  endTimeCloseFn = () => {\n    let tasks = this.state.tasks.concat();\n    let curTask = this.state.tempTask;\n    this.setState({\n      displayTaskCtxMenu: false\n    });\n    let end = parseInt(this.state.curDeadline);\n    if (Number.isInteger(end)) {\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].task === curTask) {\n          tasks[i].end = Moment(new Date()).add(end, \"hour\")._d;\n          break;\n        }\n      }\n      this.setState({\n        tasks: tasks\n      });\n\n      let firstMatch;\n      db.tasks\n        .where(\"task\")\n        .equalsIgnoreCase(curTask)\n        .first(item => {\n          if (Number.isInteger(end)) {\n            firstMatch = item;\n            let endTime = Moment().add(end, \"hour\");\n            db.tasks.put({\n              userName: this.props.userName,\n              task: curTask,\n              richText: firstMatch.richText,\n              endTime: endTime._d,\n              id: firstMatch.id,\n              label: firstMatch.label,\n              selectedLabelIdx: firstMatch.selectedLabelIdx\n            });\n          }\n        });\n    }\n    this.setState({\n      tempTask: \"\",\n      curDeadline: \"\"\n    });\n  };\n\n  // Functions for the link\n  linkCloseFn = () => {\n    this.setState({\n      displayLinkCtxMenu: false,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  saveLinkFn = () => {\n    let { currentURL, currentURLText, tempTask } = this.state,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === tempTask) {\n        tasks[i].url = currentURL;\n        tasks[i].urlText = currentURLText;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(tempTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: tempTask,\n          endTime: firstMatch.endTime,\n          url: currentURL,\n          urlText: currentURLText,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  deadlineChangeFn = ev => {\n    this.setState({\n      curDeadline: ev.target.value\n    });\n  };\n\n  changeURLTextFn = ev => {\n    this.setState({\n      currentURLText: ev.target.value\n    });\n  };\n\n  changeURLFn = ev => {\n    this.setState({\n      currentURL: ev.target.value\n    });\n  };\n\n  // Function to save the state change of the task\n  changeProgressState = param => {\n    let progressState = param.currentTarget.value,\n      curTask = param.currentTarget.getAttribute(\"task\");\n    // TODO: make this better\n    param.currentTarget.parentElement.parentElement.classList.remove(\"show\");\n\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressState = progressState;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: progressState,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item.task,\n          currentModalTaskEnd: item.endTime,\n          currentRichText: item.richText\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  saveLabel = () => {\n    let curLabel = this.state.currentLabel,\n      curTask = this.state.tempTask,\n      stateLabels = this.state.labels;\n    stateLabels.add(curLabel);\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: firstMatch.progressState,\n          id: firstMatch.id,\n          label: curLabel,\n          selectedLabelIdx: this.state.selectedLabelIdx\n        });\n      });\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].label = curLabel;\n        tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n        break;\n      }\n    }\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\",\n      tasks: tasks,\n      labels: stateLabels\n    });\n  };\n\n  cancelSaveLabel = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\"\n    });\n  };\n\n  currentLabelChange = v => {\n    this.setState({\n      currentLabel: v.currentTarget.value\n    });\n  };\n\n  selectedLabelIdxChange = v => {\n    this.setState({\n      selectedLabelIdx: v\n    });\n  };\n\n  currentLabelChangeByClick = v => {\n    this.setState({\n      currentLabel: v\n    });\n  };\n\n  sortTasksByLabel = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n        textB = (b.label && b.label.toUpperCase()) || \"Z\";\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  sortTasksByEndTime = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      if (!a.end) {\n        a.end = Moment(new Date()).subtract(10, \"years\");\n        a.removeEnd = true;\n      }\n      if (!b.end) {\n        b.end = Moment(new Date()).subtract(10, \"years\");\n        b.removeEnd = true;\n      }\n      return -1 * Moment(a.end).diff(Moment(b.end));\n    });\n    tasks.forEach(t => {\n      if (t.removeEnd) t.end = undefined;\n    });\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showSortingOptionsMenu = ev => {\n    this.setState({\n      displaySortingOptionsMenu: true,\n      displayCurtain: true,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  render = () => {\n    let listId = 0,\n      {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeProgressState,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ];\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                <div className=\"welcomeBar\">\n                  {\"Welcome \"}\n                  <span className=\"userName\">{userName}</span>\n                </div>\n                <div className=\"toggle-container\">\n                  <label>\n                    <Toggle\n                      defaultChecked={false}\n                      onChange={showColors}\n                      value={shouldShowColors}\n                    />\n                  </label>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              ></TaskModal>\n              {this.state.shouldShowColors ? (\n                <Dashboard tasks={this.state.tasks} />\n              ) : null}\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  onChange={handleInputChange}\n                  value={curTask}\n                  placeholder=\"Add task to do\"\n                  aria-label=\"Add task to do\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <InputGroup.Append>\n                  <Button onClick={addToList} variant=\"outline-secondary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n              <ContextMenuContainer\n                cancelDelete={this.cancelDelete}\n                cancelSaveLabel={cancelSaveLabel}\n                changeFn={deadlineChangeFn}\n                changeURLFn={changeURLFn}\n                closeFn={linkCloseFn}\n                curDeadline={curDeadline}\n                currentLabel={this.state.currentLabel}\n                currentLabelChange={this.currentLabelChange}\n                currentLabelChangeByClick={this.currentLabelChangeByClick}\n                currentURL={currentURL}\n                currentURLText={currentURLText}\n                changeURLTextFn={changeURLTextFn}\n                deleteTask={deleteTask}\n                displayAllContextMenus={displayAllContextMenus}\n                displayDeleteCtxMenu={this.state.displayDeleteCtxMenu}\n                displayLabelCtxMenu={this.state.displayLabelCtxMenu}\n                displaySortingOptionsMenu={displaySortingOptionsMenu}\n                displayTaskCtxMenu={displayTaskCtxMenu}\n                displayLinkCtxMenu={displayLinkCtxMenu}\n                endTimeCloseFn={endTimeCloseFn}\n                labels={this.state.labels}\n                linkCloseFn={linkCloseFn}\n                menuOptionsList={\n                  displayAllContextMenus\n                    ? menuOptionsList\n                    : this.state.sortingOptions\n                }\n                saveFn={saveLinkFn}\n                saveLabel={saveLabel}\n                selectedLabelIdx={this.state.selectedLabelIdx}\n                selectedLabelIdxChange={this.selectedLabelIdxChange}\n                tempPosition={tempPosition}\n                tempTask={this.state.tempTask}\n              />\n              <ListGroup className=\"listOfTasksContainer\">\n                {this.state &&\n                  this.state.tasks.map(task => {\n                    return (\n                      <ListGroup.Item key={listId++}>\n                        {this.state.shouldShowColors ? (\n                          <div\n                            className={\"color-status \" + task.progressState}\n                          ></div>\n                        ) : null}\n                        <span\n                          className=\"task-title\"\n                          value={task.task}\n                          onClick={this.openTaskModal}\n                        >\n                          {task.task}\n                        </span>\n                        <div className=\"endTime\">\n                          {task.end ? Moment(task.end).format(\"LLLL\") : null}\n                        </div>\n                        <button\n                          onClick={this.showDeleteContextMenu}\n                          value={task.task}\n                          className=\"menuItembutton\"\n                        />\n                        <div className=\"list-link\">\n                          <a href={\"https://\" + task.url} target=\"_blank\">\n                            {task.urlText}\n                          </a>\n                        </div>\n\n                        <button\n                          onClick={showDeadlineContextMenu}\n                          value={task.task}\n                          className=\"menuLinkbutton\"\n                        />\n                        {!task.label ? null : (\n                          <Badge\n                            className=\"genericLabel\"\n                            variant={badgeOptions[task.selectedLabelIdx]}\n                          >\n                            {task.label}\n                          </Badge>\n                        )}\n                        <Accordion defaultActiveKey=\"0\">\n                          <Card className=\"invisible-card\">\n                            <Accordion.Toggle\n                              className=\"accordion-toggle\"\n                              eventKey=\"1\"\n                            >\n                              <ProgressBar\n                                striped\n                                now={\n                                  !task.progressState\n                                    ? 10\n                                    : task.progressState === \"defined\"\n                                    ? 10\n                                    : task.progressState === \"inprogress\"\n                                    ? 60\n                                    : 100\n                                }\n                              />\n                              Status:{\" \"}\n                              {task.progressState\n                                ? task.progressState\n                                : \"Defined\"}\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                              <Card.Body className=\"invisible-card-body\">\n                                {\" \"}\n                                <select\n                                  className=\"custom-select\"\n                                  value={task.progressState}\n                                  task={task.task}\n                                  onChange={changeProgressState}\n                                >\n                                  <option value=\"defined\" key=\"0\">\n                                    Defined\n                                  </option>\n                                  <option value=\"inprogress\" key=\"1\">\n                                    In Progress\n                                  </option>\n                                  <option value=\"completed\" key=\"2\">\n                                    Completed\n                                  </option>\n                                </select>\n                              </Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        </Accordion>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </div>\n          ) : (\n            <FacebookLogin\n              appId=\"176625356093687\"\n              autoLoad={false}\n              callback={responseFacebook}\n              cssClass=\"my-facebook-button-class\"\n              fields=\"name,email,picture\"\n            />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}