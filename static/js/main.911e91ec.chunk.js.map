{"version":3,"sources":["contextMenus/withContextMenu.js","contextMenus/TaskContextMenu.js","MenuItems.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","db.js","TaskModal.js","Dashboard.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js"],"names":["withHOC","OriginalComponent","props","this","divStyle","left","tempPosition","window","screen","width","top","name","React","Component","className","style","InputGroup","FormControl","onChange","changeFn","value","curDeadline","placeholder","aria-label","aria-describedby","Append","Button","onClick","closeFn","variant","MenuItems","options","menuOptionsList","map","item","ListGroup","Item","key","text","id","Form","Group","controlId","changeURLFn","currentURL","changeURLTextFn","currentURLText","saveFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","marginRight","cancelDelete","deleteTask","tempTask","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","console","log","put","userName","endTime","end","richText","then","state","Modal","show","onHide","centered","Header","closeButton","Title","Body","Label","Moment","currentModalTaskEnd","format","onRichTextChange","Footer","Dashboard","start","Date","subtract","add","dates","firstDate","lastDate","dateSet","d","date","count","setState","startDate","endDate","values","titleForValue","v","App","responseFacebook","res","Set","localStorage","setItem","each","rec","url","urlText","progressState","facebookLoginDispatch","loggedin","logOutFacebook","removeItem","FB","logout","addToList","curTask","trim","length","closeAllCtxMenus","displayAllContextMenus","displaySortingOptionsMenu","displayCurtain","displayDeleteCtxMenu","handleInputChange","target","i","slice","concat","delete","showDeadlineContextMenu","clientX","clientY","endTimeCloseFn","displayTaskCtxMenu","parseInt","Number","isInteger","_d","firstMatch","linkCloseFn","displayLinkCtxMenu","saveLinkFn","deadlineChangeFn","changeProgressState","param","parentElement","classList","remove","showColors","curState","shouldShowColors","openTaskModal","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","componentDidMount","getItem","curLabel","stateLabels","displayLabelCtxMenu","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","diff","undefined","showSortingOptionsMenu","showDeleteContextMenu","render","listId","badgeOptions","currentTask","sortingOptions","href","Accordion","defaultActiveKey","Card","Toggle","eventKey","ProgressBar","striped","now","Collapse","appId","autoLoad","callback","cssClass","fields","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.911e91ec.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let { props } = this,\n        divStyle = {\n          left:\n            props.tempPosition[0] + 150 < window.screen.width\n              ? props.tempPosition[0] + \"px\"\n              : props.tempPosition[0] - 150 + \"px\",\n          top: props.tempPosition[1] + \"px\"\n        };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./TaskContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nconst TaskContextMenu = props => {\n  return (\n    <div className=\"taskContextMenu\" style={props.divStyle}>\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          onChange={props.changeFn}\n          value={props.curDeadline}\n          placeholder=\"Add deadline to task\"\n          aria-label=\"Add deadline to task\"\n          aria-describedby=\"basic-addon2\"\n        />\n      </InputGroup>\n      <InputGroup.Append>\n        <Button\n          className=\"deadline-close-btn\"\n          onClick={props.closeFn}\n          variant=\"outline-secondary\"\n        >\n          Close\n        </Button>\n      </InputGroup.Append>\n    </div>\n  );\n};\n\nTaskContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  curDeadline: PropTypes.string,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(TaskContextMenu);\n","import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { Button, ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = props => {\n  const options = props.menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[0] + \"px\"\n          : props.tempPosition[0] - 150 + \"px\",\n      top: props.tempPosition[1] + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  return (\n    <div className=\"linkContextMenu\" style={props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n  return (\n    <div className=\"deleteContextMenu\" style={props.divStyle}>\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.currentModalTask}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\");\n    this.state = {\n      dates: [],\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n\n    for (let d in dateSet) {\n      dates.push({\n        date: d,\n        count: dateSet[d]\n      });\n    }\n    this.setState({\n      dates: dates\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={this.state.dates}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport \"./App.scss\";\nimport FacebookLogin from \"react-facebook-login\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TaskContextMenu from \"./contextMenus/TaskContextMenu\";\nimport MenuItems from \"./MenuItems\";\nimport LinkContextMenu from \"./contextMenus/LinkContextMenu\";\nimport LabelContextMenu from \"./contextMenus/LabelContextMenu\";\nimport DeleteContextMenu from \"./contextMenus/DeleteContextMenu\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      currentURL: \"\",\n      currentURLText: \"\",\n      showModal: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n  responseFacebook = res => {\n    let tasks = [],\n      labels = new Set(); // we're going to use a Set to store the labels\n    window.localStorage.setItem(\"todousername\", res.name);\n    db.tasks\n      .where(\"userName\")\n      .equalsIgnoreCase(res.name)\n      .each(rec => {\n        if (rec.label) {\n          labels.add(rec.label);\n        }\n        tasks.push({\n          task: rec.task,\n          end: rec.endTime,\n          url: rec.url,\n          urlText: rec.urlText,\n          progressState: rec.progressState,\n          label: rec.label,\n          selectedLabelIdx: rec.selectedLabelIdx\n        });\n      })\n      .then(() => {\n        this.props.facebookLoginDispatch({\n          loggedin: true,\n          userName: res.name\n        });\n        this.setState({\n          tasks: tasks,\n          labels: labels\n        });\n      });\n  };\n\n  logOutFacebook = () => {\n    window.localStorage.removeItem(\"todousername\");\n    window.FB.logout();\n    this.props.facebookLoginDispatch({\n      loggedin: false,\n      userName: \"User\"\n    });\n  };\n  addToList = ev => {\n    if (this.state.curTask.trim().length >= 1) {\n      let curTask = this.state.curTask;\n      let tasks = this.state.tasks;\n      tasks.push({\n        task: curTask\n      });\n      this.setState({\n        tasks: tasks,\n        curTask: \"\"\n      });\n      db.tasks.put({ userName: this.props.userName, task: curTask });\n    }\n  };\n\n  closeAllCtxMenus = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = ev => {\n    this.setState({\n      curTask: ev.target.value\n    });\n  };\n\n  deleteTask = tempTask => {\n    let tasks = this.state.tasks,\n      curTask = tempTask,\n      idx;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        idx = i;\n        break;\n      }\n    }\n\n    tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n    this.setState({\n      tasks: tasks,\n      displayDeleteCtxMenu: false\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .delete();\n  };\n\n  // Function to show the context menu\n  showDeadlineContextMenu = ev => {\n    this.setState({\n      displayAllContextMenus: true,\n      displayCurtain: true,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  endTimeCloseFn = () => {\n    let tasks = this.state.tasks.concat();\n    let curTask = this.state.tempTask;\n    this.setState({\n      displayTaskCtxMenu: false\n    });\n    let end = parseInt(this.state.curDeadline);\n    if (Number.isInteger(end)) {\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].task === curTask) {\n          tasks[i].end = Moment(new Date()).add(end, \"hour\")._d;\n          break;\n        }\n      }\n      this.setState({\n        tasks: tasks\n      });\n\n      let firstMatch;\n      db.tasks\n        .where(\"task\")\n        .equalsIgnoreCase(curTask)\n        .first(item => {\n          if (Number.isInteger(end)) {\n            firstMatch = item;\n            let endTime = Moment().add(end, \"hour\");\n            db.tasks.put({\n              userName: this.props.userName,\n              task: curTask,\n              richText: firstMatch.richText,\n              endTime: endTime._d,\n              id: firstMatch.id,\n              label: firstMatch.label,\n              selectedLabelIdx: firstMatch.selectedLabelIdx\n            });\n          }\n        });\n    }\n    this.setState({\n      tempTask: \"\",\n      curDeadline: \"\"\n    });\n  };\n\n  // Functions for the link\n  linkCloseFn = () => {\n    this.setState({\n      displayLinkCtxMenu: false,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  saveLinkFn = () => {\n    let { currentURL, currentURLText, tempTask } = this.state,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === tempTask) {\n        tasks[i].url = currentURL;\n        tasks[i].urlText = currentURLText;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(tempTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: tempTask,\n          endTime: firstMatch.endTime,\n          url: currentURL,\n          urlText: currentURLText,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  deadlineChangeFn = ev => {\n    this.setState({\n      curDeadline: ev.target.value\n    });\n  };\n\n  changeURLTextFn = ev => {\n    this.setState({\n      currentURLText: ev.target.value\n    });\n  };\n\n  changeURLFn = ev => {\n    this.setState({\n      currentURL: ev.target.value\n    });\n  };\n  // Function to save the state change of the task\n  changeProgressState = param => {\n    let progressState = param.currentTarget.value,\n      curTask = param.currentTarget.getAttribute(\"task\");\n    // TODO: make this better\n    param.currentTarget.parentElement.parentElement.classList.remove(\"show\");\n\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressState = progressState;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: progressState,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item.task,\n          currentModalTaskEnd: item.endTime,\n          currentRichText: item.richText\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n  };\n\n  saveLabel = () => {\n    let curLabel = this.state.currentLabel,\n      curTask = this.state.tempTask,\n      stateLabels = this.state.labels;\n    stateLabels.add(curLabel);\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: firstMatch.progressState,\n          id: firstMatch.id,\n          label: curLabel,\n          selectedLabelIdx: this.state.selectedLabelIdx\n        });\n      });\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].label = curLabel;\n        tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n        break;\n      }\n    }\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\",\n      tasks: tasks,\n      labels: stateLabels\n    });\n  };\n\n  cancelSaveLabel = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\"\n    });\n  };\n\n  currentLabelChange = v => {\n    this.setState({\n      currentLabel: v.currentTarget.value\n    });\n  };\n\n  selectedLabelIdxChange = v => {\n    this.setState({\n      selectedLabelIdx: v\n    });\n  };\n  currentLabelChangeByClick = v => {\n    this.setState({\n      currentLabel: v\n    });\n  };\n\n  sortTasksByLabel = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n        textB = (b.label && b.label.toUpperCase()) || \"Z\";\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  sortTasksByEndTime = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      if (!a.end) {\n        a.end = Moment(new Date()).subtract(10, \"years\");\n        a.removeEnd = true;\n      }\n      if (!b.end) {\n        b.end = Moment(new Date()).subtract(10, \"years\");\n        b.removeEnd = true;\n      }\n      return -1 * Moment(a.end).diff(Moment(b.end));\n    });\n    tasks.forEach(t => {\n      if (t.removeEnd) t.end = undefined;\n    });\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false\n    });\n  };\n\n  showSortingOptionsMenu = ev => {\n    this.setState({\n      displaySortingOptionsMenu: true,\n      displayCurtain: true,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: true,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  render = () => {\n    let listId = 0,\n      {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeProgressState,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ];\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          /*displayAllContextMenus || displaySortingOptionsMenu ? */\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                {\"Welcome \"}\n                <span className=\"userName\">{userName}</span>\n                <div className=\"toggle-container\">\n                  <button\n                    onClick={showColors}\n                    className={`smallMenuButton ${shouldShowColors}`}\n                    value={shouldShowColors}\n                  ></button>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              ></TaskModal>\n              {this.state.shouldShowColors ? (\n                <Dashboard tasks={this.state.tasks} />\n              ) : null}\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  onChange={handleInputChange}\n                  value={curTask}\n                  placeholder=\"Add task to do\"\n                  aria-label=\"Add task to do\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <InputGroup.Append>\n                  <Button onClick={addToList} variant=\"outline-secondary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n              <ListGroup className=\"listOfTasksContainer\">\n                {displayAllContextMenus ? (\n                  <MenuItems\n                    tempPosition={tempPosition}\n                    menuOptionsList={menuOptionsList}\n                  ></MenuItems>\n                ) : null}\n\n                {displaySortingOptionsMenu ? (\n                  <MenuItems\n                    tempPosition={tempPosition}\n                    menuOptionsList={this.state.sortingOptions}\n                  ></MenuItems>\n                ) : null}\n                {displayTaskCtxMenu ? (\n                  <TaskContextMenu\n                    closeFn={endTimeCloseFn}\n                    changeFn={deadlineChangeFn}\n                    curDeadline={curDeadline}\n                    tempPosition={tempPosition}\n                  ></TaskContextMenu>\n                ) : null}\n                {displayLinkCtxMenu ? (\n                  <LinkContextMenu\n                    tempPosition={tempPosition}\n                    closeFn={linkCloseFn}\n                    saveFn={saveLinkFn}\n                    currentURL={currentURL}\n                    currentURLText={currentURLText}\n                    changeURLTextFn={changeURLTextFn}\n                    changeURLFn={changeURLFn}\n                  ></LinkContextMenu>\n                ) : null}\n                {displayLabelCtxMenu ? (\n                  <LabelContextMenu\n                    tempPosition={tempPosition}\n                    saveLabel={saveLabel}\n                    currentLabel={this.state.currentLabel}\n                    cancelSaveLabel={cancelSaveLabel}\n                    tempTask={this.state.tempTask}\n                    currentLabelChange={this.currentLabelChange}\n                    selectedLabelIdx={this.state.selectedLabelIdx}\n                    selectedLabelIdxChange={this.selectedLabelIdxChange}\n                    labels={this.state.labels}\n                    currentLabelChangeByClick={this.currentLabelChangeByClick}\n                  />\n                ) : null}\n                {displayDeleteCtxMenu ? (\n                  <DeleteContextMenu\n                    tempPosition={tempPosition}\n                    tempTask={this.state.tempTask}\n                    deleteTask={deleteTask}\n                    cancelDelete={this.cancelDelete}\n                  />\n                ) : null}\n                {this.state &&\n                  this.state.tasks.map(task => {\n                    return (\n                      <ListGroup.Item key={listId++}>\n                        {this.state.shouldShowColors ? (\n                          <div\n                            className={\"color-status \" + task.progressState}\n                          ></div>\n                        ) : null}\n                        <span\n                          className=\"task-title\"\n                          value={task.task}\n                          onClick={this.openTaskModal}\n                        >\n                          {task.task}\n                        </span>\n                        <div className=\"endTime\">\n                          {task.end ? Moment(task.end).format(\"LLLL\") : null}\n                        </div>\n                        <button\n                          //  {/*onClick={deleteTask} */}\n                          onClick={this.showDeleteContextMenu}\n                          value={task.task}\n                          className=\"menuItembutton\"\n                        />\n                        <div className=\"list-link\">\n                          <a href={\"https://\" + task.url} target=\"_blank\">\n                            {task.urlText}\n                          </a>\n                        </div>\n\n                        <button\n                          onClick={showDeadlineContextMenu}\n                          value={task.task}\n                          className=\"menuLinkbutton\"\n                        />\n                        {!task.label ? null : (\n                          <Badge\n                            className=\"genericLabel\"\n                            variant={badgeOptions[task.selectedLabelIdx]}\n                          >\n                            {task.label}\n                          </Badge>\n                        )}\n                        <Accordion defaultActiveKey=\"0\">\n                          <Card className=\"invisible-card\">\n                            <Accordion.Toggle\n                              className=\"accordion-toggle\"\n                              eventKey=\"1\"\n                            >\n                              <ProgressBar\n                                striped\n                                now={\n                                  !task.progressState\n                                    ? 10\n                                    : task.progressState === \"defined\"\n                                    ? 10\n                                    : task.progressState === \"inprogress\"\n                                    ? 60\n                                    : 100\n                                }\n                              />\n                              Status:{\" \"}\n                              {task.progressState\n                                ? task.progressState\n                                : \"Defined\"}\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                              <Card.Body className=\"invisible-card-body\">\n                                {\" \"}\n                                <select\n                                  className=\"custom-select\"\n                                  value={task.progressState}\n                                  task={task.task}\n                                  onChange={changeProgressState}\n                                >\n                                  <option value=\"defined\" key=\"0\">\n                                    Defined\n                                  </option>\n                                  <option value=\"inprogress\" key=\"1\">\n                                    In Progress\n                                  </option>\n                                  <option value=\"completed\" key=\"2\">\n                                    Completed\n                                  </option>\n                                </select>\n                              </Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        </Accordion>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </div>\n          ) : (\n            <FacebookLogin\n              appId=\"176625356093687\"\n              autoLoad={false}\n              callback={responseFacebook}\n              cssClass=\"my-facebook-button-class\"\n              fields=\"name,email,picture\"\n            />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}