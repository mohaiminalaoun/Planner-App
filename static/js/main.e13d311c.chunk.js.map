{"version":3,"sources":["assets/event.svg","animations/CompletedAnimation.js","animations/DeletedAnimation.js","MenuItems.js","contextMenus/withContextMenu.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","contextMenus/DeadlineContextMenu.js","contextMenus/ContextMenuContainer.js","db.js","TaskModal.js","Dashboard.js","TabSelector.js","LoginPage.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js"],"names":["module","exports","CompletedAnimation","props","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","show","className","options","height","width","DeletedAnimation","style","position","zIndex","top","left","transform","MenuItems","menuOptionsList","map","item","ListGroup","Item","key","text","onClick","divStyle","tempPosition","window","screen","id","withHOC","OriginalComponent","matchMedia","matches","console","log","this","right","marginLeft","marginRight","name","React","Component","isMobile","bottom","border","borderTopLeftRadius","borderTopRightRadius","boxShadow","Form","Group","controlId","FormControl","onChange","changeURLFn","value","currentURL","placeholder","aria-label","aria-describedby","changeURLTextFn","currentURLText","Button","variant","saveFn","closeFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","cancelDelete","deleteTask","tempTask","useState","Date","startDate","setStartDate","useEffect","datePickers","document","getElementsByClassName","Array","from","el","childNodes","setAttribute","selected","date","changeFn","toString","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","InputGroup","Append","ContextMenuContainer","displayAllContextMenus","displaySortingOptionsMenu","displayTaskCtxMenu","endTimeCloseFn","curDeadline","displayDeleteCtxMenu","displayLinkCtxMenu","displayLabelCtxMenu","linkCloseFn","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","put","userName","endTime","end","richText","then","state","Modal","onHide","centered","Header","closeButton","Title","Body","Label","Moment","currentModalTaskEnd","format","onRichTextChange","modules","toolbar","header","list","indent","formats","Footer","Dashboard","start","subtract","add","dates","firstDate","lastDate","dateSet","d","count","setState","endDate","values","titleForValue","v","TabSelector","shouldShowDashboard","hideDashboard","showDashboard","LoginPage","appId","autoLoad","callback","responseFacebook","cssClass","fields","App","componentDidMount","localStorage","getItem","res","Set","setItem","each","rec","url","urlText","progressState","facebookLoginDispatch","loggedin","length","logOutFacebook","removeItem","FB","logout","addToList","curTask","trim","closeAllCtxMenus","displayCurtain","handleInputChange","target","i","slice","concat","showDeletedAnimation","delete","setTimeout","showDeadlineContextMenu","clientX","clientY","deadlineChangeFn","time","firstMatch","saveLinkFn","changeProgressState","param","parentElement","classList","remove","showCompletedAnimation","showColors","curState","shouldShowColors","openTaskModal","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","curLabel","stateLabels","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","diff","undefined","showSortingOptionsMenu","showDeleteContextMenu","render","listId","badgeOptions","defaultChecked","currentTask","sortingOptions","src","eventIcon","href","Accordion","defaultActiveKey","Card","Toggle","eventKey","ProgressBar","striped","now","Collapse","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e13d311c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/event.90837826.svg\";","import React from \"react\";\nimport animationData from \"./completed.json\";\nimport Lottie from \"react-lottie\";\nimport \"./CompletedAnimation.scss\";\nconst CompletedAnimation = props => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n\n  if (props.show) {\n    return (\n      <div className=\"completed-animation\">\n        <Lottie options={defaultOptions} height={200} width={300} />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default CompletedAnimation;\n","import React from \"react\";\nimport animationData from \"./deleted.json\";\nimport Lottie from \"react-lottie\";\nconst DeletedAnimation = props => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid\"\n    }\n  };\n\n  const style = {\n    position: \"absolute\",\n    zIndex: \"4\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  };\n\n  if (props.show) {\n    return (\n      <div className=\"deleted-animation\" style={style}>\n        <Lottie options={defaultOptions} height={200} width={300} />\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default DeletedAnimation;\n","import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { Button, ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = props => {\n  const options = props.menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[0] + \"px\"\n          : props.tempPosition[0] - 100 + \"px\",\n      top:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[1] + \"px\"\n          : props.tempPosition[1] - 50 + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n        .matches;\n\n      if (isMobile) {\n        //Conditional script here\n        console.log(\"isMobile true\");\n      } else {\n        console.log(\"is mobile false\");\n      }\n\n      let { props } = this,\n        divStyle =\n          props.tempPosition[0] + 300 < window.screen.width\n            ? {\n                left: props.tempPosition[0] + \"px\",\n                top: props.tempPosition[1] + \"px\"\n              }\n            : {\n                left: \"0\",\n                right: \"0\",\n                top: \"40%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n\n  return (\n    <div className=\"linkContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"85%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n  return (\n    <div\n      className=\"deleteContextMenu\"\n      style={isMobile ? style : props.divStyle}\n    >\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import React, { useState, useEffect } from \"react\";\nimport \"./DeadlineContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DeadlineContextMenu = props => {\n  const [startDate, setStartDate] = useState(new Date());\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"10px\";\n    style.borderTopRightRadius = \"10px\";\n    style.width = \"100%\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.height = \"100px\";\n    style.boxShadow = \"0px 0px 20px 5px rgba(0, 0, 0, .2)\";\n  }\n\n  useEffect(() => {\n    if (isMobile) {\n      const datePickers = document.getElementsByClassName(\n        \"react-datepicker__input-container\"\n      );\n      Array.from(datePickers).forEach(el =>\n        el.childNodes[0].setAttribute(\"readOnly\", true)\n      );\n    }\n  });\n  return (\n    <>\n      <div\n        className=\"taskContextMenu\"\n        style={isMobile ? style : props.divStyle}\n      >\n        <DatePicker\n          selected={startDate}\n          onChange={date => {\n            setStartDate(date);\n            props.changeFn(date.toString());\n          }}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n        <span className=\"deadlont-text\">Select a deadline for the task</span>\n\n        {/*  <InputGroup className=\"mb-3\">\n          <FormControl\n            onChange={props.changeFn}\n            value={props.curDeadline}\n            placeholder=\"Hours\"\n            aria-label=\"Add deadline to task\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </InputGroup> */}\n        {\n          <InputGroup.Append>\n            <Button\n              className=\"deadline-close-btn\"\n              onClick={props.closeFn}\n              variant=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"deadline-ok-btn\"\n              onClick={() => {\n                props.changeFn(startDate);\n                props.closeFn();\n                console.log(startDate);\n              }}\n              variant=\"primary\"\n            >\n              Okay\n            </Button>\n          </InputGroup.Append>\n        }\n      </div>\n    </>\n  );\n};\n\nDeadlineContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(DeadlineContextMenu);\n","import React from \"react\";\n\nimport MenuItems from \"../MenuItems\";\nimport LinkContextMenu from \"./LinkContextMenu\";\nimport LabelContextMenu from \"./LabelContextMenu\";\nimport DeleteContextMenu from \"./DeleteContextMenu\";\nimport DeadlineContextMenu from \"./DeadlineContextMenu\";\n\nclass ContextMenuContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {\n      displayAllContextMenus,\n      tempPosition,\n      menuOptionsList,\n      displaySortingOptionsMenu,\n      displayTaskCtxMenu,\n      endTimeCloseFn,\n      changeFn,\n      curDeadline,\n      displayDeleteCtxMenu,\n      displayLinkCtxMenu,\n      displayLabelCtxMenu,\n      linkCloseFn,\n      saveFn,\n      currentURL,\n      currentURLText,\n      changeURLTextFn,\n      changeURLFn,\n      saveLabel,\n      currentLabel,\n      cancelSaveLabel,\n      tempTask,\n      currentLabelChange,\n      selectedLabelIdx,\n      selectedLabelIdxChange,\n      labels,\n      currentLabelChangeByClick,\n      deleteTask,\n      cancelDelete\n    } = this.props;\n    return (\n      <>\n        {displayAllContextMenus ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displaySortingOptionsMenu ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displayTaskCtxMenu ? (\n          <DeadlineContextMenu\n            closeFn={endTimeCloseFn}\n            changeFn={changeFn}\n            curDeadline={curDeadline}\n            tempPosition={tempPosition}\n          ></DeadlineContextMenu>\n        ) : null}\n        {displayLinkCtxMenu ? (\n          <LinkContextMenu\n            tempPosition={tempPosition}\n            closeFn={linkCloseFn}\n            saveFn={saveFn}\n            currentURL={currentURL}\n            currentURLText={currentURLText}\n            changeURLTextFn={changeURLTextFn}\n            changeURLFn={changeURLFn}\n          ></LinkContextMenu>\n        ) : null}\n        {displayLabelCtxMenu ? (\n          <LabelContextMenu\n            tempPosition={tempPosition}\n            saveLabel={saveLabel}\n            currentLabel={currentLabel}\n            cancelSaveLabel={cancelSaveLabel}\n            tempTask={tempTask}\n            currentLabelChange={currentLabelChange}\n            selectedLabelIdx={selectedLabelIdx}\n            selectedLabelIdxChange={selectedLabelIdxChange}\n            labels={labels}\n            currentLabelChangeByClick={currentLabelChangeByClick}\n          />\n        ) : null}\n        {displayDeleteCtxMenu ? (\n          <DeleteContextMenu\n            tempPosition={tempPosition}\n            tempTask={tempTask}\n            deleteTask={deleteTask}\n            cancelDelete={cancelDelete}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ContextMenuContainer;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n\n    let modules = {\n        toolbar: [\n          [{ header: [1, 2, false] }],\n          [\"bold\", \"italic\", \"underline\", \"strike\", \"code-block\"],\n          [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" }\n          ],\n          [\"clean\"]\n        ]\n      },\n      formats = [\n        \"header\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strike\",\n        \"code-block\",\n        \"list\",\n        \"bullet\",\n        \"indent\"\n      ];\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"task-modal-title\">\n            {props.currentModalTask}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n                modules={modules}\n                formats={formats}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\");\n    this.state = {\n      dates: [],\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n\n    for (let d in dateSet) {\n      dates.push({\n        date: d,\n        count: dateSet[d]\n      });\n    }\n    this.setState({\n      dates: dates\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={this.state.dates}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport \"./TabSelector.scss\";\nconst TabSelector = props => {\n  return (\n    <>\n      <Badge\n        className={\n          \"tabselector \" + (!props.shouldShowDashboard ? \"selected\" : \"\")\n        }\n        onClick={props.hideDashboard}\n      >\n        Tasks\n      </Badge>\n      <Badge\n        className={\n          \"tabselector \" + (props.shouldShowDashboard ? \"selected\" : \"\")\n        }\n        onClick={props.showDashboard}\n      >\n        Statistics\n      </Badge>\n    </>\n  );\n};\n\nexport default TabSelector;\n","import FacebookLogin from \"react-facebook-login\";\nimport React from \"react\";\nimport \"./LoginPage.scss\";\n\nconst LoginPage = props => {\n  return (\n    <>\n      <div className=\"login-welcome\">Welcome to Planner App</div>\n      <FacebookLogin\n        appId=\"176625356093687\"\n        autoLoad={false}\n        callback={props.responseFacebook}\n        cssClass=\"my-facebook-button-class\"\n        fields=\"name,email,picture\"\n      />\n    </>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport \"./App.scss\";\nimport \"react-toggle/style.css\"; // for ES6 modules\nimport Toggle from \"react-toggle\";\nimport eventIcon from \"./assets/event.svg\";\nimport CompletedAnimation from \"./animations/CompletedAnimation\";\nimport DeletedAnimation from \"./animations/DeletedAnimation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport TabSelector from \"./TabSelector\";\nimport LoginPage from \"./LoginPage\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      currentURL: \"\",\n      currentURLText: \"\",\n      showModal: false,\n      showCompletedAnimation: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      shouldShowDashboard: false,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Close\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n    // async function getStocks() {\n    //   let url =\n    //     \"https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=MSFT&interval=30min&apikey=1HZKQ8BEPBGQMTV0\";\n    //   let res = await fetch(url);\n    //   let text = await res.text();\n    //   console.log(text);\n    // }\n    // getStocks();\n  };\n\n  responseFacebook = res => {\n    let tasks = [],\n      labels = new Set(); // we're going to use a Set to store the labels\n    window.localStorage.setItem(\"todousername\", res.name);\n    db.tasks\n      .where(\"userName\")\n      .equalsIgnoreCase(res.name)\n      .each(rec => {\n        if (rec.label) {\n          labels.add(rec.label);\n        }\n        tasks.push({\n          task: rec.task,\n          end: rec.endTime,\n          url: rec.url,\n          urlText: rec.urlText,\n          progressState: rec.progressState,\n          label: rec.label,\n          selectedLabelIdx: rec.selectedLabelIdx\n        });\n      })\n      .then(() => {\n        this.props.facebookLoginDispatch({\n          loggedin: true,\n          userName: res.name\n        });\n        if (tasks.length === 0) {\n          tasks.push({\n            task: \"Add a task like this!\",\n            end: new Date(),\n            url: \"www.google.com\",\n            urlText: \"Add a link like this\",\n            progressState: \"progress\",\n            label: \"Label\",\n            selectedLabelIdx: 1\n          });\n        }\n        this.setState({\n          tasks: tasks,\n          labels: labels\n        });\n      });\n  };\n\n  logOutFacebook = () => {\n    window.localStorage.removeItem(\"todousername\");\n    window.FB.logout();\n    this.props.facebookLoginDispatch({\n      loggedin: false,\n      userName: \"User\"\n    });\n  };\n\n  addToList = ev => {\n    if (this.state.curTask.trim().length >= 1) {\n      let curTask = this.state.curTask;\n      let tasks = this.state.tasks;\n      tasks.push({\n        task: curTask\n      });\n      this.setState({\n        tasks: tasks,\n        curTask: \"\"\n      });\n      db.tasks.put({ userName: this.props.userName, task: curTask });\n    }\n  };\n\n  closeAllCtxMenus = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = ev => {\n    let val = ev.target.value;\n    if (val.length < 50) {\n      this.setState({\n        curTask: ev.target.value\n      });\n    }\n  };\n\n  deleteTask = tempTask => {\n    let tasks = this.state.tasks,\n      curTask = tempTask,\n      idx;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        idx = i;\n        break;\n      }\n    }\n\n    tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n    this.setState({\n      tasks: tasks,\n      showDeletedAnimation: true,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .delete();\n\n    setTimeout(() => {\n      this.setState({\n        showDeletedAnimation: false\n      });\n    }, 3000);\n  };\n\n  // Function to show the context menu\n  showDeadlineContextMenu = ev => {\n    this.setState({\n      displayAllContextMenus: true,\n      displayCurtain: window.screen.width < 500 ? false : true, // hack for mobile TODO: fix later\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  deadlineChangeFn = time => {\n    this.setState({\n      curDeadline: time\n    });\n  };\n\n  endTimeCloseFn = () => {\n    let tasks = this.state.tasks.concat();\n    let curTask = this.state.tempTask;\n    this.setState({\n      displayTaskCtxMenu: false\n    });\n    if (this.state.curDeadline) {\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].task === curTask) {\n          tasks[i].end = this.state.curDeadline;\n          break;\n        }\n      }\n      this.setState({\n        tasks: tasks\n      });\n\n      let firstMatch;\n      db.tasks\n        .where(\"task\")\n        .equalsIgnoreCase(curTask)\n        .first(item => {\n          //if (Number.isInteger(end)) {\n          firstMatch = item;\n          //let endTime = Moment().add(end, \"hour\");\n          console.log(\"putting this in the database\");\n          console.log(this.state.curDeadline);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            richText: firstMatch.richText,\n            endTime: this.state.curDeadline,\n            id: firstMatch.id,\n            label: firstMatch.label,\n            selectedLabelIdx: firstMatch.selectedLabelIdx\n          });\n          //  }\n        });\n    }\n    this.setState({\n      tempTask: \"\"\n      //curDeadline: \"\"\n    });\n  };\n\n  // Functions for the link\n  linkCloseFn = () => {\n    this.setState({\n      displayLinkCtxMenu: false,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  saveLinkFn = () => {\n    let { currentURL, currentURLText, tempTask } = this.state,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === tempTask) {\n        tasks[i].url = currentURL;\n        tasks[i].urlText = currentURLText;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(tempTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: tempTask,\n          endTime: firstMatch.endTime,\n          url: currentURL,\n          urlText: currentURLText,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  changeURLTextFn = ev => {\n    this.setState({\n      currentURLText: ev.target.value\n    });\n  };\n\n  changeURLFn = ev => {\n    this.setState({\n      currentURL: ev.target.value\n    });\n  };\n\n  // Function to save the state change of the task\n  changeProgressState = param => {\n    let progressState = param.currentTarget.value,\n      curTask = param.currentTarget.getAttribute(\"task\");\n    // TODO: make this better\n    param.currentTarget.parentElement.parentElement.classList.remove(\"show\");\n\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressState = progressState;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        if (item) {\n          let firstMatch = item;\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            endTime: firstMatch.endTime,\n            url: firstMatch.url,\n            urlText: firstMatch.urlText,\n            progressState: progressState,\n            id: firstMatch.id\n          });\n        }\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n\n    if (progressState === \"completed\") {\n      this.setState({\n        showCompletedAnimation: true\n      });\n      setTimeout(() => {\n        this.setState({\n          showCompletedAnimation: false\n        });\n      }, 4000);\n    }\n  };\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  showDashboard = () => {\n    this.setState({\n      shouldShowDashboard: true\n    });\n  };\n\n  hideDashboard = () => {\n    this.setState({\n      shouldShowDashboard: false\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item\n            ? item.task\n            : \"You'll see your task header here\",\n          currentModalTaskEnd: item ? item.endTime : \"Jan 24 2020 8:45pm EST\",\n          currentRichText: item\n            ? item.richText\n            : \"Here you can have a details section too! ^_^\"\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  saveLabel = () => {\n    let curLabel = this.state.currentLabel,\n      curTask = this.state.tempTask,\n      stateLabels = this.state.labels;\n    stateLabels.add(curLabel);\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: firstMatch.progressState,\n          id: firstMatch.id,\n          label: curLabel,\n          selectedLabelIdx: this.state.selectedLabelIdx\n        });\n      });\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].label = curLabel;\n        tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n        break;\n      }\n    }\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\",\n      tasks: tasks,\n      labels: stateLabels\n    });\n  };\n\n  cancelSaveLabel = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\"\n    });\n  };\n\n  currentLabelChange = v => {\n    this.setState({\n      currentLabel: v.currentTarget.value\n    });\n  };\n\n  selectedLabelIdxChange = v => {\n    this.setState({\n      selectedLabelIdx: v\n    });\n  };\n\n  currentLabelChangeByClick = v => {\n    this.setState({\n      currentLabel: v\n    });\n  };\n\n  sortTasksByLabel = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n        textB = (b.label && b.label.toUpperCase()) || \"Z\";\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  sortTasksByEndTime = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      if (!a.end) {\n        a.end = Moment(new Date()).subtract(10, \"years\");\n        a.removeEnd = true;\n      }\n      if (!b.end) {\n        b.end = Moment(new Date()).subtract(10, \"years\");\n        b.removeEnd = true;\n      }\n      return -1 * Moment(a.end).diff(Moment(b.end));\n    });\n    tasks.forEach(t => {\n      if (t.removeEnd) t.end = undefined;\n    });\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showSortingOptionsMenu = ev => {\n    this.setState({\n      displaySortingOptionsMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  render = () => {\n    let listId = 0,\n      {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeProgressState,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ];\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <CompletedAnimation show={this.state.showCompletedAnimation} />\n              <DeletedAnimation show={this.state.showDeletedAnimation} />\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                <div className=\"welcomeBar\">\n                  {\"Welcome \"}\n                  <span className=\"userName\">{userName}</span>\n                </div>\n                <div className=\"toggle-container\">\n                  <label>\n                    <Toggle\n                      defaultChecked={false}\n                      onChange={showColors}\n                      value={shouldShowColors}\n                    />\n                  </label>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TabSelector\n                shouldShowDashboard={this.state.shouldShowDashboard}\n                showDashboard={this.showDashboard}\n                hideDashboard={this.hideDashboard}\n              />\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              />\n              {this.state.shouldShowDashboard ? (\n                <Dashboard tasks={this.state.tasks} />\n              ) : null}\n              {this.state.shouldShowDashboard ? null : (\n                <>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      onChange={handleInputChange}\n                      value={curTask}\n                      placeholder=\"Add task to do\"\n                      aria-label=\"Add task to do\"\n                      aria-describedby=\"basic-addon2\"\n                    />\n                    <InputGroup.Append>\n                      <Button onClick={addToList} variant=\"outline-secondary\">\n                        Add\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <ContextMenuContainer\n                    cancelDelete={this.cancelDelete}\n                    cancelSaveLabel={cancelSaveLabel}\n                    changeFn={deadlineChangeFn}\n                    changeURLFn={changeURLFn}\n                    closeFn={linkCloseFn}\n                    curDeadline={curDeadline}\n                    currentLabel={this.state.currentLabel}\n                    currentLabelChange={this.currentLabelChange}\n                    currentLabelChangeByClick={this.currentLabelChangeByClick}\n                    currentURL={currentURL}\n                    currentURLText={currentURLText}\n                    changeURLTextFn={changeURLTextFn}\n                    deleteTask={deleteTask}\n                    displayAllContextMenus={displayAllContextMenus}\n                    displayDeleteCtxMenu={this.state.displayDeleteCtxMenu}\n                    displayLabelCtxMenu={this.state.displayLabelCtxMenu}\n                    displaySortingOptionsMenu={displaySortingOptionsMenu}\n                    displayTaskCtxMenu={displayTaskCtxMenu}\n                    displayLinkCtxMenu={displayLinkCtxMenu}\n                    endTimeCloseFn={endTimeCloseFn}\n                    labels={this.state.labels}\n                    linkCloseFn={linkCloseFn}\n                    menuOptionsList={\n                      displayAllContextMenus\n                        ? menuOptionsList\n                        : this.state.sortingOptions\n                    }\n                    saveFn={saveLinkFn}\n                    saveLabel={saveLabel}\n                    selectedLabelIdx={this.state.selectedLabelIdx}\n                    selectedLabelIdxChange={this.selectedLabelIdxChange}\n                    tempPosition={tempPosition}\n                    tempTask={this.state.tempTask}\n                  />\n\n                  <ListGroup className=\"listOfTasksContainer\">\n                    {this.state &&\n                      this.state.tasks.map(task => {\n                        return (\n                          <ListGroup.Item key={listId++}>\n                            {this.state.shouldShowColors ? (\n                              <div\n                                className={\"color-status \" + task.progressState}\n                              ></div>\n                            ) : null}\n                            <div\n                              className=\"task-title\"\n                              value={task.task}\n                              onClick={this.openTaskModal}\n                            >\n                              <span className=\"details-icon\">Details</span>\n                              {task.task}\n                            </div>\n                            {task.end ? (\n                              <>\n                                <img\n                                  className=\"calendar-icon\"\n                                  src={eventIcon}\n                                />\n                                <div className=\"endTime\">\n                                  {Moment(task.end).format(\"LLLL\")}\n                                </div>\n                              </>\n                            ) : null}\n\n                            <button\n                              onClick={this.showDeleteContextMenu}\n                              value={task.task}\n                              className=\"menuItembutton\"\n                            />\n                            <div className=\"list-link\">\n                              <a href={\"https://\" + task.url} target=\"_blank\">\n                                {task.urlText}\n                              </a>\n                            </div>\n\n                            <button\n                              onClick={showDeadlineContextMenu}\n                              value={task.task}\n                              className=\"menuLinkbutton\"\n                            />\n                            {!task.label ? null : (\n                              <Badge\n                                className=\"genericLabel\"\n                                variant={badgeOptions[task.selectedLabelIdx]}\n                              >\n                                {task.label}\n                              </Badge>\n                            )}\n                            <Accordion defaultActiveKey=\"0\">\n                              <Card className=\"invisible-card\">\n                                <Accordion.Toggle\n                                  className=\"accordion-toggle\"\n                                  eventKey=\"1\"\n                                >\n                                  <ProgressBar\n                                    striped\n                                    now={\n                                      !task.progressState\n                                        ? 10\n                                        : task.progressState === \"defined\"\n                                        ? 10\n                                        : task.progressState === \"inprogress\"\n                                        ? 60\n                                        : 100\n                                    }\n                                  />\n                                  Status:{\" \"}\n                                  {task.progressState\n                                    ? task.progressState\n                                    : \"Defined\"}\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                  <Card.Body className=\"invisible-card-body\">\n                                    {\" \"}\n                                    <select\n                                      className=\"custom-select\"\n                                      value={task.progressState}\n                                      task={task.task}\n                                      onChange={changeProgressState}\n                                    >\n                                      <option value=\"defined\" key=\"0\">\n                                        Defined\n                                      </option>\n                                      <option value=\"inprogress\" key=\"1\">\n                                        In Progress\n                                      </option>\n                                      <option value=\"completed\" key=\"2\">\n                                        Completed\n                                      </option>\n                                    </select>\n                                  </Card.Body>\n                                </Accordion.Collapse>\n                              </Card>\n                            </Accordion>\n                          </ListGroup.Item>\n                        );\n                      })}\n                  </ListGroup>\n                </>\n              )}\n            </div>\n          ) : (\n            <LoginPage responseFacebook={this.responseFacebook} />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}