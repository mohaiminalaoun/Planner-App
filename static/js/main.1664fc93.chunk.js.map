{"version":3,"sources":["MenuItems.js","contextMenus/withContextMenu.js","contextMenus/LinkContextMenu.js","contextMenus/LabelContextMenu.js","contextMenus/DeleteContextMenu.js","contextMenus/DeadlineContextMenu.js","contextMenus/ContextMenuContainer.js","db.js","TaskModal.js","Dashboard.js","App.js","serviceWorker.js","reducers/TasksReducer.js","index.js"],"names":["MenuItems","props","options","menuOptionsList","map","item","ListGroup","Item","className","key","text","onClick","divStyle","left","tempPosition","window","screen","width","top","id","style","withHOC","OriginalComponent","matchMedia","matches","console","log","this","right","marginLeft","marginRight","name","React","Component","isMobile","position","bottom","border","borderTopLeftRadius","borderTopRightRadius","Form","Group","controlId","FormControl","onChange","changeURLFn","value","currentURL","placeholder","aria-label","aria-describedby","changeURLTextFn","currentURLText","Button","variant","saveFn","closeFn","badgesDiv","idx","selectedLabelIdx","selectedLabelIdxChange","prevUsedLabels","labels","forEach","label","push","clickPrevUsedLabel","ev","currentLabelChangeByClick","currentTarget","getAttribute","prevUsedLabelsDisplay","Badge","currentLabel","currentLabelChange","saveLabel","cancelSaveLabel","cancelDelete","deleteTask","tempTask","useState","Date","startDate","setStartDate","height","useEffect","datePickers","document","getElementsByClassName","Array","from","el","childNodes","setAttribute","selected","date","changeFn","toString","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","InputGroup","Append","ContextMenuContainer","displayAllContextMenus","displaySortingOptionsMenu","displayTaskCtxMenu","endTimeCloseFn","curDeadline","displayDeleteCtxMenu","displayLinkCtxMenu","displayLabelCtxMenu","linkCloseFn","db","Dexie","version","stores","tasks","TaskModal","taskObj","t","task","currentModalTask","where","equalsIgnoreCase","first","put","userName","endTime","end","richText","then","state","Modal","show","onHide","centered","Header","closeButton","Title","Body","Label","Moment","currentModalTaskEnd","format","onRichTextChange","Footer","Dashboard","start","subtract","add","dates","firstDate","lastDate","dateSet","d","count","setState","endDate","values","titleForValue","v","App","componentDidMount","localStorage","getItem","responseFacebook","res","Set","setItem","each","rec","url","urlText","progressState","facebookLoginDispatch","loggedin","length","logOutFacebook","removeItem","FB","logout","addToList","curTask","trim","closeAllCtxMenus","displayCurtain","handleInputChange","target","i","slice","concat","delete","showDeadlineContextMenu","clientX","clientY","deadlineChangeFn","time","firstMatch","saveLinkFn","changeProgressState","param","parentElement","classList","remove","showColors","curState","shouldShowColors","openTaskModal","clickedTask","showModal","currentRichText","handleQuillClose","richTextChange","didRichTextChange","curLabel","stateLabels","sortTasksByLabel","sort","a","b","textA","toUpperCase","textB","sortTasksByEndTime","removeEnd","diff","undefined","showSortingOptionsMenu","showDeleteContextMenu","render","listId","badgeOptions","defaultChecked","currentTask","sortingOptions","href","Accordion","defaultActiveKey","Card","Toggle","eventKey","ProgressBar","striped","now","Collapse","appId","autoLoad","callback","cssClass","fields","connect","dispatch","info","type","payload","Boolean","location","hostname","match","initialState","ACT_TYPES","TasksReducer","action","Object","assign","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1664fc93.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MenuItems.scss\";\nimport PropTypes from \"prop-types\";\nimport { Button, ListGroup } from \"react-bootstrap\";\n\nconst MenuItems = props => {\n  const options = props.menuOptionsList.map(item => {\n      return (\n        <ListGroup.Item\n          className=\"menuOption\"\n          key={item.text}\n          onClick={item.onClick}\n        >\n          {item.text}\n        </ListGroup.Item>\n      );\n    }),\n    divStyle = {\n      left:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[0] + \"px\"\n          : props.tempPosition[0] - 100 + \"px\",\n      top:\n        props.tempPosition[0] + 150 < window.screen.width\n          ? props.tempPosition[1] + \"px\"\n          : props.tempPosition[1] - 50 + \"px\"\n    };\n  return (\n    <ListGroup className=\"menuItems\" id=\"menuItems\" style={divStyle}>\n      {options}\n    </ListGroup>\n  );\n};\n\nMenuItems.propTypes = {\n  tempPosition: PropTypes.array,\n  menuOptionsList: PropTypes.array\n};\n\nexport default MenuItems;\n","import React from \"react\";\nimport \"./ContextMenu.scss\";\nconst withHOC = OriginalComponent => {\n  class NewComponent extends React.Component {\n    render() {\n      let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n        .matches;\n\n      if (isMobile) {\n        //Conditional script here\n        console.log(\"isMobile true\");\n      } else {\n        console.log(\"is mobile false\");\n      }\n\n      let { props } = this,\n        divStyle =\n          props.tempPosition[0] + 300 < window.screen.width\n            ? {\n                left: props.tempPosition[0] + \"px\",\n                top: props.tempPosition[1] + \"px\"\n              }\n            : {\n                left: \"0\",\n                right: \"0\",\n                top: \"40%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              };\n      return (\n        <OriginalComponent\n          {...this.props}\n          divStyle={divStyle}\n          name=\"Mohaimin\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withHOC;\n","import React from \"react\";\nimport \"./LinkContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst LinkContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n  }\n\n  return (\n    <div className=\"linkContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddURL\">\n          <FormControl\n            onChange={props.changeURLFn}\n            value={props.currentURL}\n            placeholder=\"Add url\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formAddURLText\">\n          <FormControl\n            onChange={props.changeURLTextFn}\n            value={props.currentURLText}\n            placeholder=\"Add text to show\"\n            aria-label=\"Add text to show\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </Form.Group>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveFn}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.closeFn}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nLinkContextMenu.propTypes = {\n  changeURLFn: PropTypes.func,\n  currentURL: PropTypes.string,\n  changeURLTextFn: PropTypes.func,\n  currentURLText: PropTypes.string,\n  saveFn: PropTypes.func,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(LinkContextMenu);\n","import React from \"react\";\nimport \"./LabelContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { useState } from \"react\";\nimport { Form, Button, FormControl, Badge } from \"react-bootstrap\";\n\nconst LabelContextMenu = props => {\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.top = \"70%\";\n    style.width = \"100%\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"12px\";\n    style.borderTopRightRadius = \"12px\";\n  }\n  const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ],\n    badgesDiv = badgeOptions.map((item, idx) => (\n      <div\n        key={idx}\n        className={\n          \"badgeOption \" +\n          item +\n          (idx === props.selectedLabelIdx ? \" clicked\" : \"\")\n        }\n        onClick={() => {\n          props.selectedLabelIdxChange(idx);\n        }}\n      ></div>\n    )),\n    prevUsedLabels = [];\n  props.labels.forEach(label => {\n    prevUsedLabels.push(label);\n  });\n\n  const clickPrevUsedLabel = ev => {\n    props.currentLabelChangeByClick(ev.currentTarget.getAttribute(\"value\"));\n  };\n  let id = -1;\n  const prevUsedLabelsDisplay = prevUsedLabels.map(label => {\n    id++;\n    return (\n      <Badge\n        key={id}\n        className=\"prevUsedLabel\"\n        variant=\"warning\"\n        onClick={clickPrevUsedLabel}\n        value={label}\n      >\n        {label}\n      </Badge>\n    );\n  });\n  return (\n    <div className=\"labelContextMenu\" style={isMobile ? style : props.divStyle}>\n      <Form className=\"mb-3\">\n        <Form.Group controlId=\"formAddLabel\">\n          <FormControl\n            placeholder=\"Label\"\n            aria-label=\"Add url\"\n            aria-describedby=\"basic-addon2\"\n            value={props.currentLabel}\n            onChange={props.currentLabelChange}\n          />\n        </Form.Group>\n        <h6 className=\"badge-container-heading\">Choose color</h6>\n        <div className=\"badge-container\">{badgesDiv}</div>\n        <div className=\"prevBadgeContainer\">{prevUsedLabelsDisplay} </div>\n        <div>\n          <Button\n            variant=\"primary\"\n            className=\"okContextMenuBtn\"\n            onClick={props.saveLabel}\n          >\n            Ok\n          </Button>\n          <Button variant=\"secondary\" onClick={props.cancelSaveLabel}>\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default withHOC(LabelContextMenu);\n","import React from \"react\";\nimport withHOC from \"./withContextMenu\";\nimport \"./DeleteContextMenu.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst DeleteContextMenu = props => {\n  const delteButtonStyle = {\n    marginRight: \"8px\"\n  };\n  return (\n    <div className=\"deleteContextMenu\" style={props.divStyle}>\n      <div>Are you sure you want to delete this task?</div>\n      <Button\n        style={delteButtonStyle}\n        className=\"cancelDelete\"\n        variant=\"secondary\"\n        onClick={props.cancelDelete}\n      >\n        Cancel\n      </Button>\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.tempTask)}>\n        Delete task\n      </Button>\n    </div>\n  );\n};\n\nexport default withHOC(DeleteContextMenu);\n","import React, { useState, useEffect } from \"react\";\nimport \"./DeadlineContextMenu.scss\";\nimport PropTypes from \"prop-types\";\nimport withHOC from \"./withContextMenu\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DeadlineContextMenu = props => {\n  const [startDate, setStartDate] = useState(new Date());\n  let style = {};\n  let isMobile = window.matchMedia(\"only screen and (max-width: 760px)\")\n    .matches;\n  if (isMobile) {\n    style.position = \"absolute\";\n    style.border = \"1px solid lightgrey\";\n    style.borderTopLeftRadius = \"10px\";\n    style.borderTopRightRadius = \"10px\";\n    style.width = \"100%\";\n    style.bottom = \"0px\";\n    style.left = \"0px\";\n    style.height = \"100px\";\n  }\n\n  useEffect(() => {\n    if (isMobile) {\n      const datePickers = document.getElementsByClassName(\n        \"react-datepicker__input-container\"\n      );\n      Array.from(datePickers).forEach(el =>\n        el.childNodes[0].setAttribute(\"readOnly\", true)\n      );\n    }\n  });\n  return (\n    <>\n      <div\n        className=\"taskContextMenu\"\n        style={isMobile ? style : props.divStyle}\n      >\n        <DatePicker\n          selected={startDate}\n          onChange={date => {\n            setStartDate(date);\n            props.changeFn(date.toString());\n          }}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n        <span>Select a deadline for the task</span>\n\n        {/*  <InputGroup className=\"mb-3\">\n          <FormControl\n            onChange={props.changeFn}\n            value={props.curDeadline}\n            placeholder=\"Hours\"\n            aria-label=\"Add deadline to task\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </InputGroup> */}\n        {\n          <InputGroup.Append>\n            <Button\n              className=\"deadline-close-btn\"\n              onClick={props.closeFn}\n              variant=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"deadline-ok-btn\"\n              onClick={() => {\n                props.changeFn(startDate);\n                props.closeFn();\n                console.log(startDate);\n              }}\n              variant=\"primary\"\n            >\n              Okay\n            </Button>\n          </InputGroup.Append>\n        }\n      </div>\n    </>\n  );\n};\n\nDeadlineContextMenu.propTypes = {\n  changeFn: PropTypes.func,\n  tempPosition: PropTypes.array,\n  closeFn: PropTypes.func\n};\n\nexport default withHOC(DeadlineContextMenu);\n","import React from \"react\";\n\nimport MenuItems from \"../MenuItems\";\nimport LinkContextMenu from \"./LinkContextMenu\";\nimport LabelContextMenu from \"./LabelContextMenu\";\nimport DeleteContextMenu from \"./DeleteContextMenu\";\nimport DeadlineContextMenu from \"./DeadlineContextMenu\";\n\nclass ContextMenuContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let {\n      displayAllContextMenus,\n      tempPosition,\n      menuOptionsList,\n      displaySortingOptionsMenu,\n      displayTaskCtxMenu,\n      endTimeCloseFn,\n      changeFn,\n      curDeadline,\n      displayDeleteCtxMenu,\n      displayLinkCtxMenu,\n      displayLabelCtxMenu,\n      linkCloseFn,\n      saveFn,\n      currentURL,\n      currentURLText,\n      changeURLTextFn,\n      changeURLFn,\n      saveLabel,\n      currentLabel,\n      cancelSaveLabel,\n      tempTask,\n      currentLabelChange,\n      selectedLabelIdx,\n      selectedLabelIdxChange,\n      labels,\n      currentLabelChangeByClick,\n      deleteTask,\n      cancelDelete\n    } = this.props;\n    return (\n      <>\n        {displayAllContextMenus ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displaySortingOptionsMenu ? (\n          <MenuItems\n            tempPosition={tempPosition}\n            menuOptionsList={menuOptionsList}\n          ></MenuItems>\n        ) : null}\n        {displayTaskCtxMenu ? (\n          <DeadlineContextMenu\n            closeFn={endTimeCloseFn}\n            changeFn={changeFn}\n            curDeadline={curDeadline}\n            tempPosition={tempPosition}\n          ></DeadlineContextMenu>\n        ) : null}\n        {displayLinkCtxMenu ? (\n          <LinkContextMenu\n            tempPosition={tempPosition}\n            closeFn={linkCloseFn}\n            saveFn={saveFn}\n            currentURL={currentURL}\n            currentURLText={currentURLText}\n            changeURLTextFn={changeURLTextFn}\n            changeURLFn={changeURLFn}\n          ></LinkContextMenu>\n        ) : null}\n        {displayLabelCtxMenu ? (\n          <LabelContextMenu\n            tempPosition={tempPosition}\n            saveLabel={saveLabel}\n            currentLabel={currentLabel}\n            cancelSaveLabel={cancelSaveLabel}\n            tempTask={tempTask}\n            currentLabelChange={currentLabelChange}\n            selectedLabelIdx={selectedLabelIdx}\n            selectedLabelIdxChange={selectedLabelIdxChange}\n            labels={labels}\n            currentLabelChangeByClick={currentLabelChangeByClick}\n          />\n        ) : null}\n        {displayDeleteCtxMenu ? (\n          <DeleteContextMenu\n            tempPosition={tempPosition}\n            tempTask={tempTask}\n            deleteTask={deleteTask}\n            cancelDelete={cancelDelete}\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ContextMenuContainer;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"Planner\");\ndb.version(1).stores({ tasks: \"++id, userName, task\" });\n\nexport default db;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport ReactQuill from \"react-quill\";\nimport \"./TaskModal.scss\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport { Button, InputGroup, Form, Modal } from \"react-bootstrap\";\nimport db from \"./db\";\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.richText || \"\"\n    };\n  }\n\n  closeFn = () => {\n    let taskObj = null;\n    this.props.tasks.forEach(t => {\n      if (t.task === this.props.currentModalTask) {\n        taskObj = t;\n      }\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(this.props.currentModalTask)\n      .first(item => {\n        if (item) {\n          console.log(`found item`);\n          db.tasks.put({\n            userName: this.props.userName,\n            task: this.props.currentModalTask,\n            endTime: taskObj.end,\n            richText: this.props.richText,\n            id: item.id,\n            label: item.label,\n            selectedLabelIdx: item.selectedLabelIdx\n          });\n        }\n      })\n      .then(() => {\n        this.props.closeFn();\n      });\n  };\n  render() {\n    let props = this.props;\n    return (\n      <Modal show={props.show} onHide={props.onHide} centered>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"task-modal-title\">\n            {props.currentModalTask}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>\n              {props.currentModalTask &&\n                \"Due by: \" + Moment(props.currentModalTaskEnd).format(\"LLLL\")}\n            </Form.Label>\n            {\n              <ReactQuill\n                value={props.richText || \"\"}\n                onChange={props.onRichTextChange}\n              />\n            }\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeFn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.closeFn}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default TaskModal;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as PieChart from \"./charts/PieChart\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport Moment from \"moment\";\nimport { Badge } from \"react-bootstrap\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    let start = Moment(new Date())\n        .subtract(30, \"days\")\n        .format(\"YYYY-MM-DD\"),\n      end = Moment(new Date())\n        .add(100, \"days\")\n        .format(\"YYYY-MM-DD\");\n    this.state = {\n      dates: [],\n      firstDate: start,\n      lastDate: end\n    };\n  }\n\n  componentDidMount() {\n    //PieChart.createPieChart(this.props, \"label\");\n    //PieChart.createPieChart(this.props, \"label\");\n    let dateSet = {},\n      dates = [];\n    this.props.tasks.forEach(t => {\n      if (t.end) {\n        let date = Moment(t.end).format(\"YYYY-MM-DD\");\n        dateSet[date] = dateSet[date] ? dateSet[date] + 1 : 1;\n      }\n    });\n\n    for (let d in dateSet) {\n      dates.push({\n        date: d,\n        count: dateSet[d]\n      });\n    }\n    this.setState({\n      dates: dates\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        {/*<div id=\"mypie\"></div>\n      </div>*/}\n        <CalendarHeatmap\n          startDate={new Date(this.state.firstDate || \"2020-01-01\")}\n          endDate={new Date(this.state.lastDate || \"2020-06-12\")}\n          values={this.state.dates}\n          titleForValue={v => {\n            return v && `${v.date} : ${v.count} tasks`;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Moment from \"moment\";\nimport \"./App.scss\";\nimport \"react-toggle/style.css\"; // for ES6 modules\nimport Toggle from \"react-toggle\";\n\nimport FacebookLogin from \"react-facebook-login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContextMenuContainer from \"./contextMenus/ContextMenuContainer\";\nimport TaskModal from \"./TaskModal\";\nimport Dashboard from \"./Dashboard\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ListGroup,\n  InputGroup,\n  FormControl,\n  Accordion,\n  Card,\n  ProgressBar,\n  Badge\n} from \"react-bootstrap\";\nimport db from \"./db\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curDeadline: \"\",\n      tasks: [],\n      shouldShowColors: false,\n      tempPosition: [],\n      curTask: \"\",\n      tempTask: \"\",\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayTaskCtxMenu: false,\n      displayLinkCtxMenu: false,\n      displayLabelCtxMenu: false,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false,\n      currentURL: \"\",\n      currentURLText: \"\",\n      showModal: false,\n      currentModalTask: {},\n      currentRichText: \"\",\n      currentLabel: \"\",\n      didRichTextChange: false,\n      selectedLabelIdx: 0,\n      labels: new Set(),\n      menuOptionsList: [\n        {\n          text: \"Add deadline\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayTaskCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add link\",\n          onClick: () => {\n            this.setState({\n              displayAllContextMenus: false,\n              displayLinkCtxMenu: true,\n              displayCurtain: false\n            });\n          }\n        },\n        {\n          text: \"Add Label\",\n          onClick: () => {\n            let curLabel = \"\";\n            this.state.tasks.forEach(task => {\n              if (task.task === this.state.tempTask) {\n                curLabel = task.label;\n              }\n            });\n            this.setState({\n              displayAllContextMenus: false,\n              displayLabelCtxMenu: true,\n              currentLabel: curLabel,\n              displayCurtain: false\n            });\n          }\n        }\n      ],\n      sortingOptions: [\n        {\n          text: \"Sort By Label\",\n          onClick: () => {\n            this.sortTasksByLabel();\n          }\n        },\n        {\n          text: \"Sort By Deadline\",\n          onClick: () => {\n            this.sortTasksByEndTime();\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    if (window.localStorage.getItem(\"todousername\") !== null) {\n      this.responseFacebook({\n        name: window.localStorage.getItem(\"todousername\")\n      });\n    }\n    // async function getStocks() {\n    //   let url =\n    //     \"https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY&symbol=MSFT&interval=30min&apikey=1HZKQ8BEPBGQMTV0\";\n    //   let res = await fetch(url);\n    //   let text = await res.text();\n    //   console.log(text);\n    // }\n    // getStocks();\n  };\n\n  responseFacebook = res => {\n    let tasks = [],\n      labels = new Set(); // we're going to use a Set to store the labels\n    window.localStorage.setItem(\"todousername\", res.name);\n    db.tasks\n      .where(\"userName\")\n      .equalsIgnoreCase(res.name)\n      .each(rec => {\n        if (rec.label) {\n          labels.add(rec.label);\n        }\n        tasks.push({\n          task: rec.task,\n          end: rec.endTime,\n          url: rec.url,\n          urlText: rec.urlText,\n          progressState: rec.progressState,\n          label: rec.label,\n          selectedLabelIdx: rec.selectedLabelIdx\n        });\n      })\n      .then(() => {\n        this.props.facebookLoginDispatch({\n          loggedin: true,\n          userName: res.name\n        });\n        if (tasks.length === 0) {\n          tasks.push({\n            task: \"Add a task like this!\",\n            end: new Date(),\n            url: \"www.google.com\",\n            urlText: \"Add a link like this\",\n            progressState: \"progress\",\n            label: \"Label\",\n            selectedLabelIdx: 1\n          });\n        }\n        this.setState({\n          tasks: tasks,\n          labels: labels\n        });\n      });\n  };\n\n  logOutFacebook = () => {\n    window.localStorage.removeItem(\"todousername\");\n    window.FB.logout();\n    this.props.facebookLoginDispatch({\n      loggedin: false,\n      userName: \"User\"\n    });\n  };\n\n  addToList = ev => {\n    if (this.state.curTask.trim().length >= 1) {\n      let curTask = this.state.curTask;\n      let tasks = this.state.tasks;\n      tasks.push({\n        task: curTask\n      });\n      this.setState({\n        tasks: tasks,\n        curTask: \"\"\n      });\n      db.tasks.put({ userName: this.props.userName, task: curTask });\n    }\n  };\n\n  closeAllCtxMenus = () => {\n    console.log(\"clicked close all context menus fn\");\n    this.setState({\n      displayAllContextMenus: false,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false,\n      displayDeleteCtxMenu: false\n    });\n  };\n\n  handleInputChange = ev => {\n    let val = ev.target.value;\n    if (val.length < 50) {\n      this.setState({\n        curTask: ev.target.value\n      });\n    }\n  };\n\n  deleteTask = tempTask => {\n    let tasks = this.state.tasks,\n      curTask = tempTask,\n      idx;\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        idx = i;\n        break;\n      }\n    }\n\n    tasks = tasks.slice(0, idx).concat(tasks.slice(idx + 1, tasks.length));\n\n    this.setState({\n      tasks: tasks,\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .delete();\n  };\n\n  // Function to show the context menu\n  showDeadlineContextMenu = ev => {\n    this.setState({\n      displayAllContextMenus: true,\n      displayCurtain: window.screen.width < 500 ? false : true, // hack for mobile TODO: fix later\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  deadlineChangeFn = time => {\n    this.setState({\n      curDeadline: time\n    });\n  };\n\n  endTimeCloseFn = () => {\n    let tasks = this.state.tasks.concat();\n    let curTask = this.state.tempTask;\n    this.setState({\n      displayTaskCtxMenu: false\n    });\n    if (this.state.curDeadline) {\n      for (let i = 0; i < tasks.length; i++) {\n        if (tasks[i].task === curTask) {\n          tasks[i].end = this.state.curDeadline;\n          break;\n        }\n      }\n      this.setState({\n        tasks: tasks\n      });\n\n      let firstMatch;\n      db.tasks\n        .where(\"task\")\n        .equalsIgnoreCase(curTask)\n        .first(item => {\n          //if (Number.isInteger(end)) {\n          firstMatch = item;\n          //let endTime = Moment().add(end, \"hour\");\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            richText: firstMatch.richText,\n            endTime: this.state.curDeadline,\n            id: firstMatch.id,\n            label: firstMatch.label,\n            selectedLabelIdx: firstMatch.selectedLabelIdx\n          });\n          //  }\n        });\n    }\n    this.setState({\n      tempTask: \"\",\n      curDeadline: \"\"\n    });\n  };\n\n  // Functions for the link\n  linkCloseFn = () => {\n    this.setState({\n      displayLinkCtxMenu: false,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  saveLinkFn = () => {\n    let { currentURL, currentURLText, tempTask } = this.state,\n      tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === tempTask) {\n        tasks[i].url = currentURL;\n        tasks[i].urlText = currentURLText;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(tempTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: tempTask,\n          endTime: firstMatch.endTime,\n          url: currentURL,\n          urlText: currentURLText,\n          id: firstMatch.id\n        });\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  changeURLTextFn = ev => {\n    this.setState({\n      currentURLText: ev.target.value\n    });\n  };\n\n  changeURLFn = ev => {\n    this.setState({\n      currentURL: ev.target.value\n    });\n  };\n\n  // Function to save the state change of the task\n  changeProgressState = param => {\n    let progressState = param.currentTarget.value,\n      curTask = param.currentTarget.getAttribute(\"task\");\n    // TODO: make this better\n    param.currentTarget.parentElement.parentElement.classList.remove(\"show\");\n\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].progressState = progressState;\n        break;\n      }\n    }\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        if (item) {\n          let firstMatch = item;\n          db.tasks.put({\n            userName: this.props.userName,\n            task: curTask,\n            endTime: firstMatch.endTime,\n            url: firstMatch.url,\n            urlText: firstMatch.urlText,\n            progressState: progressState,\n            id: firstMatch.id\n          });\n        }\n      });\n    this.setState({\n      displayLinkCtxMenu: false,\n      tasks: tasks,\n      currentURL: \"\",\n      currentURLText: \"\"\n    });\n  };\n\n  showColors = ev => {\n    let curState = ev.currentTarget.value === \"true\";\n    this.setState({\n      shouldShowColors: !curState\n    });\n  };\n\n  openTaskModal = ev => {\n    let clickedTask = ev.currentTarget.getAttribute(\"value\");\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(clickedTask)\n      .first(item => {\n        this.setState({\n          showModal: true,\n          currentModalTask: item\n            ? item.task\n            : \"You'll see your task header here\",\n          currentModalTaskEnd: item ? item.endTime : \"Jan 24 2020 8:45pm EST\",\n          currentRichText: item\n            ? item.richText\n            : \"Here you can have a details section too! ^_^\"\n        });\n      });\n  };\n\n  handleQuillClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  /*function to change current rich text (passed to the modal)*/\n  richTextChange = v => {\n    this.setState({\n      currentRichText: v,\n      didRichTextChange: true\n    });\n  };\n\n  saveLabel = () => {\n    let curLabel = this.state.currentLabel,\n      curTask = this.state.tempTask,\n      stateLabels = this.state.labels;\n    stateLabels.add(curLabel);\n    db.tasks\n      .where(\"task\")\n      .equalsIgnoreCase(curTask)\n      .first(item => {\n        let firstMatch = item;\n        db.tasks.put({\n          userName: this.props.userName,\n          task: curTask,\n          endTime: firstMatch.endTime,\n          url: firstMatch.url,\n          urlText: firstMatch.urlText,\n          progressState: firstMatch.progressState,\n          id: firstMatch.id,\n          label: curLabel,\n          selectedLabelIdx: this.state.selectedLabelIdx\n        });\n      });\n    let tasks = this.state.tasks.concat();\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].task === curTask) {\n        tasks[i].label = curLabel;\n        tasks[i].selectedLabelIdx = this.state.selectedLabelIdx;\n        break;\n      }\n    }\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\",\n      tasks: tasks,\n      labels: stateLabels\n    });\n  };\n\n  cancelSaveLabel = () => {\n    this.setState({\n      displayAllContextMenus: false,\n      displayLabelCtxMenu: false,\n      currentLabel: \"\"\n    });\n  };\n\n  currentLabelChange = v => {\n    this.setState({\n      currentLabel: v.currentTarget.value\n    });\n  };\n\n  selectedLabelIdxChange = v => {\n    this.setState({\n      selectedLabelIdx: v\n    });\n  };\n\n  currentLabelChangeByClick = v => {\n    this.setState({\n      currentLabel: v\n    });\n  };\n\n  sortTasksByLabel = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      let textA = (a.label && a.label.toUpperCase()) || \"Z\",\n        textB = (b.label && b.label.toUpperCase()) || \"Z\";\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  sortTasksByEndTime = () => {\n    let tasks = this.state.tasks;\n    tasks.sort(function(a, b) {\n      if (!a.end) {\n        a.end = Moment(new Date()).subtract(10, \"years\");\n        a.removeEnd = true;\n      }\n      if (!b.end) {\n        b.end = Moment(new Date()).subtract(10, \"years\");\n        b.removeEnd = true;\n      }\n      return -1 * Moment(a.end).diff(Moment(b.end));\n    });\n    tasks.forEach(t => {\n      if (t.removeEnd) t.end = undefined;\n    });\n    this.setState({\n      tasks: tasks,\n      displaySortingOptionsMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  showSortingOptionsMenu = ev => {\n    this.setState({\n      displaySortingOptionsMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  showDeleteContextMenu = ev => {\n    this.setState({\n      displayDeleteCtxMenu: true,\n      displayCurtain: window.screen.width > 500 ? true : false,\n      tempTask: ev.currentTarget.value,\n      tempPosition: [ev.clientX, ev.clientY]\n    });\n  };\n\n  cancelDelete = () => {\n    this.setState({\n      displayDeleteCtxMenu: false,\n      displayCurtain: false\n    });\n  };\n\n  render = () => {\n    let listId = 0,\n      {\n        curDeadline,\n        currentURL,\n        currentURLText,\n        curTask,\n        displayAllContextMenus,\n        displaySortingOptionsMenu,\n        displayLinkCtxMenu,\n        displayTaskCtxMenu,\n        displayLabelCtxMenu,\n        displayDeleteCtxMenu,\n        menuOptionsList,\n        tempPosition,\n        shouldShowColors\n      } = this.state,\n      {\n        addToList,\n        changeProgressState,\n        changeURLFn,\n        changeURLTextFn,\n        closeAllCtxMenus,\n        endTimeCloseFn,\n        deadlineChangeFn,\n        deleteTask,\n        handleInputChange,\n        linkCloseFn,\n        responseFacebook,\n        saveLinkFn,\n        showDeadlineContextMenu,\n        showColors,\n        saveLabel,\n        cancelSaveLabel,\n        showSortingOptionsMenu\n      } = this;\n\n    let { loggedin, userName } = this.props;\n\n    const badgeOptions = [\n      \"secondary\",\n      \"success\",\n      \"danger\",\n      \"warning\",\n      \"info\",\n      \"light\",\n      \"dark\"\n    ];\n\n    return (\n      <>\n        {this.state.displayCurtain ? (\n          <div className=\"curtain\" onClick={closeAllCtxMenus}></div>\n        ) : null}\n        <div className=\"App\">\n          {loggedin ? (\n            <div className=\"checklist-container\">\n              <Button\n                variant=\"secondary\"\n                className=\"logout-button\"\n                onClick={this.logOutFacebook}\n              >\n                {\"Log out\"}\n              </Button>\n              <div className=\"nameHeader\">\n                <div className=\"welcomeBar\">\n                  {\"Welcome \"}\n                  <span className=\"userName\">{userName}</span>\n                </div>\n                <div className=\"toggle-container\">\n                  <label>\n                    <Toggle\n                      defaultChecked={false}\n                      onChange={showColors}\n                      value={shouldShowColors}\n                    />\n                  </label>\n                </div>\n                <button\n                  onClick={showSortingOptionsMenu}\n                  className=\"sortIcon\"\n                ></button>\n              </div>\n              <TaskModal\n                show={this.state.showModal}\n                onHide={this.handleQuillClose}\n                tasks={this.state.tasks}\n                task={this.state.currentTask}\n                userName={this.props.userName}\n                onRichTextChange={this.richTextChange}\n                currentModalTask={this.state.currentModalTask}\n                currentModalTaskEnd={this.state.currentModalTaskEnd}\n                didRichTextChange={this.state.didRichTextChange}\n                richText={this.state.currentRichText}\n                closeFn={this.handleQuillClose}\n              ></TaskModal>\n              {this.state.shouldShowColors ? (\n                <Dashboard tasks={this.state.tasks} />\n              ) : null}\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  onChange={handleInputChange}\n                  value={curTask}\n                  placeholder=\"Add task to do\"\n                  aria-label=\"Add task to do\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <InputGroup.Append>\n                  <Button onClick={addToList} variant=\"outline-secondary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n              <ContextMenuContainer\n                cancelDelete={this.cancelDelete}\n                cancelSaveLabel={cancelSaveLabel}\n                changeFn={deadlineChangeFn}\n                changeURLFn={changeURLFn}\n                closeFn={linkCloseFn}\n                curDeadline={curDeadline}\n                currentLabel={this.state.currentLabel}\n                currentLabelChange={this.currentLabelChange}\n                currentLabelChangeByClick={this.currentLabelChangeByClick}\n                currentURL={currentURL}\n                currentURLText={currentURLText}\n                changeURLTextFn={changeURLTextFn}\n                deleteTask={deleteTask}\n                displayAllContextMenus={displayAllContextMenus}\n                displayDeleteCtxMenu={this.state.displayDeleteCtxMenu}\n                displayLabelCtxMenu={this.state.displayLabelCtxMenu}\n                displaySortingOptionsMenu={displaySortingOptionsMenu}\n                displayTaskCtxMenu={displayTaskCtxMenu}\n                displayLinkCtxMenu={displayLinkCtxMenu}\n                endTimeCloseFn={endTimeCloseFn}\n                labels={this.state.labels}\n                linkCloseFn={linkCloseFn}\n                menuOptionsList={\n                  displayAllContextMenus\n                    ? menuOptionsList\n                    : this.state.sortingOptions\n                }\n                saveFn={saveLinkFn}\n                saveLabel={saveLabel}\n                selectedLabelIdx={this.state.selectedLabelIdx}\n                selectedLabelIdxChange={this.selectedLabelIdxChange}\n                tempPosition={tempPosition}\n                tempTask={this.state.tempTask}\n              />\n              <ListGroup className=\"listOfTasksContainer\">\n                {this.state &&\n                  this.state.tasks.map(task => {\n                    return (\n                      <ListGroup.Item key={listId++}>\n                        {this.state.shouldShowColors ? (\n                          <div\n                            className={\"color-status \" + task.progressState}\n                          ></div>\n                        ) : null}\n                        <span\n                          className=\"task-title\"\n                          value={task.task}\n                          onClick={this.openTaskModal}\n                        >\n                          {task.task}\n                        </span>\n                        <div className=\"endTime\">\n                          {task.end ? Moment(task.end).format(\"LLLL\") : null}\n                        </div>\n                        <button\n                          onClick={this.showDeleteContextMenu}\n                          value={task.task}\n                          className=\"menuItembutton\"\n                        />\n                        <div className=\"list-link\">\n                          <a href={\"https://\" + task.url} target=\"_blank\">\n                            {task.urlText}\n                          </a>\n                        </div>\n\n                        <button\n                          onClick={showDeadlineContextMenu}\n                          value={task.task}\n                          className=\"menuLinkbutton\"\n                        />\n                        {!task.label ? null : (\n                          <Badge\n                            className=\"genericLabel\"\n                            variant={badgeOptions[task.selectedLabelIdx]}\n                          >\n                            {task.label}\n                          </Badge>\n                        )}\n                        <Accordion defaultActiveKey=\"0\">\n                          <Card className=\"invisible-card\">\n                            <Accordion.Toggle\n                              className=\"accordion-toggle\"\n                              eventKey=\"1\"\n                            >\n                              <ProgressBar\n                                striped\n                                now={\n                                  !task.progressState\n                                    ? 10\n                                    : task.progressState === \"defined\"\n                                    ? 10\n                                    : task.progressState === \"inprogress\"\n                                    ? 60\n                                    : 100\n                                }\n                              />\n                              Status:{\" \"}\n                              {task.progressState\n                                ? task.progressState\n                                : \"Defined\"}\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey=\"1\">\n                              <Card.Body className=\"invisible-card-body\">\n                                {\" \"}\n                                <select\n                                  className=\"custom-select\"\n                                  value={task.progressState}\n                                  task={task.task}\n                                  onChange={changeProgressState}\n                                >\n                                  <option value=\"defined\" key=\"0\">\n                                    Defined\n                                  </option>\n                                  <option value=\"inprogress\" key=\"1\">\n                                    In Progress\n                                  </option>\n                                  <option value=\"completed\" key=\"2\">\n                                    Completed\n                                  </option>\n                                </select>\n                              </Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        </Accordion>\n                      </ListGroup.Item>\n                    );\n                  })}\n              </ListGroup>\n            </div>\n          ) : (\n            <FacebookLogin\n              appId=\"176625356093687\"\n              autoLoad={false}\n              callback={responseFacebook}\n              cssClass=\"my-facebook-button-class\"\n              fields=\"name,email,picture\"\n            />\n          )}\n        </div>\n      </>\n    );\n  };\n}\nconst mapStateToProps = state => ({\n  loggedin: state.loggedin,\n  userName: state.userName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    facebookLoginDispatch: info => {\n      dispatch({ type: \"facebookLogin\", payload: info });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    loggedin: false,\n    userName: \"\"\n  },\n  ACT_TYPES = {\n    FACEBOOK_LOGIN: \"facebookLogin\"\n  };\n\nconst TasksReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  if (type === \"undefined\") {\n    return state;\n  } else if (type === ACT_TYPES.FACEBOOK_LOGIN) {\n    return Object.assign({}, initialState, {\n      loggedin: payload.loggedin,\n      userName: payload.userName\n    });\n  }\n  return state;\n};\n\nexport default TasksReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TasksReducer from \"./reducers/TasksReducer\";\n\nconst store = createStore(\n  TasksReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}